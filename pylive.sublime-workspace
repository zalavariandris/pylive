{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"target",
				"target_node"
			],
			[
				"source",
				"source_node"
			],
			[
				"handleE",
				"handleEdgesPropertiesChanged"
			],
			[
				"edgesa",
				"edgesAboutToBeRemoved"
			],
			[
				"handleNo",
				"handleNodesRemoved"
			],
			[
				"nodesR",
				"nodesAboutToBeRemoved"
			],
			[
				"mouse",
				"mousePressEvent"
			],
			[
				"make_uni",
				"make_unique_name"
			],
			[
				"QSize",
				"QSizeF"
			],
			[
				"Gra",
				"GraphView"
			],
			[
				"grap",
				"graph_model"
			],
			[
				"size",
				"sizeHint"
			],
			[
				"Graph",
				"GraphView"
			],
			[
				"rea",
				"read_text"
			],
			[
				"graphmod",
				"graphmodel"
			],
			[
				"graph",
				"graphmodel"
			],
			[
				"add",
				"addMenu"
			],
			[
				"map",
				"mapToScene"
			],
			[
				"mapF",
				"mapFromGlobal"
			],
			[
				"crea",
				"createStandardContextMenu"
			],
			[
				"QgraphicsA",
				"QGraphicsArrowItem"
			],
			[
				"Abstra",
				"AbstractGraphDelegate"
			],
			[
				"color",
				"ColorRole"
			],
			[
				"setP",
				"setPen"
			],
			[
				"QGra",
				"QGraphicsLayout"
			],
			[
				"QGraphics",
				"QGraphicsScene"
			],
			[
				"item",
				"_item_to_widget_map"
			],
			[
				"Grap",
				"GraphicsItemFlag"
			],
			[
				"base",
				"AlternateBase"
			],
			[
				"Abstr",
				"AbstractGraphDelegate"
			],
			[
				"ty",
				"typing"
			],
			[
				"QPainter",
				"QPainterPath"
			],
			[
				"set",
				"setColor"
			],
			[
				"len",
				"length"
			],
			[
				"mapFrom",
				"mapFromItem"
			],
			[
				"_boun",
				"_boundingrect"
			],
			[
				"QRec",
				"QRectF"
			],
			[
				"rect",
				"rect_shape"
			],
			[
				"update",
				"updatePosition"
			],
			[
				"addP",
				"addPolygon"
			],
			[
				"poly",
				"polygon"
			],
			[
				"QPol",
				"QPolygonF"
			],
			[
				"tar",
				"target_offset"
			],
			[
				"str",
				"createStroke"
			],
			[
				"shape_",
				"shape_center"
			],
			[
				"Itemsend",
				"ItemSendsScenePositionChanges"
			],
			[
				"fla",
				"GraphicsItemFlag"
			],
			[
				"scenePos",
				"scenePositionChanged"
			],
			[
				"sceneP",
				"scenePositionChanged"
			],
			[
				"isin",
				"isinstance"
			],
			[
				"setS",
				"setSource"
			],
			[
				"Qpoint",
				"QPointF"
			],
			[
				"QPainterP",
				"QPainterPathStroker"
			],
			[
				"sc",
				"scene"
			],
			[
				"Qpainter",
				"QPainterPath"
			],
			[
				"QPoint",
				"QPointF"
			],
			[
				"adjus",
				"adjusted"
			],
			[
				"Graphis",
				"GraphicsItemFlag"
			],
			[
				"group",
				"group_widget"
			],
			[
				"send",
				"ItemSendsScenePositionChanges"
			],
			[
				"Grpahi",
				"GraphicsItemFlag"
			],
			[
				"flag",
				"GraphicsItemFlag"
			],
			[
				"QGrap",
				"QGraphicsItem"
			],
			[
				"handleEdges",
				"handleEdgesAdded"
			],
			[
				"graphmodel",
				"graphmodel_databased"
			],
			[
				"pa",
				"parent"
			],
			[
				"line",
				"lineCount"
			],
			[
				"inser",
				"insertBar"
			],
			[
				"cell",
				"cell_at_line"
			],
			[
				"Code",
				"CodeHasDocstring"
			],
			[
				"assertNo",
				"assertNotEqual"
			],
			[
				"Script",
				"ScriptEdit"
			],
			[
				"end",
				"end_block"
			],
			[
				"begin",
				"begin_rect"
			],
			[
				"find",
				"findBlockByLineNumber"
			],
			[
				"Modi",
				"KeyboardModifier"
			],
			[
				"QKey",
				"QKeyEvent"
			],
			[
				"curr",
				"currentBlockState"
			],
			[
				"current",
				"currentBlockState"
			],
			[
				"curren",
				"currentBlockState"
			],
			[
				"list",
				"listwidget"
			],
			[
				"setCi",
				"setCurrentIndex"
			],
			[
				"file",
				"fileChanged"
			],
			[
				"QMenu",
				"QMenuBar"
			],
			[
				"parent",
				"parentWidget"
			],
			[
				"QMeu",
				"QMenuBar"
			],
			[
				"QPlainTe",
				"QPlainTextDocumentLayout"
			],
			[
				"LiveA",
				"QtLiveApp"
			],
			[
				"NotIm",
				"NotImplementedError"
			],
			[
				"LiveAppW",
				"LiveAppWithExec"
			],
			[
				"Qt",
				"QtGraphEditor"
			],
			[
				"text",
				"textedit"
			],
			[
				"inter",
				"intersects"
			],
			[
				"con",
				"contentsRect"
			],
			[
				"Upda",
				"UpdateRequest"
			],
			[
				"lineNumberAre",
				"lineNumberAreaWidth"
			],
			[
				"gc",
				"get_context"
			],
			[
				"per",
				"perf_counter_ns"
			],
			[
				"pain",
				"painting"
			],
			[
				"setSwap",
				"setSwapBehavior"
			],
			[
				"setSw",
				"setSwapInterval"
			],
			[
				"call",
				"callback"
			],
			[
				"glEnableVerte",
				"glEnableVertexAttribArray"
			],
			[
				"QOpenGLShader",
				"QOpenGLShaderProgram"
			],
			[
				"GL",
				"GLCanvas"
			],
			[
				"reques",
				"requestUpdate"
			],
			[
				"initi",
				"initializeOpenGLFunctions"
			],
			[
				"reque",
				"requestedFormat"
			],
			[
				"request",
				"requestUpdate"
			],
			[
				"resize",
				"resizeGL"
			],
			[
				"QTo",
				"QtOpenGL"
			],
			[
				"Qop",
				"QtOpenGLWidgets"
			],
			[
				"open",
				"opengl_widget"
			],
			[
				"paintE",
				"paintEvent"
			],
			[
				"GL_DEPTH_BU",
				"GL_DEPTH_BUFFER_BIT"
			],
			[
				"Qope",
				"QOpenGLWidget"
			],
			[
				"frame",
				"defaultFramebufferObject"
			],
			[
				"validate",
				"validate_uniforms"
			],
			[
				"ui",
				"uint8"
			],
			[
				"u",
				"uint"
			],
			[
				"Res",
				"result"
			],
			[
				"in",
				"input"
			],
			[
				"ex",
				"exceptionThrown"
			],
			[
				"lint",
				"lintException"
			],
			[
				"proje",
				"projectionMatrix"
			],
			[
				"intern",
				"internal_format"
			],
			[
				"texture_",
				"texture_cube"
			],
			[
				"Tex",
				"Texture3D"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pylive/examples/python_function_graph/graph_view.py",
			"settings":
			{
				"buffer_size": 9882,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					515,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BgAAACMGAAAAAAAAJAYAAAAAAAAAAAAAJAYAAAAAAAAkBgAAAAAAAAQAAABOb2RlJAYAAAAAAAAlBgAAAAAAAAAAAAAlBgAAAAAAACYGAAAAAAAAAAAAACYGAAAAAAAAJwYAAAAAAAAAAAAAJwYAAAAAAAAoBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwYAAAAAAAAjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"insert",
					{
						"characters": "Node"
					},
					"BAAAAEAKAAAAAAAAQQoAAAAAAAAAAAAAQQoAAAAAAABCCgAAAAAAAAAAAABCCgAAAAAAAEMKAAAAAAAAAAAAAEMKAAAAAAAARAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQAoAAAAAAABACgAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAAPIIAAAAAAAA8wgAAAAAAAAAAAAA8wgAAAAAAAD0CAAAAAAAAAAAAAD0CAAAAAAAAPUIAAAAAAAAAAAAAPUIAAAAAAAA9ggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8ggAAAAAAADyCAAAAAAAAAAAAAAAAPC/"
				],
				[
					525,
					1,
					"right_delete",
					null,
					"AQAAAPYIAAAAAAAA9ggAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA9ggAAAAAAAD2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAPYIAAAAAAAA9wgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9ggAAAAAAAD2CAAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "paintN"
					},
					"BwAAADkFAAAAAAAAOgUAAAAAAAAAAAAAOgUAAAAAAAA6BQAAAAAAAAUAAABwYWludDoFAAAAAAAAOwUAAAAAAAAAAAAAOwUAAAAAAAA8BQAAAAAAAAAAAAA8BQAAAAAAAD0FAAAAAAAAAAAAAD0FAAAAAAAAPgUAAAAAAAAAAAAAPgUAAAAAAAA/BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQUAAAAAAAA+BQAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"insert_completion",
					{
						"completion": "paintNode",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "paintNode"
					},
					"AgAAADkFAAAAAAAAOQUAAAAAAAAGAAAAcGFpbnROOQUAAAAAAABCBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwUAAAAAAAA/BQAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAAIYEAAAAAAAAhwQAAAAAAAAAAAAAhwQAAAAAAACIBAAAAAAAAAAAAACIBAAAAAAAAIkEAAAAAAAAAAAAAIkEAAAAAAAAigQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgQAAAAAAACGBAAAAAAAAAAAAAAAAPC/"
				],
				[
					544,
					1,
					"right_delete",
					null,
					"AQAAAIoEAAAAAAAAigQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAAIoEAAAAAAAAiwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigQAAAAAAACKBAAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAA/QMAAAAAAAD9AwAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAJAYAAAAAAAAkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"right_delete",
					null,
					"AQAAALANAAAAAAAAsA0AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAsA0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					3,
					"left_delete",
					null,
					"AwAAAK8NAAAAAAAArw0AAAAAAAABAAAAZK4NAAAAAAAArg0AAAAAAAABAAAAb60NAAAAAAAArQ0AAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAsA0AAAAAAACwDQAAAAAAAAAAAAAAAPC/"
				],
				[
					576,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BQAAAK0NAAAAAAAArg0AAAAAAAAAAAAArg0AAAAAAACvDQAAAAAAAAAAAACvDQAAAAAAALANAAAAAAAAAAAAALANAAAAAAAAsQ0AAAAAAAAAAAAAsQ0AAAAAAACyDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArQ0AAAAAAACtDQAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAsg0AAAAAAACyDQAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "view"
					},
					"BQAAAJ4GAAAAAAAAnwYAAAAAAAAAAAAAnwYAAAAAAACfBgAAAAAAAAQAAABzZWxmnwYAAAAAAACgBgAAAAAAAAAAAACgBgAAAAAAAKEGAAAAAAAAAAAAAKEGAAAAAAAAogYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAogYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAB8CAAAAAAAAIAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwIAAAAAAAAfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACACAAAAAAAAIgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": "GraphView"
					},
					"CQAAACECAAAAAAAAIgIAAAAAAAAAAAAAIgIAAAAAAAAjAgAAAAAAAAAAAAAjAgAAAAAAACQCAAAAAAAAAAAAACQCAAAAAAAAJQIAAAAAAAAAAAAAJQIAAAAAAAAmAgAAAAAAAAAAAAAmAgAAAAAAACcCAAAAAAAAAAAAACcCAAAAAAAAKAIAAAAAAAAAAAAAKAIAAAAAAAApAgAAAAAAAAAAAAApAgAAAAAAACoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQIAAAAAAAAhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": ":Hashable"
					},
					"CQAAAC4CAAAAAAAALwIAAAAAAAAAAAAALwIAAAAAAAAwAgAAAAAAAAAAAAAwAgAAAAAAADECAAAAAAAAAAAAADECAAAAAAAAMgIAAAAAAAAAAAAAMgIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADQCAAAAAAAAAAAAADQCAAAAAAAANQIAAAAAAAAAAAAANQIAAAAAAAA2AgAAAAAAAAAAAAA2AgAAAAAAADcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgIAAAAAAAAuAgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAANwIAAAAAAAA3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": ":QPainter"
					},
					"CQAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAuBQAAAAAAAAAAAAAuBQAAAAAAAC8FAAAAAAAAAAAAAC8FAAAAAAAAMAUAAAAAAAAAAAAAMAUAAAAAAAAxBQAAAAAAAAAAAAAxBQAAAAAAADIFAAAAAAAAAAAAADIFAAAAAAAAMwUAAAAAAAAAAAAAMwUAAAAAAAA0BQAAAAAAAAAAAAA0BQAAAAAAADUFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAUAAAAAAAAsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAANQUAAAAAAAA1BQAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAmiYAAAAAAACaJgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKIyBmcm9tIHN0YW5kYXJkX2dyYXBoX2RlbGVnYXRlIGltcG9ydCBTdGFuZGFyZEdyYXBoRGVsZWdhdGUKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9pZCwgbWFrZV91bmlxdWVfbmFtZQoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbAoKZnJvbSBweWxpdmUuUXRHcmFwaEVkaXRvci5OZXRyb3drWEdyYXBoRWRpdG9yLmxpbmtfZ3JhcGhpY3NfaXRlbXMgaW1wb3J0ICgKICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcywKKQpmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IucWdyYXBoaWNzX2Fycm93X2l0ZW0gaW1wb3J0ICgKICAgIFFHcmFwaGljc0Fycm93SXRlbSwKKQoKCmNsYXNzIE5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLAogICAgICAgIHZpZXc6ICJHcmFwaFZpZXciLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgICAgIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lLAogICAgKSAtPiBOb25lOgogICAgICAgIFFHcmFwaGljc1dpZGdldC5fX2luaXRfXyhzZWxmLCBwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkdyYXBoaWNzSXRlbUZsYWcuSXRlbUlzTW92YWJsZSwgVHJ1ZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNGb2N1c2FibGUsIFRydWUpCgogICAgICAgIHNlbGYuX3ZpZXcgPSB2aWV3CiAgICAgICAgc2VsZi5fbiA9IG4KCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCB3aGljaDogUXQuU2l6ZUhpbnQsIGNvbnN0cmFpbnQ6IFFTaXplRiB8IFFTaXplID0gUVNpemVGKCkKICAgICkgLT4gUVNpemVGOgogICAgICAgIG9wdGlvbiA9IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSgpCiAgICAgICAgb3B0aW9uLmZvbnQgPSBzZWxmLmZvbnQoKQogICAgICAgIHJldHVybiBzZWxmLl92aWV3Ll9kZWxlZ2F0ZS5ub2RlU2l6ZUhpbnQoCiAgICAgICAgICAgIG9wdGlvbiwgc2VsZi5fdmlldy5fZ3JhcGhtb2RlbCwgc2VsZi5fbgogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwgcGFpbnRlcjogUVBhaW50ZXIsIG9wdGlvbjogUVN0eWxlT3B0aW9uR3JhcGhpY3NJdGVtLCB3aWRnZXQ9Tm9uZQogICAgKToKICAgICAgICBzZWxmLl92aWV3Ll9kZWxlZ2F0ZS5wYWludE5vZGUoCiAgICAgICAgICAgIHBhaW50ZXIsIG9wdGlvbiwgc2VsZi5fdmlldy5fZ3JhcGhtb2RlbCwgc2VsZi5fbgogICAgICAgICkKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRR3JhcGhpY3NTY2VuZU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgcHJpbnQoInByZXNzIikKICAgICAgICByZXR1cm4gc3VwZXIoKS5tb3VzZVByZXNzRXZlbnQoZXZlbnQpCgoKY2xhc3MgR3JhcGhEZWxlZ2F0ZShRT2JqZWN0KToKICAgIGRlZiBub2RlRmFjdG9yeShzZWxmLCB2aWV3LCBncmFwaCwgbikgLT4gUUdyYXBoaWNzSXRlbToKICAgICAgICByZXR1cm4gTm9kZVdpZGdldCh2aWV3PXZpZXcsIG49bikKCiAgICBkZWYgZWRnZUZhY3RvcnkoCiAgICAgICAgc2VsZiwgdmlldywgZ3JhcGgsIHNvdXJjZV9ub2RlLCB0YXJnZXRfbm9kZQogICAgKSAtPiBRR3JhcGhpY3NJdGVtOgogICAgICAgIGFycm93ID0gUUdyYXBoaWNzQXJyb3dJdGVtKCkKICAgICAgICBwZW4gPSBRUGVuKHZpZXcucGFsZXR0ZSgpLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5UZXh0KSwgMS41KQogICAgICAgIGFycm93LnNldFBlbihwZW4pCgogICAgICAgIGRlZiB1cGRhdGVfbGluaygpOgogICAgICAgICAgICBhcnJvdy5zZXRMaW5lKAogICAgICAgICAgICAgICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzKAogICAgICAgICAgICAgICAgICAgIHNvdXJjZV9ub2RlLmdlb21ldHJ5KCksIHRhcmdldF9ub2RlLmdlb21ldHJ5KCkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKQoKICAgICAgICB1cGRhdGVfbGluaygpCgogICAgICAgIHNvdXJjZV9ub2RlLmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQogICAgICAgIHRhcmdldF9ub2RlLmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQogICAgICAgIHJldHVybiBhcnJvdwoKICAgIGRlZiBub2RlU2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgR3JhcGhWaWV3KFFHcmFwaGljc1ZpZXcpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudD1Ob25lKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5zZXRSZW5kZXJIaW50cyhRUGFpbnRlci5BbnRpYWxpYXNpbmcpCiAgICAgICAgc2VsZi5zZXREcmFnTW9kZShRR3JhcGhpY3NWaWV3LkRyYWdNb2RlLlJ1YmJlckJhbmREcmFnKQogICAgICAgIHNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQogICAgICAgIHNjZW5lLnNldFNjZW5lUmVjdChRUmVjdCgtOTk5OSAvLyAyLCAtOTk5OSAvLyAyLCA5OTk5LCA5OTk5KSkKICAgICAgICBzZWxmLnNldFNjZW5lKHNjZW5lKQogICAgICAgICMgc2NlbmUuaW5zdGFsbEV2ZW50RmlsdGVyKHNlbGYpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBHcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXAgPSBkaWN0KCkKICAgICAgICBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXAgPSBkaWN0KCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsOiBHcmFwaE1vZGVsIHwgTm9uZSA9IE5vbmUKCiAgICBkZWYgbm9kZVdpZGdldChzZWxmLCBuOiBIYXNoYWJsZSk6CiAgICAgICAgcmV0dXJuIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQoKICAgIGRlZiBtb2RlbChzZWxmKSAtPiBHcmFwaE1vZGVsIHwgTm9uZToKICAgICAgICByZXR1cm4gc2VsZi5fZ3JhcGhtb2RlbAoKICAgIGRlZiBzZXRNb2RlbChzZWxmLCBncmFwaG1vZGVsOiBHcmFwaE1vZGVsKToKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsID0gZ3JhcGhtb2RlbAoKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzQWRkZWQuY29ubmVjdChzZWxmLmhhbmRsZU5vZGVzQWRkZWQpCiAgICAgICAgc2VsZi5fZ3JhcGhtb2RlbC5ub2Rlc0Fib3V0VG9CZVJlbW92ZWQuY29ubmVjdChzZWxmLmhhbmRsZU5vZGVzUmVtb3ZlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuY29ubmVjdCgKICAgICAgICAgICAgc2VsZi5oYW5kbGVOb2Rlc1Byb3BlcnRpZXNDaGFuZ2VkCiAgICAgICAgKQoKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmVkZ2VzQWRkZWQuY29ubmVjdChzZWxmLmhhbmRsZUVkZ2VzQWRkZWQpCiAgICAgICAgc2VsZi5fZ3JhcGhtb2RlbC5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuY29ubmVjdChzZWxmLmhhbmRsZUVkZ2VzUmVtb3ZlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmVkZ2VzUHJvcGVydGllc0NoYW5nZWQuY29ubmVjdCgKICAgICAgICAgICAgc2VsZi5oYW5kbGVFZGdlc1Byb3BlcnRpZXNDaGFuZ2VkCiAgICAgICAgKQoKICAgIGRlZiBoYW5kbGVOb2Rlc0FkZGVkKHNlbGYsIG5vZGVzOiBMaXN0W0hhc2hhYmxlXSk6CiAgICAgICAgZm9yIG4gaW4gbm9kZXM6CiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2RlbGVnYXRlLm5vZGVGYWN0b3J5KAogICAgICAgICAgICAgICAgdmlldz1zZWxmLCBncmFwaD1zZWxmLl9ncmFwaG1vZGVsLCBuPW4KICAgICAgICAgICAgKQoKICAgICAgICAgICAgc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dID0gd2lkZ2V0CiAgICAgICAgICAgIHNlbGYuX3dpZGdldF90b19pdGVtX21hcFt3aWRnZXRdID0gbgogICAgICAgICAgICBzZWxmLnNjZW5lKCkuYWRkSXRlbSh3aWRnZXQpCgogICAgZGVmIGhhbmRsZU5vZGVzUmVtb3ZlZChzZWxmLCBub2RlczogTGlzdFtIYXNoYWJsZV0pOgogICAgICAgIGZvciBuIGluIG5vZGVzOgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KICAgICAgICAgICAgc2VsZi5zY2VuZSgpLnJlbW92ZUl0ZW0od2lkZ2V0KQogICAgICAgICAgICBkZWwgc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCiAgICAgICAgICAgIGRlbCBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbd2lkZ2V0XQoKICAgIGRlZiBoYW5kbGVFZGdlc0FkZGVkKHNlbGYsIGVkZ2VzOiBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV1dKToKICAgICAgICBmb3IgdSwgdiBpbiBlZGdlczoKICAgICAgICAgICAgc291cmNlX25vZGUgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbdV0KICAgICAgICAgICAgdGFyZ2V0X25vZGUgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbdl0KCiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2RlbGVnYXRlLmVkZ2VGYWN0b3J5KAogICAgICAgICAgICAgICAgc2VsZiwgc2VsZi5fZ3JhcGhtb2RlbCwgc291cmNlX25vZGUsIHRhcmdldF9ub2RlCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFsodSwgdildID0gd2lkZ2V0CiAgICAgICAgICAgIHNlbGYuX3dpZGdldF90b19pdGVtX21hcFt3aWRnZXRdID0gKHUsIHYpCiAgICAgICAgICAgIHNlbGYuc2NlbmUoKS5hZGRJdGVtKHdpZGdldCkKCiAgICBkZWYgaGFuZGxlRWRnZXNSZW1vdmVkKHNlbGYsIGVkZ2VzOiBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV1dKToKICAgICAgICBmb3IgdSwgdiBpbiBlZGdlczoKICAgICAgICAgICAgd2lkZ2V0ID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwWyh1LCB2KV0KICAgICAgICAgICAgd2lkZ2V0LnNldFNvdXJjZShOb25lKQogICAgICAgICAgICB3aWRnZXQuc2V0VGFyZ2V0KE5vbmUpCiAgICAgICAgICAgIHNlbGYuc2NlbmUoKS5yZW1vdmVJdGVtKHdpZGdldCkKICAgICAgICAgICAgZGVsIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFsodSwgdildCiAgICAgICAgICAgIGRlbCBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbd2lkZ2V0XQoKICAgIGRlZiBoYW5kbGVOb2Rlc1Byb3BlcnRpZXNDaGFuZ2VkKHNlbGYsIG5vZGVzUHJvcGVyaWVzKToKICAgICAgICBmb3IgbiwgcHJvcGVydGllcyBpbiBub2Rlc1Byb3Blcmllcy5pdGVtcygpOgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KCiAgICAgICAgICAgICMgc2VsZi5kZWxlZ2F0ZSgpLnNldE5vZGVXaWRnZXRQcm9wcyhzZWxmLCBuLCB3aWRnZXQsICoqcHJvcGVydGllcykKCiAgICBkZWYgaGFuZGxlRWRnZXNQcm9wZXJ0aWVzQ2hhbmdlZChzZWxmLCBlZGdlc1Byb3BlcnRpZXMpOgogICAgICAgIGZvciBlZGdlLCBwcm9wZXJ0aWVzIGluIGVkZ2VzUHJvcGVydGllcy5pdGVtcygpOgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9hbXBbZWRnZV0KICAgICAgICAgICAgIyBzZWxmLmRlbGVnYXRlKCkuc2V0RWRnZVdpZGdldFByb3BzKHNlbGYsIGVkZ2UsIHdpZGdldCwgKipwcm9wZXJ0aWVzKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBmcm9tIGdyYXBoX21vZGVsIGltcG9ydCBHcmFwaE1vZGVsCgogICAgY2xhc3MgRXhhbXBsZUdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgICAgICBpZiBub3Qgc2VsZi5fZ3JhcGhtb2RlbDoKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICBpdGVtQXRNb3VzZSA9IHNlbGYuaXRlbUF0KGV2ZW50LnBvc2l0aW9uKCkudG9Qb2ludCgpKQogICAgICAgICAgICBpZiBpdGVtQXRNb3VzZToKICAgICAgICAgICAgICAgIHJldHVybiBzdXBlcigpLm1vdXNlRG91YmxlQ2xpY2tFdmVudChldmVudCkKCiAgICAgICAgICAgIGNsaWNrcG9zID0gc2VsZi5tYXBUb1NjZW5lKGV2ZW50LnBvc2l0aW9uKCkudG9Qb2ludCgpKQoKICAgICAgICAgICAgIyBuID0gbWFrZV91bmlxdWVfaWQobGVuZ3RoPTEyKQogICAgICAgICAgICBuID0gbWFrZV91bmlxdWVfbmFtZSgiTk9ERSIsIFtuIGZvciBuIGluIHNlbGYuX2dyYXBobW9kZWwubm9kZXMoKV0pCiAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkTm9kZShuLCBsYWJlbD0ibmV3IG5vZGUiKQogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KICAgICAgICAgICAgd2lkZ2V0LnNldFBvcyhjbGlja3BvcykKCiAgICAgICAgZGVmIGNyZWF0ZVN0YW5kYXJkQ29udGV4dE1lbnUoc2VsZiwgc2NlbmVQb3M6IFFQb2ludEYgfCBOb25lID0gTm9uZSk6CiAgICAgICAgICAgICIiIlRoaXMgZnVuY3Rpb24gY3JlYXRlcyB0aGUgc3RhbmRhcmQgY29udGV4dCBtZW51IHdoaWNoIGlzIHNob3duIHdoZW4KICAgICAgICAgICAgdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSB0ZXh0IGVkaXQgd2l0aCB0aGUgcmlnaHQgbW91c2UgYnV0dG9uLiBJdCBpcwogICAgICAgICAgICBjYWxsZWQgZnJvbSB0aGUgZGVmYXVsdCBjb250ZXh0TWVudUV2ZW50KCkgaGFuZGxlciBhbmQgaXQgdGFrZXMgdGhlCiAgICAgICAgICAgIHBvc2l0aW9uIGluIGRvY3VtZW50IGNvb3JkaW5hdGVzIHdoZXJlIHRoZSBtb3VzZSBjbGljayB3YXMuIFRoaXMgY2FuCiAgICAgICAgICAgIGVuYWJsZSBhY3Rpb25zIHRoYXQgYXJlIHNlbnNpdGl2ZSB0byB0aGUgcG9zaXRpb24gd2hlcmUgdGhlIHVzZXIKICAgICAgICAgICAgY2xpY2tlZC4gVGhlIHBvcHVwIG1lbnUncyBvd25lcnNoaXAgaXMgdHJhbnNmZXJyZWQgdG8gdGhlIGNhbGxlci4iIiIKCiAgICAgICAgICAgIGRlZiBjcmVhdGVfbm9kZShzY2VuZVBvczogUVBvaW50RiB8IE5vbmUpOgogICAgICAgICAgICAgICAgaWYgbm90IHNlbGYuX2dyYXBobW9kZWw6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICBuID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICAiTk9ERSIsIFtuIGZvciBuIGluIHNlbGYuX2dyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkTm9kZShuLCBsYWJlbD0ibmV3IG5vZGUiKQogICAgICAgICAgICAgICAgd2lkZ2V0ID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCiAgICAgICAgICAgICAgICB3aWRnZXQuc2V0UG9zKHNjZW5lUG9zIG9yIFFQb2ludEYoMCwgMCkpCgogICAgICAgICAgICBkZWYgY29ubmVjdF9zZWxlY3RlZF9ub2RlcygpOgogICAgICAgICAgICAgICAgaWYgbm90IHNlbGYuX2dyYXBobW9kZWw6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICBzZWxlY3Rpb24gPSBbaXRlbSBmb3IgaXRlbSBpbiBzZWxmLnNjZW5lKCkuc2VsZWN0ZWRJdGVtcygpXQogICAgICAgICAgICAgICAgaWYgbGVuKHNlbGVjdGlvbikgPCAyOgogICAgICAgICAgICAgICAgICAgIHJldHVybgoKICAgICAgICAgICAgICAgIGZvciBpdGVtIGluIHNlbGVjdGlvblsxOl06CiAgICAgICAgICAgICAgICAgICAgdSA9IHNlbGYuX3dpZGdldF90b19pdGVtX21hcFtzZWxlY3Rpb25bMF1dCiAgICAgICAgICAgICAgICAgICAgdiA9IHNlbGYuX3dpZGdldF90b19pdGVtX21hcFtpdGVtXQogICAgICAgICAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkRWRnZSh1LCB2KQoKICAgICAgICAgICAgbWVudSA9IFFNZW51KHNlbGYpCgogICAgICAgICAgICBkZWYgbnVkZ2Vfc2VsZWN0ZWRfbm9kZXMoKToKICAgICAgICAgICAgICAgIGZvciBpdGVtLCB3aWRnZXQgaW4gc2VsZi5faXRlbV90b193aWRnZXRfbWFwLml0ZW1zKCk6CiAgICAgICAgICAgICAgICAgICAgd2lkZ2V0Lm1vdmVCeSgxMCwgMTApCgogICAgICAgICAgICBudWRnZV9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIG51ZGdlX2FjdGlvbi5zZXRUZXh0KCJudWRnZSBub2RlcyIpCiAgICAgICAgICAgIG51ZGdlX2FjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGE6IG51ZGdlX3NlbGVjdGVkX25vZGVzKCkpCiAgICAgICAgICAgIG1lbnUuYWRkQWN0aW9uKG51ZGdlX2FjdGlvbikKCiAgICAgICAgICAgIGNyZWF0ZV9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIGNyZWF0ZV9hY3Rpb24uc2V0VGV4dCgiY3JlYXRlIG5vZGUiKQogICAgICAgICAgICBjcmVhdGVfYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYTogY3JlYXRlX25vZGUoc2NlbmVQb3MpKQogICAgICAgICAgICBtZW51LmFkZEFjdGlvbihjcmVhdGVfYWN0aW9uKQoKICAgICAgICAgICAgY29ubmVjdF9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIGNvbm5lY3RfYWN0aW9uLnNldFRleHQoImNvbm5lY3QiKQogICAgICAgICAgICBjb25uZWN0X2FjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGE6IGNvbm5lY3Rfc2VsZWN0ZWRfbm9kZXMoKSkKICAgICAgICAgICAgbWVudS5hZGRBY3Rpb24oY29ubmVjdF9hY3Rpb24pCiAgICAgICAgICAgIHJldHVybiBtZW51CgogICAgICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCiAgICAgICAgICAgIG1lbnUgPSBzZWxmLmNyZWF0ZVN0YW5kYXJkQ29udGV4dE1lbnUoc2NlbmVwb3MpCgogICAgICAgICAgICBtZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIHZpZXcgPSBFeGFtcGxlR3JhcGhWaWV3KCkKICAgIG1vZGVsID0gR3JhcGhNb2RlbCgpCiAgICB2aWV3LnNldE1vZGVsKG1vZGVsKQogICAgdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAAyAIAAAAAAADIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"GAAAABYMAAAAAAAAGAwAAAAAAAAAAAAA6QsAAAAAAADrCwAAAAAAAAAAAAC+CwAAAAAAAMALAAAAAAAAAAAAAJ4LAAAAAAAAoAsAAAAAAAAAAAAAhQsAAAAAAACHCwAAAAAAAAAAAABRCwAAAAAAAFMLAAAAAAAAAAAAADoLAAAAAAAAPAsAAAAAAAAAAAAAJgsAAAAAAAAoCwAAAAAAAAAAAAAfCwAAAAAAACELAAAAAAAAAAAAAAoLAAAAAAAADAsAAAAAAAAAAAAA+woAAAAAAAD9CgAAAAAAAAAAAADVCgAAAAAAANcKAAAAAAAAAAAAALoKAAAAAAAAvAoAAAAAAAAAAAAArAoAAAAAAACuCgAAAAAAAAAAAACZCgAAAAAAAJsKAAAAAAAAAAAAAI4KAAAAAAAAkAoAAAAAAAAAAAAAQgoAAAAAAABECgAAAAAAAAAAAAArCgAAAAAAAC0KAAAAAAAAAAAAAPkJAAAAAAAA+wkAAAAAAAAAAAAA0gkAAAAAAADUCQAAAAAAAAAAAAC+CQAAAAAAAMAJAAAAAAAAAAAAAK0JAAAAAAAArwkAAAAAAAAAAAAAYgkAAAAAAABkCQAAAAAAAAAAAABMCQAAAAAAAE4JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwwAAAAAAABICQAAAAAAAAAAAAAAAPC/"
				],
				[
					639,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"GAAAAEQMAAAAAAAARAwAAAAAAAACAAAAIyAVDAAAAAAAABUMAAAAAAAAAgAAACMg6AsAAAAAAADoCwAAAAAAAAIAAAAjIMYLAAAAAAAAxgsAAAAAAAACAAAAIyCrCwAAAAAAAKsLAAAAAAAAAgAAACMgdQsAAAAAAAB1CwAAAAAAAAIAAAAjIFwLAAAAAAAAXAsAAAAAAAACAAAAIyBGCwAAAAAAAEYLAAAAAAAAAgAAACMgPQsAAAAAAAA9CwAAAAAAAAIAAAAjICYLAAAAAAAAJgsAAAAAAAACAAAAIyAVCwAAAAAAABULAAAAAAAAAgAAACMg7QoAAAAAAADtCgAAAAAAAAIAAAAjINAKAAAAAAAA0AoAAAAAAAACAAAAIyDACgAAAAAAAMAKAAAAAAAAAgAAACMgqwoAAAAAAACrCgAAAAAAAAIAAAAjIJ4KAAAAAAAAngoAAAAAAAACAAAAIyBQCgAAAAAAAFAKAAAAAAAAAgAAACMgNwoAAAAAAAA3CgAAAAAAAAIAAAAjIAMKAAAAAAAAAwoAAAAAAAACAAAAIyDaCQAAAAAAANoJAAAAAAAAAgAAACMgxAkAAAAAAADECQAAAAAAAAIAAAAjILEJAAAAAAAAsQkAAAAAAAACAAAAIyBkCQAAAAAAAGQJAAAAAAAAAgAAACMgTAkAAAAAAABMCQAAAAAAAAIAAAAjIA",
					"AQAAAAAAAAABAAAAiwwAAAAAAABICQAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAWwwAAAAAAABICQAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"insert",
					{
						"characters": "\ndef"
					},
					"BQAAAAMCAAAAAAAABAIAAAAAAAAAAAAABAIAAAAAAAAIAgAAAAAAAAAAAAAIAgAAAAAAAAkCAAAAAAAAAAAAAAkCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAALAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					3,
					"left_delete",
					null,
					"AwAAAAoCAAAAAAAACgIAAAAAAAABAAAAZgkCAAAAAAAACQIAAAAAAAABAAAAZQgCAAAAAAAACAIAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAACwIAAAAAAAALAgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					2,
					"left_delete",
					null,
					"AgAAAAQCAAAAAAAABAIAAAAAAAAEAAAAICAgIAMCAAAAAAAAAwIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAACAIAAAAAAAAIAgAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAAwIAAAAAAAADAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pylive/utils/unique.py",
			"settings":
			{
				"buffer_size": 658,
				"line_ending": "Windows"
			}
		},
		{
			"file": "pylive/examples/python_function_graph/standard_graph_delegate.py",
			"settings":
			{
				"buffer_size": 3624,
				"line_ending": "Windows"
			}
		},
		{
			"file": "pylive/examples/python_function_graph/main.py",
			"settings":
			{
				"buffer_size": 3075,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1478,
					1,
					"insert",
					{
						"characters": "Property"
					},
					"CQAAAFEIAAAAAAAAUggAAAAAAAAAAAAAUggAAAAAAABSCAAAAAAAAAYAAABFZGl0b3JSCAAAAAAAAFMIAAAAAAAAAAAAAFMIAAAAAAAAVAgAAAAAAAAAAAAAVAgAAAAAAABVCAAAAAAAAAAAAABVCAAAAAAAAFYIAAAAAAAAAAAAAFYIAAAAAAAAVwgAAAAAAAAAAAAAVwgAAAAAAABYCAAAAAAAAAAAAABYCAAAAAAAAFkIAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRCAAAAAAAAFcIAAAAAAAAAAAAAAAA8L8"
				],
				[
					1480,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAABRQAAAAAAAAFFAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCmZyb20gc3RhbmRhcmRfZ3JhcGhfZGVsZWdhdGUgaW1wb3J0IEFic3RyYWN0R3JhcGhEZWxlZ2F0ZQpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKIyBjbGFzcyBGbk5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKIyAgICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lKSAtPiBOb25lOgojICAgICAgICAgUUdyYXBoaWNzV2lkZ2V0Ll9faW5pdF9fKHNlbGYsIHBhcmVudD1wYXJlbnQpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc01vdmFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc0ZvY3VzYWJsZSwgVHJ1ZSkKCiMgICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUpOgojICAgICAgICAgcGFsZXR0ZSA9IHNlbGYucGFsZXR0ZSgpCgojICAgICAgICAgcGVuID0gUVBlbihwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5UZXh0KSwgMSkKIyAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgIHJlY3QgPSBRUmVjdEYoMCwgMCwgc2VsZi5nZW9tZXRyeSgpLndpZHRoKCksIHNlbGYuZ2VvbWV0cnkoKS5oZWlnaHQoKSkKIyAgICAgICAgICMgcGFpbnRlci5kcmF3RWxsaXBzZShyZWN0KQoKIyAgICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KHJlY3QsIDEwLCAxMCkKCiMgICAgICAgICBpZiBRU3R5bGUuU3RhdGVGbGFnLlN0YXRlX1NlbGVjdGVkIGluIG9wdGlvbi5zdGF0ZToKIyAgICAgICAgICAgICBwZW4gPSBRUGVuKAojICAgICAgICAgICAgICAgICBwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5XaW5kb3dUZXh0KSwKIyAgICAgICAgICAgICAgICAgMSwKIyAgICAgICAgICAgICAgICAgUXQuUGVuU3R5bGUuRGFzaExpbmUsCiMgICAgICAgICAgICAgKQojICAgICAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChyZWN0LCAxLCAxKQoKCmNsYXNzIEZuRWRnZVdpZGdldChRR3JhcGhpY3NBcnJvd0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudD1Ob25lKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgcGVuID0gUVBlbihRQ29sb3IoIndoaXRlIiksIDIpCiAgICAgICAgc2VsZi5zZXRQZW4ocGVuKQoKCmNsYXNzIEZuR3JhcGhEZWxlZ2F0ZShBYnN0cmFjdEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIGNyZWF0ZU5vZGVXaWRnZXQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKSAtPiBRR3JhcGhpY3NJdGVtOgogICAgICAgICIiImNyZWF0ZSBhbmQgYmluZCB0aGUgd2lkZ2V0IiIiCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB3aWRnZXQgPSBGdW5jdGlvbk5vZGVXaWRnZXQoZm4pCiAgICAgICAgcmV0dXJuIHdpZGdldAoKICAgIGRlZiBjcmVhdGVQcm9wZXJ0eVdpZGdldCgKICAgICAgICBzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUsIGF0dHI6IHN0ciwgcHJvcDogb2JqZWN0CiAgICApOgogICAgICAgIHBhc3MKCiAgICBkZWYgc2V0Tm9kZVdpZGdldFByb3BzKAogICAgICAgIHNlbGYsIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZSwgd2lkZ2V0OiBRR3JhcGhpY3NXaWRnZXQsICoqcHJvcHMKICAgICk6CiAgICAgICAgLi4uCiAgICAgICAgcHJpbnQoImhlbGxvIikKICAgICAgICAiIiJ1cGRhdGUgaXdkZ2V0IHByb3BzIGZyb20gbW9kZWwiIiIKICAgICAgICAjIGlmICdsYWJlbCcgaW4gcHJvcHMua2V5cygpOgogICAgICAgICMgCXdpZGdldC5sYWJlbC5kb2N1bWVudCgpLnNldFBsYWluVGV4dChwcm9wc1snbGFiZWwnXSkKCiAgICAgICAgIyBpZiAnaW5sZXRzJyBpbiBwcm9wcy5rZXlzKCk6CiAgICAgICAgIyAJLi4uCgogICAgICAgICMgaWYgJ291dGxldHMnIGluIHByb3BzLmtleXMoKToKICAgICAgICAjIAkuLi4KCiAgICBkZWYgc2V0Tm9kZU1vZGVsUHJvcHMoCiAgICAgICAgc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlLCB3aWRnZXQ6IFFHcmFwaGljc1dpZGdldCwgKipwcm9wcwogICAgKToKICAgICAgICAiIiJ1cGRhdGUgbW9kZWwgcHJvcHMgZnJvbSB3aWRnZXQiIiIKICAgICAgICBncmFwaC5zZXROb2RlUHJvcGVydGllcyhuLCAqKnByb3BzKQoKICAgIGRlZiBjcmVhdGVFZGdlV2lkZ2V0KAogICAgICAgIHNlbGYsCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgc291cmNlOiBRR3JhcGhpY3NXaWRnZXQsCiAgICAgICAgdGFyZ2V0OiBRR3JhcGhpY3NXaWRnZXQsCiAgICApIC0+IFFHcmFwaGljc0Fycm93SXRlbToKICAgICAgICBsaW5rID0gRm5FZGdlV2lkZ2V0KCkKCiAgICAgICAgZGVmIHVwZGF0ZV9saW5rKCk6CiAgICAgICAgICAgIGxpbmsuc2V0TGluZSgKICAgICAgICAgICAgICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcyhzb3VyY2UuZ2VvbWV0cnkoKSwgdGFyZ2V0Lmdlb21ldHJ5KCkpCiAgICAgICAgICAgICkKCiAgICAgICAgdXBkYXRlX2xpbmsoKQoKICAgICAgICBzb3VyY2UuZ2VvbWV0cnlDaGFuZ2VkLmNvbm5lY3QodXBkYXRlX2xpbmspCiAgICAgICAgdGFyZ2V0Lmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQoKICAgICAgICByZXR1cm4gbGluawoKICAgIGRlZiBzZXRFZGdlV2lkZ2V0UHJvcHMoCiAgICAgICAgc2VsZiwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBlOiBUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGVdLAogICAgICAgIHdpZGdldDogUUdyYXBoaWNzQXJyb3dJdGVtLAogICAgICAgICoqcHJvcHMsCiAgICApOgogICAgICAgIC4uLgoKICAgIGRlZiBzZXRFZGdlTW9kZWxQcm9wcygKICAgICAgICBzZWxmLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIGU6IFR1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV0sCiAgICAgICAgd2lkZ2V0OiBRR3JhcGhpY3NBcnJvd0l0ZW0sCiAgICAgICAgKipwcm9wcywKICAgICk6CiAgICAgICAgLi4uCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCgogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZCAAAAAAAAFkIAAAAAAAAAAAAAAAA8L8"
				],
				[
					1503,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB2AQAAAAAAADkAAABmcm9tIHN0YW5kYXJkX2dyYXBoX2RlbGVnYXRlIGltcG9ydCBBYnN0cmFjdEdyYXBoRGVsZWdhdGU",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1504,
					1,
					"left_delete",
					null,
					"AQAAAHUBAAAAAAAAdQEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2AQAAAAAAAHYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1528,
					1,
					"left_delete",
					null,
					"AQAAACkHAAAAAAAAKQcAAAAAAAAIBwAAZGVmIGNyZWF0ZU5vZGVXaWRnZXQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKSAtPiBRR3JhcGhpY3NJdGVtOgogICAgICAgICIiImNyZWF0ZSBhbmQgYmluZCB0aGUgd2lkZ2V0IiIiCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB3aWRnZXQgPSBGdW5jdGlvbk5vZGVXaWRnZXQoZm4pCiAgICAgICAgcmV0dXJuIHdpZGdldAoKICAgIGRlZiBjcmVhdGVQcm9wZXJ0eVdpZGdldCgKICAgICAgICBzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUsIGF0dHI6IHN0ciwgcHJvcDogb2JqZWN0CiAgICApOgogICAgICAgIHBhc3MKCiAgICBkZWYgc2V0Tm9kZVdpZGdldFByb3BzKAogICAgICAgIHNlbGYsIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZSwgd2lkZ2V0OiBRR3JhcGhpY3NXaWRnZXQsICoqcHJvcHMKICAgICk6CiAgICAgICAgLi4uCiAgICAgICAgcHJpbnQoImhlbGxvIikKICAgICAgICAiIiJ1cGRhdGUgaXdkZ2V0IHByb3BzIGZyb20gbW9kZWwiIiIKICAgICAgICAjIGlmICdsYWJlbCcgaW4gcHJvcHMua2V5cygpOgogICAgICAgICMgCXdpZGdldC5sYWJlbC5kb2N1bWVudCgpLnNldFBsYWluVGV4dChwcm9wc1snbGFiZWwnXSkKCiAgICAgICAgIyBpZiAnaW5sZXRzJyBpbiBwcm9wcy5rZXlzKCk6CiAgICAgICAgIyAJLi4uCgogICAgICAgICMgaWYgJ291dGxldHMnIGluIHByb3BzLmtleXMoKToKICAgICAgICAjIAkuLi4KCiAgICBkZWYgc2V0Tm9kZU1vZGVsUHJvcHMoCiAgICAgICAgc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlLCB3aWRnZXQ6IFFHcmFwaGljc1dpZGdldCwgKipwcm9wcwogICAgKToKICAgICAgICAiIiJ1cGRhdGUgbW9kZWwgcHJvcHMgZnJvbSB3aWRnZXQiIiIKICAgICAgICBncmFwaC5zZXROb2RlUHJvcGVydGllcyhuLCAqKnByb3BzKQoKICAgIGRlZiBjcmVhdGVFZGdlV2lkZ2V0KAogICAgICAgIHNlbGYsCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgc291cmNlOiBRR3JhcGhpY3NXaWRnZXQsCiAgICAgICAgdGFyZ2V0OiBRR3JhcGhpY3NXaWRnZXQsCiAgICApIC0+IFFHcmFwaGljc0Fycm93SXRlbToKICAgICAgICBsaW5rID0gRm5FZGdlV2lkZ2V0KCkKCiAgICAgICAgZGVmIHVwZGF0ZV9saW5rKCk6CiAgICAgICAgICAgIGxpbmsuc2V0TGluZSgKICAgICAgICAgICAgICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcyhzb3VyY2UuZ2VvbWV0cnkoKSwgdGFyZ2V0Lmdlb21ldHJ5KCkpCiAgICAgICAgICAgICkKCiAgICAgICAgdXBkYXRlX2xpbmsoKQoKICAgICAgICBzb3VyY2UuZ2VvbWV0cnlDaGFuZ2VkLmNvbm5lY3QodXBkYXRlX2xpbmspCiAgICAgICAgdGFyZ2V0Lmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQoKICAgICAgICByZXR1cm4gbGluawoKICAgIGRlZiBzZXRFZGdlV2lkZ2V0UHJvcHMoCiAgICAgICAgc2VsZiwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBlOiBUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGVdLAogICAgICAgIHdpZGdldDogUUdyYXBoaWNzQXJyb3dJdGVtLAogICAgICAgICoqcHJvcHMsCiAgICApOgogICAgICAgIC4uLgoKICAgIGRlZiBzZXRFZGdlTW9kZWxQcm9wcygKICAgICAgICBzZWxmLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIGU6IFR1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV0sCiAgICAgICAgd2lkZ2V0OiBRR3JhcGhpY3NBcnJvd0l0ZW0sCiAgICAgICAgKipwcm9wcywKICAgICk6CiAgICAgICAgLi4u",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxDgAAAAAAACkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1529,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApBwAAAAAAACkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1530,
					1,
					"insert",
					{
						"characters": " pan"
					},
					"BAAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC8HAAAAAAAAAAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsBwAAAAAAACwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1531,
					1,
					"left_delete",
					null,
					"AQAAAC8HAAAAAAAALwcAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBwAAAAAAADAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "intNode"
					},
					"BwAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAAAxBwAAAAAAAAAAAAAxBwAAAAAAADIHAAAAAAAAAAAAADIHAAAAAAAAMwcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAAA0BwAAAAAAADUHAAAAAAAAAAAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBwAAAAAAAC8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					1533,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADYHAAAAAAAAOAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2BwAAAAAAADYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1534,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA5BwAAAAAAADoHAAAAAAAAAAAAADoHAAAAAAAAOwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3BwAAAAAAADcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1535,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADsHAAAAAAAAPAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BwAAAAAAADsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1536,
					1,
					"insert",
					{
						"characters": " graph:"
					},
					"BwAAADwHAAAAAAAAPQcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8BwAAAAAAADwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1537,
					1,
					"insert",
					{
						"characters": "GraphMode"
					},
					"CQAAAEMHAAAAAAAARAcAAAAAAAAAAAAARAcAAAAAAABFBwAAAAAAAAAAAABFBwAAAAAAAEYHAAAAAAAAAAAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAASgcAAAAAAABLBwAAAAAAAAAAAABLBwAAAAAAAEwHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDBwAAAAAAAEMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1538,
					1,
					"insert",
					{
						"characters": "l,"
					},
					"AgAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBwAAAAAAAEwHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1539,
					1,
					"insert",
					{
						"characters": " n:Hasha"
					},
					"CAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAAVQcAAAAAAABWBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBwAAAAAAAE4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					1540,
					1,
					"insert",
					{
						"characters": "ble"
					},
					"AwAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABYBwAAAAAAAAAAAABYBwAAAAAAAFkHAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWBwAAAAAAAFYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1542,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBwAAAAAAAFoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1543,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BQAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABbBwAAAAAAAFsHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1544,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAABlBwAAAAAAAGYHAAAAAAAAAAAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjBwAAAAAAAGMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1545,
					6,
					"left_delete",
					null,
					"BgAAAGYHAAAAAAAAZgcAAAAAAAABAAAAbmUHAAAAAAAAZQcAAAAAAAABAAAAcmQHAAAAAAAAZAcAAAAAAAABAAAAdWMHAAAAAAAAYwcAAAAAAAABAAAAdGIHAAAAAAAAYgcAAAAAAAABAAAAZWEHAAAAAAAAYQcAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnBwAAAAAAAGcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1552,
					1,
					"insert",
					{
						"characters": "QObject"
					},
					"CQAAAA0HAAAAAAAADgcAAAAAAAAAAAAADgcAAAAAAAAOBwAAAAAAABUAAABBYnN0cmFjdEdyYXBoRGVsZWdhdGVIBwAAAAAAAEgHAAAAAAAABQAAACAgICAJDgcAAAAAAAAPBwAAAAAAAAAAAAAPBwAAAAAAABAHAAAAAAAAAAAAABAHAAAAAAAAEQcAAAAAAAAAAAAAEQcAAAAAAAASBwAAAAAAAAAAAAASBwAAAAAAABMHAAAAAAAAAAAAABMHAAAAAAAAFAcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANBwAAAAAAACIHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1557,
					1,
					"left_delete",
					null,
					"AQAAAE8HAAAAAAAATwcAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQBwAAAAAAAFAHAAAAAAAAAAAAAAAA8L8"
				],
				[
					1589,
					2,
					"left_delete",
					null,
					"AgAAAEAGAAAAAAAAQAYAAAAAAAC1AAAAY2xhc3MgRm5FZGdlV2lkZ2V0KFFHcmFwaGljc0Fycm93SXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBwZW4gPSBRUGVuKFFDb2xvcigid2hpdGUiKSwgMikKICAgICAgICBzZWxmLnNldFBlbihwZW4pCj8GAAAAAAAAPwYAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1BgAAAAAAAEAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1599,
					1,
					"unexpand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAAPAsAAAAAAAAyDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKIyBjbGFzcyBGbk5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKIyAgICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lKSAtPiBOb25lOgojICAgICAgICAgUUdyYXBoaWNzV2lkZ2V0Ll9faW5pdF9fKHNlbGYsIHBhcmVudD1wYXJlbnQpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc01vdmFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc0ZvY3VzYWJsZSwgVHJ1ZSkKCiMgICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUpOgojICAgICAgICAgcGFsZXR0ZSA9IHNlbGYucGFsZXR0ZSgpCgojICAgICAgICAgcGVuID0gUVBlbihwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5UZXh0KSwgMSkKIyAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgIHJlY3QgPSBRUmVjdEYoMCwgMCwgc2VsZi5nZW9tZXRyeSgpLndpZHRoKCksIHNlbGYuZ2VvbWV0cnkoKS5oZWlnaHQoKSkKIyAgICAgICAgICMgcGFpbnRlci5kcmF3RWxsaXBzZShyZWN0KQoKIyAgICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KHJlY3QsIDEwLCAxMCkKCiMgICAgICAgICBpZiBRU3R5bGUuU3RhdGVGbGFnLlN0YXRlX1NlbGVjdGVkIGluIG9wdGlvbi5zdGF0ZToKIyAgICAgICAgICAgICBwZW4gPSBRUGVuKAojICAgICAgICAgICAgICAgICBwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5XaW5kb3dUZXh0KSwKIyAgICAgICAgICAgICAgICAgMSwKIyAgICAgICAgICAgICAgICAgUXQuUGVuU3R5bGUuRGFzaExpbmUsCiMgICAgICAgICAgICAgKQojICAgICAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChyZWN0LCAxLCAxKQoKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoUU9iamVjdCk6CiAgICBkZWYgcGFpbnROb2RlKHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQoKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAADIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					1608,
					1,
					"paste",
					null,
					"AgAAAFsGAAAAAAAAZQkAAAAAAAAAAAAAZQkAAAAAAABlCQAAAAAAADMAAAAJZGVmIHBhaW50Tm9kZShzZWxmLCBncmFwaDpHcmFwaE1vZGVsLCBuOkhhc2hhYmxlKTo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOBgAAAAAAAFsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1611,
					2,
					"left_delete",
					null,
					"AgAAAPQBAAAAAAAA9AEAAAAAAABEBAAACiMgY2xhc3MgRm5Ob2RlV2lkZ2V0KFFHcmFwaGljc1dpZGdldCk6CiMgICAgIGRlZiBfX2luaXRfXyhzZWxmLCBwYXJlbnQ6IE9wdGlvbmFsW1FHcmFwaGljc0l0ZW1dID0gTm9uZSkgLT4gTm9uZToKIyAgICAgICAgIFFHcmFwaGljc1dpZGdldC5fX2luaXRfXyhzZWxmLCBwYXJlbnQ9cGFyZW50KQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNNb3ZhYmxlLCBUcnVlKQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNTZWxlY3RhYmxlLCBUcnVlKQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNGb2N1c2FibGUsIFRydWUpCgojICAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uOiBRU3R5bGVPcHRpb25HcmFwaGljc0l0ZW0sIHdpZGdldD1Ob25lKToKIyAgICAgICAgIHBhbGV0dGUgPSBzZWxmLnBhbGV0dGUoKQoKIyAgICAgICAgIHBlbiA9IFFQZW4ocGFsZXR0ZS5jb2xvcihRUGFsZXR0ZS5Db2xvclJvbGUuVGV4dCksIDEpCiMgICAgICAgICBwYWludGVyLnNldFBlbihwZW4pCiMgICAgICAgICByZWN0ID0gUVJlY3RGKDAsIDAsIHNlbGYuZ2VvbWV0cnkoKS53aWR0aCgpLCBzZWxmLmdlb21ldHJ5KCkuaGVpZ2h0KCkpCiMgICAgICAgICAjIHBhaW50ZXIuZHJhd0VsbGlwc2UocmVjdCkKCiMgICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChyZWN0LCAxMCwgMTApCgojICAgICAgICAgaWYgUVN0eWxlLlN0YXRlRmxhZy5TdGF0ZV9TZWxlY3RlZCBpbiBvcHRpb24uc3RhdGU6CiMgICAgICAgICAgICAgcGVuID0gUVBlbigKIyAgICAgICAgICAgICAgICAgcGFsZXR0ZS5jb2xvcihRUGFsZXR0ZS5Db2xvclJvbGUuV2luZG93VGV4dCksCiMgICAgICAgICAgICAgICAgIDEsCiMgICAgICAgICAgICAgICAgIFF0LlBlblN0eWxlLkRhc2hMaW5lLAojICAgICAgICAgICAgICkKIyAgICAgICAgICAgICBwYWludGVyLnNldFBlbihwZW4pCiMgICAgICAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3QocmVjdCwgMSwgMSkK8wEAAAAAAADzAQAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BgAAAAAAAPQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1615,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAwAoAAAAAAADOCQAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAoJbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAoJUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKCmNsYXNzIEZuR3JhcGhEZWxlZ2F0ZShRT2JqZWN0KToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSA0CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICAjIGRyYXcgb3V0bGluZQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KG9wdGlvbi5yZWN0LCA0LCA0KQoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufSIpCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CglkZWYgX19pbml0X18oCgkJc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKCSk6CgkJc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQoKCQlzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKCWRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgoJCS4uLgoKCWRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CgkJdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKCQlzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKCQlkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKCQkJaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CgkJCQl1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKCQkJCQlmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQoJCQkJKQoJCQkJZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKCQlncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCgkJaWYgZ3JhcGhtb2RlbDoKCQkJYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgoJCQlmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CgkJCQlhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgoJCQkJYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCgkJCQlhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCgkJCQlhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKCQkJYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgoJYXBwID0gUUFwcGxpY2F0aW9uKCkKCWdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCglmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCgljd2QgPSBQYXRoLmN3ZCgpCgljd2QuZ2xvYigiKiIpCgoJZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAoJCVtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KCSkKCWdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCglncmFwaF92aWV3LnNob3coKQoJYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVAgAAAAAAABUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1619,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAwAoAAAAAAADACgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKFFPYmplY3QpOgogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCgogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAwAAAAAAAOwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1625,
					1,
					"reindent",
					null,
					"AQAAAM4FAAAAAAAA1gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBQAAAAAAAM4FAAAAAAAAAAAAAADAaUA"
				],
				[
					1626,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAANYFAAAAAAAA1wUAAAAAAAAAAAAA1wUAAAAAAADYBQAAAAAAAAAAAADYBQAAAAAAANkFAAAAAAAAAAAAANkFAAAAAAAA2gUAAAAAAAAAAAAA2gUAAAAAAADbBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWBQAAAAAAANYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1627,
					1,
					"insert",
					{
						"characters": "_del"
					},
					"BAAAANsFAAAAAAAA3AUAAAAAAAAAAAAA3AUAAAAAAADdBQAAAAAAAAAAAADdBQAAAAAAAN4FAAAAAAAAAAAAAN4FAAAAAAAA3wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbBQAAAAAAANsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1628,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_delegate"
					},
					"AgAAANsFAAAAAAAA2wUAAAAAAAAEAAAAX2RlbNsFAAAAAAAA5AUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfBQAAAAAAAN8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1629,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA5QUAAAAAAADmBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkBQAAAAAAAOQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1630,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYFAAAAAAAA5wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmBQAAAAAAAOYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1640,
					1,
					"paste",
					null,
					"AQAAAOcFAAAAAAAA9gUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnBQAAAAAAAOcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1641,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPYFAAAAAAAA+AUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2BQAAAAAAAPYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1653,
					1,
					"paste",
					null,
					"AgAAABECAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAdAgAAAAAAAAcAAABRT2JqZWN0",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAgAAAAAAABgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1656,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					1658,
					1,
					"insert",
					{
						"characters": "NodeD"
					},
					"BQAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AQAAAAAAAPoBAAAAAAAAAAAAAAAAAAA"
				],
				[
					1659,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":11,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1084,
							1658,
							5
						],
						"trigger": "NodeDelegate"
					},
					"AwAAAPoBAAAAAAAA+gEAAAAAAAAFAAAATm9kZUT6AQAAAAAAAAYCAAAAAAAAAAAAAJYBAAAAAAAApAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AQAAAAAAAP8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					1664,
					3,
					"left_delete",
					null,
					"AwAAAAgCAAAAAAAACAIAAAAAAAAMAAAATm9kZURlbGVnYXRlBwIAAAAAAAAHAgAAAAAAAAEAAAAKBgIAAAAAAAAGAgAAAAAAAAEAAAAK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUAgAAAAAAAAgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1668,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA/QoAAAAAAAD8CgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCmNsYXNzIEZuR3JhcGhEZWxlZ2F0ZShOb2RlRGVsZWdhdGUpOgogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAgAAAAAAAAcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1671,
					1,
					"left_delete",
					null,
					"AQAAAK4CAAAAAAAArgIAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvAgAAAAAAAK8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1672,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAgAAAAAAAK4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1675,
					1,
					"left_delete",
					null,
					"AQAAABMEAAAAAAAAEwQAAAAAAAABAAAANA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUBAAAAAAAABQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1676,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATBAAAAAAAABMEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1678,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA/woAAAAAAAD/CgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGgsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					1681,
					1,
					"left_delete",
					null,
					"AQAAADsFAAAAAAAAOwUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "\n\nself.g"
					},
					"CwAAAF8EAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGkEAAAAAAAAAAAAAGkEAAAAAAAAcQQAAAAAAAAAAAAAYAQAAAAAAABgBAAAAAAAAAgAAAAgICAgICAgIGkEAAAAAAAAagQAAAAAAAAAAAAAagQAAAAAAABrBAAAAAAAAAAAAABrBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAbQQAAAAAAAAAAAAAbQQAAAAAAABuBAAAAAAAAAAAAABuBAAAAAAAAG8EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfBAAAAAAAAF8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1685,
					1,
					"insert",
					{
						"characters": "ra"
					},
					"AgAAAG8EAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAABxBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvBAAAAAAAAG8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					1687,
					1,
					"left_delete",
					null,
					"AQAAAGAEAAAAAAAAYAQAAAAAAAARAAAACiAgICAgICAgc2VsZi5ncmE",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxBAAAAAAAAGAEAAAAAAAAAAAAAABAWEA"
				],
				[
					1694,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAABEBQAAAAAAAAAAAABEBQAAAAAAAEUFAAAAAAAAAAAAAEUFAAAAAAAATQUAAAAAAAAAAAAAPAUAAAAAAAA8BQAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7BQAAAAAAADsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1695,
					1,
					"paste",
					null,
					"AQAAAEUFAAAAAAAAzQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFBQAAAAAAAEUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1698,
					2,
					"left_delete",
					null,
					"AgAAAFYFAAAAAAAAVgUAAAAAAABKAAAAICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmdVBQAAAAAAAFUFAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgBQAAAAAAAFYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "\nfn"
					},
					"BAAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVBQAAAAAAAFUFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBQAAAAAAAGAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1704,
					1,
					"insert",
					{
						"characters": " graph."
					},
					"BwAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiBQAAAAAAAGIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1705,
					1,
					"insert",
					{
						"characters": "nodeP"
					},
					"BQAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAAbQUAAAAAAABuBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpBQAAAAAAAGkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1706,
					5,
					"left_delete",
					null,
					"BQAAAG0FAAAAAAAAbQUAAAAAAAABAAAAUGwFAAAAAAAAbAUAAAAAAAABAAAAZWsFAAAAAAAAawUAAAAAAAABAAAAZGoFAAAAAAAAagUAAAAAAAABAAAAb2kFAAAAAAAAaQUAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuBQAAAAAAAG4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1707,
					1,
					"insert",
					{
						"characters": "getN"
					},
					"BAAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpBQAAAAAAAGkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1708,
					4,
					"left_delete",
					null,
					"BAAAAGwFAAAAAAAAbAUAAAAAAAABAAAATmsFAAAAAAAAawUAAAAAAAABAAAAdGoFAAAAAAAAagUAAAAAAAABAAAAZWkFAAAAAAAAaQUAAAAAAAABAAAAZw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtBQAAAAAAAG0FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1711,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAwAAAAAAAOMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1712,
					1,
					"left_delete",
					null,
					"AQAAAOMDAAAAAAAA4wMAAAAAAAABAAAAOg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAwAAAAAAAOQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1713,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAwAAAAAAAOMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1719,
					1,
					"insert",
					{
						"characters": "GraphMoel"
					},
					"CQAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAADmAwAAAAAAAOcDAAAAAAAAAAAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAADpAwAAAAAAAOoDAAAAAAAAAAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAwAAAAAAAOQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1721,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAwAAAAAAAOsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1728,
					1,
					"left_delete",
					null,
					"AQAAAHMFAAAAAAAAcwUAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0BQAAAAAAAHQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": ".getN"
					},
					"BQAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB4BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzBQAAAAAAAHMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1730,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getNodeProperty"
					},
					"AgAAAHQFAAAAAAAAdAUAAAAAAAAEAAAAZ2V0TnQFAAAAAAAAgwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4BQAAAAAAAHgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1731,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMFAAAAAAAAhQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDBQAAAAAAAIMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1732,
					1,
					"insert",
					{
						"characters": "n,"
					},
					"AgAAAIQFAAAAAAAAhQUAAAAAAAAAAAAAhQUAAAAAAACGBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEBQAAAAAAAIQFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1733,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYFAAAAAAAAhwUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGBQAAAAAAAIYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1734,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIcFAAAAAAAAiQUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHBQAAAAAAAIcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1735,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIBQAAAAAAAIgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAALcFAAAAAAAAuAUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3BQAAAAAAALcFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1739,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALgFAAAAAAAAugUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4BQAAAAAAALgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1742,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAgwsAAAAAAACCCwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6R3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0te2ZufSIpCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7BQAAAAAAALsFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1748,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAOECAAAAAAAA6QIAAAAAAAAAAAAA2AIAAAAAAADYAgAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAgAAAAAAANcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1749,
					1,
					"paste",
					null,
					"AQAAAOECAAAAAAAABAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAgAAAAAAAOECAAAAAAAAAAAAAAAA8L8"
				],
				[
					1755,
					1,
					"paste",
					null,
					"AgAAAC8DAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6AwAAAAAAAAYAAABmIntufSI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1AwAAAAAAAC8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1759,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAtQsAAAAAAAC1CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQoKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufS17Zm59IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAgAAAAAAANgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1761,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAtQsAAAAAAAC1CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQoKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufS17Zm59IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAgAAAAAAANgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1764,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAC0CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAADACAAAAAAAAAAAAADACAAAAAAAAMQIAAAAAAAAAAAAALgIAAAAAAAAuAgAAAAAAAAEAAAAJMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAAC8CAAAAAAAALwIAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAgAAAAAAAC0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1766,
					1,
					"reindent",
					null,
					"AQAAAC8CAAAAAAAAMAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAgAAAAAAAC8CAAAAAAAAAAAAAAAAOEA"
				],
				[
					1767,
					1,
					"insert",
					{
						"characters": "def"
					},
					"BAAAADACAAAAAAAAMQIAAAAAAAAAAAAAMgIAAAAAAAAyAgAAAAAAAAEAAAAJMQIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwAgAAAAAAADACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1768,
					1,
					"insert",
					{
						"characters": " header_tex"
					},
					"CwAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA1AgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA+AgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAgAAAAAAADMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1769,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAD4CAAAAAAAAPwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+AgAAAAAAAD4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1770,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8CAAAAAAAAQQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AgAAAAAAAD8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1771,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAgAAAAAAAEACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1773,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEUCAAAAAAAARgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAADQCAAAAAAAANQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0AgAAAAAAADQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAgAAAAAAAEgCAAAAAAAAAAAAAAAAS0A"
				],
				[
					1780,
					1,
					"reindent",
					null,
					"AQAAAEkCAAAAAAAASwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJAgAAAAAAAEkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1781,
					1,
					"left_delete",
					null,
					"AQAAAEoCAAAAAAAASgIAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAgAAAAAAAEsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1782,
					1,
					"insert",
					{
						"characters": "@override"
					},
					"CQAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAABPAgAAAAAAAFACAAAAAAAAAAAAAFACAAAAAAAAUQIAAAAAAAAAAAAAUQIAAAAAAABSAgAAAAAAAAAAAABSAgAAAAAAAFMCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKAgAAAAAAAEoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1785,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAwAAAAAAAM8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					1786,
					1,
					"reindent",
					null,
					"AQAAANADAAAAAAAA2AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAwAAAAAAANADAAAAAAAAAAAAAAAA8L8"
				],
				[
					1787,
					4,
					"left_delete",
					null,
					"BAAAANcDAAAAAAAA1wMAAAAAAAABAAAAINYDAAAAAAAA1gMAAAAAAAABAAAAINUDAAAAAAAA1QMAAAAAAAABAAAAINQDAAAAAAAA1AMAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAwAAAAAAANgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1788,
					1,
					"insert",
					{
						"characters": "@override"
					},
					"CQAAANQDAAAAAAAA1QMAAAAAAAAAAAAA1QMAAAAAAADWAwAAAAAAAAAAAADWAwAAAAAAANcDAAAAAAAAAAAAANcDAAAAAAAA2AMAAAAAAAAAAAAA2AMAAAAAAADZAwAAAAAAAAAAAADZAwAAAAAAANoDAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAA2wMAAAAAAADcAwAAAAAAAAAAAADcAwAAAAAAAN0DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAwAAAAAAANQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1803,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAABPAgAAAAAAAFACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAgAAAAAAAEcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1804,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFACAAAAAAAAUQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAgAAAAAAAFACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1807,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEUCAAAAAAAARgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAgAAAAAAAEUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1808,
					1,
					"insert",
					{
						"characters": " graph:Gr"
					},
					"CQAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABOAgAAAAAAAAAAAABOAgAAAAAAAE8CAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAgAAAAAAAEYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1809,
					1,
					"insert",
					{
						"characters": "aphM"
					},
					"BAAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAFICAAAAAAAAUwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPAgAAAAAAAE8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1810,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "GraphModel"
					},
					"AgAAAE0CAAAAAAAATQIAAAAAAAAGAAAAR3JhcGhNTQIAAAAAAABXAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTAgAAAAAAAFMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1811,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFcCAAAAAAAAWAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAgAAAAAAAFcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1812,
					1,
					"insert",
					{
						"characters": " n:Hashbl"
					},
					"CQAAAFgCAAAAAAAAWQIAAAAAAAAAAAAAWQIAAAAAAABaAgAAAAAAAAAAAABaAgAAAAAAAFsCAAAAAAAAAAAAAFsCAAAAAAAAXAIAAAAAAAAAAAAAXAIAAAAAAABdAgAAAAAAAAAAAABdAgAAAAAAAF4CAAAAAAAAAAAAAF4CAAAAAAAAXwIAAAAAAAAAAAAAXwIAAAAAAABgAgAAAAAAAAAAAABgAgAAAAAAAGECAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAgAAAAAAAFgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1813,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAGECAAAAAAAAYgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAgAAAAAAAGECAAAAAAAAAAAAAAAA8L8"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAF8CAAAAAAAAYAIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABfAgAAAAAAAF8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1826,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlAgAAAAAAAGUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1827,
					1,
					"paste",
					null,
					"AQAAAGgCAAAAAAAAwQIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoAgAAAAAAAGgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1830,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACVAgAAAAAAACEAAAB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2WVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC1AgAAAAAAAJQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1831,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAgAAAAAAAJoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1834,
					1,
					"left_delete",
					null,
					"AQAAAKcCAAAAAAAApwIAAAAAAAAKAAAACgkJcmV0dXJuIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxAgAAAAAAAKcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1837,
					1,
					"left_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAgAAAAAAAJsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1838,
					1,
					"right_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAgAAAAAAAJoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1839,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAgAAAAAAAJoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1849,
					1,
					"expand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAAVAwAAAAAAABIDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKCglkZWYgX2hlYWRlcl90ZXh0KHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgoJCWZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbn0iCgoJQG92ZXJyaWRlCiAgICBkZWYgc2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0te2ZufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIEBvdmVycmlkZQogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAEgMAAAAAAAAAAAAAAAA8L8"
				],
				[
					1856,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAVQwAAAAAAABUDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKCiAgICBkZWYgX2hlYWRlcl90ZXh0KHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbn0iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgc2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0te2ZufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIEBvdmVycmlkZQogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwAgAAAAAAALACAAAAAAAAAAAAAAAA8L8"
				],
				[
					1872,
					1,
					"left_delete",
					null,
					"AQAAAKMFAAAAAAAAowUAAAAAAAAsAAAAICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259Iik",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBQAAAAAAAKMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1878,
					1,
					"insert",
					{
						"characters": "header"
					},
					"BwAAAE4FAAAAAAAATwUAAAAAAAAAAAAATwUAAAAAAABPBQAAAAAAAAQAAABub2RlTwUAAAAAAABQBQAAAAAAAAAAAABQBQAAAAAAAFEFAAAAAAAAAAAAAFEFAAAAAAAAUgUAAAAAAAAAAAAAUgUAAAAAAABTBQAAAAAAAAAAAABTBQAAAAAAAFQFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOBQAAAAAAAFIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1881,
					1,
					"insert",
					{
						"characters": "self._"
					},
					"BwAAAFoGAAAAAAAAWwYAAAAAAAAAAAAAWwYAAAAAAABbBgAAAAAAAAsAAABmIntufS17Zm59IlsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABlBgAAAAAAAFoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1882,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_header_text"
					},
					"AgAAAF8GAAAAAAAAXwYAAAAAAAABAAAAX18GAAAAAAAAawYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABgBgAAAAAAAGAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1883,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsGAAAAAAAAbQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrBgAAAAAAAGsGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1884,
					1,
					"insert",
					{
						"characters": "graph,"
					},
					"BgAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABuBgAAAAAAAAAAAABuBgAAAAAAAG8GAAAAAAAAAAAAAG8GAAAAAAAAcAYAAAAAAAAAAAAAcAYAAAAAAABxBgAAAAAAAAAAAABxBgAAAAAAAHIGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABsBgAAAAAAAGwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1885,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAByBgAAAAAAAHIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1893,
					1,
					"cut",
					null,
					"AQAAAK4FAAAAAAAArgUAAAAAAABAAAAAIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuBQAAAAAAAK4FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1896,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAEAGAAAAAAAASAYAAAAAAAAAAAAANwYAAAAAAAA3BgAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2BgAAAAAAADYGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1897,
					1,
					"paste",
					null,
					"AQAAAEAGAAAAAAAAgAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABABgAAAAAAAEAGAAAAAAAAAAAAAAAA8L8"
				],
				[
					1900,
					4,
					"left_delete",
					null,
					"BAAAAK4FAAAAAAAArgUAAAAAAAABAAAACqoFAAAAAAAAqgUAAAAAAAAEAAAAICAgIKYFAAAAAAAApgUAAAAAAAAEAAAAICAgIKUFAAAAAAAApQUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvBQAAAAAAAK8FAAAAAAAAAAAAAAAA8L8"
				],
				[
					1906,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAOwwAAAAAAAA7DAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm59IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259LXtmbn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBQAAAAAAAFkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1911,
					1,
					"insert",
					{
						"characters": ".__name__"
					},
					"CQAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAACwAgAAAAAAALECAAAAAAAAAAAAALECAAAAAAAAsgIAAAAAAAAAAAAAsgIAAAAAAACzAgAAAAAAAAAAAACzAgAAAAAAALQCAAAAAAAAAAAAALQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC2AgAAAAAAAAAAAAC2AgAAAAAAALcCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACuAgAAAAAAAK4CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1913,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAARAwAAAAAAABEDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259LXtmbn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3AgAAAAAAALcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1918,
					1,
					"insert",
					{
						"characters": "self._h"
					},
					"CAAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADLAwAAAAAAAAsAAABmIntufS17Zm59IssDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAADNAwAAAAAAAM4DAAAAAAAAAAAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAwAAAAAAANUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1919,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_header_text"
					},
					"AgAAAM8DAAAAAAAAzwMAAAAAAAACAAAAX2jPAwAAAAAAANsDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAwAAAAAAANEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1920,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsDAAAAAAAA3QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1921,
					1,
					"insert",
					{
						"characters": "graph,"
					},
					"BgAAANwDAAAAAAAA3QMAAAAAAAAAAAAA3QMAAAAAAADeAwAAAAAAAAAAAADeAwAAAAAAAN8DAAAAAAAAAAAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAwAAAAAAANwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1922,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAwAAAAAAAOIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1924,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAVAwAAAAAAABUDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgQG92ZXJyaWRlCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICAjIGRyYXcgb3V0bGluZQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KG9wdGlvbi5yZWN0LCA0LCA0KQoKICAgICAgICAjIGRyYXcgaGVhZGVyIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkAwAAAAAAAOQDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1928,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABKAwAAAAAAAAIAAAAxNg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAwAAAAAAAEkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1931,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAAkFAAAAAAAACgUAAAAAAAAAAAAACgUAAAAAAAAKBQAAAAAAAAIAAAAxNg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALBQAAAAAAAAkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1933,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAUgwAAAAAAABSDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQoKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKBQAAAAAAAAoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1945,
					2,
					"left_delete",
					null,
					"AgAAANYFAAAAAAAA1gUAAAAAAAArAAAAICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKdUFAAAAAAAA1QUAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABBgAAAAAAANYFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1954,
					2,
					"left_delete",
					null,
					"AgAAAHIDAAAAAAAAcgMAAAAAAAAsAAAACiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIilxAwAAAAAAAHEDAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAwAAAAAAAHIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1958,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxAwAAAAAAAHEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					1964,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoBQAAAAAAACgFAAAAAAAAAAAAAAAA8L8"
				],
				[
					1995,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAgAAAAAAAJUCAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AQAAAAAAAAABAAAANQYAAAAAAAA1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BgAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACZAQAAAAAAAAQAAABOb2RlmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BgAAACACAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAhAgAAAAAAAAQAAABOb2RlIQIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAlAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAIAAAAAAAAgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA1AIAAAAAAADVAgAAAAAAAAAAAADVAgAAAAAAANYCAAAAAAAAAAAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wIAAAAAAADTAgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"right_delete",
					null,
					"AQAAANcCAAAAAAAA1wIAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA1wIAAAAAAADXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAANcCAAAAAAAA2AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wIAAAAAAADXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "Node"
					},
					"BAAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAQAAAAAAABIBAAAAAAAAAAAAAAAwFNA"
				],
				[
					28,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAAwwAAAAAAAADDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgR3JhcGhEZWxlZ2F0ZQoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIF9oZWFkZXJfdGV4dChzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbi5fX25hbWVfX30iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgbm9kZVNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gOAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAAwwAAAAAAAADDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgR3JhcGhEZWxlZ2F0ZQoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIF9oZWFkZXJfdGV4dChzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbi5fX25hbWVfX30iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgbm9kZVNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gOAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAACQQAAAAAAAAJBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pylive/examples/python_function_graph/function_widget.py",
			"settings":
			{
				"buffer_size": 12045,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pyrigth",
				"Preferences: LSP-pyright Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"terminu",
				"Terminus: Close All"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"REMOE",
				"Package Control: Remove Package"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"View Package File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/src/pylive",
		"/C/dev/src/pylive/pylive",
		"/C/dev/src/pylive/pylive/examples",
		"/C/dev/src/pylive/pylive/examples/python_function_graph",
		"/C/dev/src/pylive/pylive/utils"
	],
	"file_history":
	[
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_model.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/function_widget.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/main.py",
		"/C/dev/src/pylive/pylive/QtTerminal/logwindow.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/abstract_graph_deletage.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/python_function_graph/function_graph_view.py",
		"/C/dev/src/pylive/expreiments/inspect_available_functions.py",
		"/C/dev/src/pylive/expreiments/inspect_functions_experiment.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/nx_graph_model.py",
		"/P/!!INSTALL!!/____Install 2024/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/utils/geo.py",
		"/C/Users/and/Desktop/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/abstract_graph_delegate.py",
		"/C/dev/src/pylive/expreiments/ListItemDelegate-example.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_node_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/ConnectableGraphicsItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/edge_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/QGraphicsArrowItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/Connectable.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphmodel_databased.py",
		"/C/dev/src/pylive/expreiments/built-a-dependency-graph-of-a-python-codebase.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_columnbased.py",
		"/C/dev/src/pylive/pylive/examples/livescript.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_databased.py",
		"/C/dev/src/pylive/docs/2024_12_06-hot-reloading-a-python-script.md",
		"/C/dev/src/pylive/pyproject.toml",
		"/C/dev/src/pylive/pylive/utils/unique.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/cell_support.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/line_number_area.py",
		"/C/dev/src/pylive/tests/test_cells.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_edit.py",
		"/C/dev/src/pylive/tests/test_function_signatures.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/display.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_skeleton.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/IPython/utils/terminal.py",
		"/C/dev/src/pylive/pylive/QtTerminal/terminal_with_exec.py",
		"/C/dev/src/pylive/pylive/render_engine/render_layers.py",
		"/C/dev/src/pylive/script_examples_to_run_live/spherical_transform.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/script_cursor.py",
		"/C/dev/src/pylive/pylive/__main__.py",
		"/C/dev/src/pylive/TODOs.md",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_skeleton.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_exec.py",
		"/C/dev/src/pylive/script_examples_to_run_live/glcanvas_widget_with_moderngl.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_number_editor.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/file_link.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/invisibles_highlighter.py",
		"/C/dev/src/pylive/script_examples_to_run_live/livescript_demonstration.py",
		"/C/dev/src/pylive/script_examples_to_run_live/lorem_ipsum.md",
		"/C/dev/src/pylive/expreiments/file_textdocument_link.py",
		"/C/dev/src/pylive/pylive/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_qtconsole.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/asttokens/line_numbers.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/old_architecture/script_editor_simple.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/jedi_completer.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_exec.py",
		"/C/dev/src/pylive/expreiments/glcanvas.py",
		"/C/dev/src/pylive/pylive/render_engine/regl/regl.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_skeleton.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/glcanvas.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLWindow_with_qopengl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget_with_request_animation.py",
		"/C/dev/src/pylive/pylive/render_engine/utils/__init__.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget-with_painting_signal.py",
		"/C/dev/src/pylive/pylive/render_engine/glwidget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWindow.py",
		"/C/Users/andris/AppData/Local/Temp/2ea7c807-5541-48c5-9e23-9d4d4826a0ed_Microsoft Office 2021 Pro Plus.zip.0ed/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/Users/andris/Downloads/Microsoft Office 2021 Pro Plus (365 ) + Patch/Microsoft Office 2021 Pro Plus/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/dev/src/pylive/expreiments/opengl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pygame_moderngl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/opengl_outside_window.py",
		"/C/dev/src/pylive/pylive/render_engine/orbit_control.py",
		"/C/dev/src/pylive/pylive/render_engine/lookAt_standalone.vert",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/linter_widget.py",
		"/C/dev/src/pylive/pylive/logwindow.py",
		"/C/dev/src/pylive/pylive/shaders/billboard.vert",
		"/C/dev/src/pylive/pylive/render_engine/resource_manager.py",
		"/C/dev/src/pylive/pylive/render_engine/examples/1 render layers.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/unified_titlebar.py",
		"/C/dev/src/pylive/pylive/render_engine/camera.py",
		"/C/dev/src/pylive/pylive/shaders/default_vertex_shader.vert",
		"/C/dev/src/pylive/pylive/shaders/flat_fragment_shader.frag",
		"/C/dev/src/pylive/gloo/render_layers.py",
		"/C/dev/src/pylive/gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/orbit_control.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_window_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/rendering_with_qt.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/qpygletwidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_1.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget (Not Working).py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_2.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_canvas_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pyglet_on_QWidget.py",
		"/C/dev/src/pylive/expreiments/ipython/ipython_kernel.py",
		"/C/dev/src/pylive/expreiments/ipython/qtconsole_inprocess1.py",
		"/C/dev/src/pylive/expreiments/ipython/simple_console.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_ipython.py",
		"/C/dev/src/pylive/expreiments/simple_console.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_gpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notbook_with_chatgpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/live_framework.py",
		"/C/dev/src/pylive/expreiments/ipython_kernel.py",
		"/C/dev/src/pylive/pylive/examples/livenotebook.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtGui.pyi",
		"/C/dev/src/pylive/expreiments/visualize_function_dependencies.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter_OLD.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_completer.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/WhitespaceHighlighter.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/highlighters.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"nodedele",
			"n = ",
			"NodeWidget",
			"print",
			"geometry",
			"createNodeW",
			"delegate",
			"initiate",
			"contextMenu",
			"eventFilter",
			"intersectLineWithRectangle",
			"intersectLineWithPath",
			"ellipse",
			"intersectRay",
			"rect_max[1]",
			"rect_min[1]",
			"rect_max[0]",
			"rect_min[0]",
			"print",
			"intersect",
			"intersectLineWithPath",
			"intersectLine",
			"intersect",
			"intersectRayWithPath",
			"intersectLine",
			"print",
			".target",
			".source",
			"def paint(",
			"def paint",
			"Signal",
			"scenePositionChanged",
			"scenePositionChan ged",
			"ItemScenePositionHasChanged",
			"print",
			"LiveScript",
			"cells",
			"cell",
			"insertbar",
			"trimesh",
			"self.cell",
			"setEditor",
			"cell",
			"status",
			"self._wi",
			"saveFile",
			"def setup",
			"def setu[",
			"setup",
			"self.document",
			"updateWindowTitle",
			"modified",
			"def open",
			"setPreview",
			"pylive.display",
			"get_line_at_offset",
			"updateLine",
			"LineNumberArea",
			"line number",
			"setAttribute(",
			"setAttribute",
			"get_context",
			"QOpenGLWindow",
			"import QOpenGLWindow",
			"Literal",
			"literal",
			"Searching",
			"Lityeral",
			"dtype",
			"\t\t'",
			"internal_format",
			"dtype",
			"mode",
			"varyings_capture_mode",
			"internal_format",
			"dtype",
			"internal_format",
			"dtype",
			"internal_format",
			"varyings_capture_mode",
			"self",
			"for",
			"framebuffers",
			"placeholder",
			"find",
			"fin",
			"clearNo",
			"showException",
			"evalu",
			"completer",
			"RopeC",
			"lineNumberArea",
			"completer",
			"print",
			"new file",
			"setWindowTitle",
			"modifie",
			"setPreviewCollapse",
			"contentChang",
			"setupMenui",
			"NodeW",
			"self.palette",
			"threshold",
			"cancel",
			"interactive_edge_end_pin",
			"interactive_edge_start_pin",
			"interactive_edge_end_pin",
			"interactive_edge_moving_pin",
			"interactive_edge_start_pin",
			"self._pare",
			".parent_node",
			"_edges",
			"GrabThreshold",
			"center",
			"HeaderWidget",
			"palette",
			"updatePosition",
			"pinAt",
			"onNodeEditorChange",
			"onnodePropertyChange",
			"updatePin",
			"EdgeItem",
			"InletItem",
			"OutletItem",
			"PinItem",
			"inlet",
			"handleInletsADDED",
			"handleNodesProp"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bottom",
			"top",
			"right",
			"left",
			"self._document",
			"interactive_edge_moving_pin",
			"interactive_edge_fixed_pin",
			"interactive_edge_moving_pin",
			"EdgeGraphicsItem",
			"InletGraphicsItem",
			"OutletGraphicsItem",
			"PinGraphicsItem",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"OutletRef",
			"InletRef",
			"EdgeRef",
			"NodeRef",
			"EdgeDataColumn",
			"OutletDataColumn",
			"InletDataColumn",
			"NodeDataColumn",
			"EdgeView",
			"InletView",
			"OutletView",
			"self._edgeTable",
			"self._outletTable",
			"self._inletTable",
			"self._nodeTable"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pylive/examples/python_function_graph/graph_view.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9882,
						"regions":
						{
						},
						"selection":
						[
							[
								515,
								515
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pylive/utils/unique.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 658,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/utils/unique.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pylive/examples/python_function_graph/standard_graph_delegate.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3624,
						"regions":
						{
						},
						"selection":
						[
							[
								1696,
								1633
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/standard_graph_delegate.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 3,
					"file": "pylive/examples/python_function_graph/main.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3075,
						"regions":
						{
						},
						"selection":
						[
							[
								1033,
								1033
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/main.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "pylive/examples/python_function_graph/function_widget.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12045,
						"regions":
						{
						},
						"selection":
						[
							[
								6589,
								6464
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/function_widget.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2686.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.43028306753,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 412.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Python: Run File (CrossPlatform)",
	"project": "pylive.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"geo",
				"pylive\\utils\\geo.py"
			],
			[
				"nx",
				"pylive\\QtGraphEditor\\NetrowkXGraphditor\\NXGraphView.py"
			],
			[
				"unique",
				"pylive\\pylive\\utils\\unique.py"
			],
			[
				"linenu",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"test",
				"pylive\\tests\\test_cells.py"
			],
			[
				"cell_s",
				"pylive\\pylive\\QtScriptEditor\\cell_support.py"
			],
			[
				"linen",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"lineare",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"terminal",
				"pylive\\pylive\\QtTerminal\\terminal_with_exec.py"
			],
			[
				"termina",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\terminal.py"
			],
			[
				"scripte",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"script",
				"pylive\\pylive\\QtScriptEditor\\components\\script_cursor.py"
			],
			[
				"pyg",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"numbere",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"highlight",
				"pylive\\pylive\\QtScriptEditor\\components\\invisibles_highlighter.py"
			],
			[
				"glca",
				"pylive\\script_examples_to_run_live\\glcanvas_widget_with_moderngl.py"
			],
			[
				"filelink",
				"pylive\\expreiments\\file_textdocument_link.py"
			],
			[
				"displ",
				"pylive\\pylive\\QtLiveApp\\display.py"
			],
			[
				"line",
				"pylive\\.venv\\Lib\\site-packages\\asttokens\\line_numbers.py"
			],
			[
				"scri",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"jedi",
				"pylive\\pylive\\QtScriptEditor\\components\\jedi_completer.py"
			],
			[
				"with_exec",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"framew",
				"pylive\\pylive\\QtLiveFramework\\live_framework_skeleton.py"
			],
			[
				"moderngl",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"modenr",
				"pylive\\expreiments\\3d_rendering\\pygame_moderngl_boilerplate.py"
			],
			[
				"regl",
				"pylive\\pylive\\render_engine\\regl\\regl.py"
			],
			[
				"logwind",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"resou",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"render",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"main",
				"pylive\\pylive\\render_engine\\regl\\main.py"
			],
			[
				"resource",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"modern",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"unifie",
				"pylive\\expreiments\\unified_titlebar.py"
			],
			[
				"camer",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"linter",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"Script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"camera",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"orbit",
				"pylive\\pylive\\render_engine\\orbit_control.py"
			],
			[
				"renderl",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"live",
				"pylive\\pylive\\examples\\livescript.py"
			],
			[
				"orbitcon",
				"pylive\\expreiments\\3d_rendering\\orbit_control.py"
			],
			[
				"number editor",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"whitespace",
				"pylive\\pylive\\QtScriptEditor\\components\\WhitespaceHighlighter.py"
			],
			[
				"pygme",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"highlighte",
				"pylive\\pylive\\QtScriptEditor\\highlighters.py"
			],
			[
				"textedito",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_completer.py"
			],
			[
				"keywo",
				"pylive\\pylive\\QtScriptEditor\\components\\KeywordsCompleter.py"
			],
			[
				"scrip",
				"pylive\\pylive\\QtScriptEditor\\ScriptEdit.py"
			],
			[
				"logw",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"capture",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\capture.py"
			],
			[
				"preview",
				"pylive\\pylive\\preview_widget.py"
			],
			[
				"pan",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"panand",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"visu",
				"pylive\\pylive\\examples\\visual_coding.py"
			],
			[
				"log",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"livescript",
				"pylive\\pylive\\LiveScript.py"
			],
			[
				"mind",
				"pylive\\pylive\\QtGraphEditor\\mindmap_example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 59.3333333333,
		"last_filter": "circle",
		"selected_items":
		[
			[
				"circle",
				"CircleWidget"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 307.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
