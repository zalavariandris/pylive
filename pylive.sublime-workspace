{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"QGRaphicsLin",
				"QGraphicsLinearLayout"
			],
			[
				"QGraphisLine",
				"QGraphicsLinearLayout"
			],
			[
				"prop",
				"properties"
			],
			[
				"target",
				"target_node"
			],
			[
				"source",
				"source_node"
			],
			[
				"handleE",
				"handleEdgesPropertiesChanged"
			],
			[
				"edgesa",
				"edgesAboutToBeRemoved"
			],
			[
				"handleNo",
				"handleNodesRemoved"
			],
			[
				"nodesR",
				"nodesAboutToBeRemoved"
			],
			[
				"mouse",
				"mousePressEvent"
			],
			[
				"make_uni",
				"make_unique_name"
			],
			[
				"QSize",
				"QSizeF"
			],
			[
				"Gra",
				"GraphView"
			],
			[
				"grap",
				"graph_model"
			],
			[
				"size",
				"sizeHint"
			],
			[
				"Graph",
				"GraphView"
			],
			[
				"rea",
				"read_text"
			],
			[
				"graphmod",
				"graphmodel"
			],
			[
				"graph",
				"graphmodel"
			],
			[
				"add",
				"addMenu"
			],
			[
				"map",
				"mapToScene"
			],
			[
				"mapF",
				"mapFromGlobal"
			],
			[
				"crea",
				"createStandardContextMenu"
			],
			[
				"QgraphicsA",
				"QGraphicsArrowItem"
			],
			[
				"Abstra",
				"AbstractGraphDelegate"
			],
			[
				"color",
				"ColorRole"
			],
			[
				"setP",
				"setPen"
			],
			[
				"QGra",
				"QGraphicsLayout"
			],
			[
				"QGraphics",
				"QGraphicsScene"
			],
			[
				"item",
				"_item_to_widget_map"
			],
			[
				"Grap",
				"GraphicsItemFlag"
			],
			[
				"base",
				"AlternateBase"
			],
			[
				"Abstr",
				"AbstractGraphDelegate"
			],
			[
				"ty",
				"typing"
			],
			[
				"QPainter",
				"QPainterPath"
			],
			[
				"set",
				"setColor"
			],
			[
				"len",
				"length"
			],
			[
				"mapFrom",
				"mapFromItem"
			],
			[
				"_boun",
				"_boundingrect"
			],
			[
				"QRec",
				"QRectF"
			],
			[
				"rect",
				"rect_shape"
			],
			[
				"update",
				"updatePosition"
			],
			[
				"addP",
				"addPolygon"
			],
			[
				"poly",
				"polygon"
			],
			[
				"QPol",
				"QPolygonF"
			],
			[
				"tar",
				"target_offset"
			],
			[
				"str",
				"createStroke"
			],
			[
				"shape_",
				"shape_center"
			],
			[
				"Itemsend",
				"ItemSendsScenePositionChanges"
			],
			[
				"fla",
				"GraphicsItemFlag"
			],
			[
				"scenePos",
				"scenePositionChanged"
			],
			[
				"sceneP",
				"scenePositionChanged"
			],
			[
				"isin",
				"isinstance"
			],
			[
				"setS",
				"setSource"
			],
			[
				"Qpoint",
				"QPointF"
			],
			[
				"QPainterP",
				"QPainterPathStroker"
			],
			[
				"sc",
				"scene"
			],
			[
				"Qpainter",
				"QPainterPath"
			],
			[
				"QPoint",
				"QPointF"
			],
			[
				"adjus",
				"adjusted"
			],
			[
				"Graphis",
				"GraphicsItemFlag"
			],
			[
				"group",
				"group_widget"
			],
			[
				"send",
				"ItemSendsScenePositionChanges"
			],
			[
				"Grpahi",
				"GraphicsItemFlag"
			],
			[
				"flag",
				"GraphicsItemFlag"
			],
			[
				"QGrap",
				"QGraphicsItem"
			],
			[
				"handleEdges",
				"handleEdgesAdded"
			],
			[
				"graphmodel",
				"graphmodel_databased"
			],
			[
				"pa",
				"parent"
			],
			[
				"line",
				"lineCount"
			],
			[
				"inser",
				"insertBar"
			],
			[
				"cell",
				"cell_at_line"
			],
			[
				"Code",
				"CodeHasDocstring"
			],
			[
				"assertNo",
				"assertNotEqual"
			],
			[
				"Script",
				"ScriptEdit"
			],
			[
				"end",
				"end_block"
			],
			[
				"begin",
				"begin_rect"
			],
			[
				"find",
				"findBlockByLineNumber"
			],
			[
				"Modi",
				"KeyboardModifier"
			],
			[
				"QKey",
				"QKeyEvent"
			],
			[
				"curr",
				"currentBlockState"
			],
			[
				"current",
				"currentBlockState"
			],
			[
				"curren",
				"currentBlockState"
			],
			[
				"list",
				"listwidget"
			],
			[
				"setCi",
				"setCurrentIndex"
			],
			[
				"file",
				"fileChanged"
			],
			[
				"QMenu",
				"QMenuBar"
			],
			[
				"parent",
				"parentWidget"
			],
			[
				"QMeu",
				"QMenuBar"
			],
			[
				"QPlainTe",
				"QPlainTextDocumentLayout"
			],
			[
				"LiveA",
				"QtLiveApp"
			],
			[
				"NotIm",
				"NotImplementedError"
			],
			[
				"LiveAppW",
				"LiveAppWithExec"
			],
			[
				"Qt",
				"QtGraphEditor"
			],
			[
				"text",
				"textedit"
			],
			[
				"inter",
				"intersects"
			],
			[
				"con",
				"contentsRect"
			],
			[
				"Upda",
				"UpdateRequest"
			],
			[
				"lineNumberAre",
				"lineNumberAreaWidth"
			],
			[
				"gc",
				"get_context"
			],
			[
				"per",
				"perf_counter_ns"
			],
			[
				"pain",
				"painting"
			],
			[
				"setSwap",
				"setSwapBehavior"
			],
			[
				"setSw",
				"setSwapInterval"
			],
			[
				"call",
				"callback"
			],
			[
				"glEnableVerte",
				"glEnableVertexAttribArray"
			],
			[
				"QOpenGLShader",
				"QOpenGLShaderProgram"
			],
			[
				"GL",
				"GLCanvas"
			],
			[
				"reques",
				"requestUpdate"
			],
			[
				"initi",
				"initializeOpenGLFunctions"
			],
			[
				"reque",
				"requestedFormat"
			],
			[
				"request",
				"requestUpdate"
			],
			[
				"resize",
				"resizeGL"
			],
			[
				"QTo",
				"QtOpenGL"
			],
			[
				"Qop",
				"QtOpenGLWidgets"
			],
			[
				"open",
				"opengl_widget"
			],
			[
				"paintE",
				"paintEvent"
			],
			[
				"GL_DEPTH_BU",
				"GL_DEPTH_BUFFER_BIT"
			],
			[
				"Qope",
				"QOpenGLWidget"
			],
			[
				"frame",
				"defaultFramebufferObject"
			],
			[
				"validate",
				"validate_uniforms"
			],
			[
				"ui",
				"uint8"
			],
			[
				"u",
				"uint"
			],
			[
				"Res",
				"result"
			],
			[
				"in",
				"input"
			],
			[
				"ex",
				"exceptionThrown"
			],
			[
				"lint",
				"lintException"
			],
			[
				"proje",
				"projectionMatrix"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pylive/examples/python_function_graph/graph_view.py",
			"settings":
			{
				"buffer_size": 10575,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					764,
					1,
					"left_delete",
					null,
					"AQAAALwCAAAAAAAAvAIAAAAAAADfAAAAICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc01vdmFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNTZWxlY3RhYmxlLCBUcnVlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkdyYXBoaWNzSXRlbUZsYWcuSXRlbUlzRm9jdXNhYmxlLCBUcnVlKQ",
					"AQAAAAAAAAABAAAAmwMAAAAAAAC8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"right_delete",
					null,
					"AQAAALwCAAAAAAAAvAIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvAIAAAAAAAC8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAhwIAAAAAAACHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": "widget"
					},
					"BwAAAKwJAAAAAAAArQkAAAAAAAAAAAAArQkAAAAAAACtCQAAAAAAAAYAAAByZXR1cm6tCQAAAAAAAK4JAAAAAAAAAAAAAK4JAAAAAAAArwkAAAAAAAAAAAAArwkAAAAAAACwCQAAAAAAAAAAAACwCQAAAAAAALEJAAAAAAAAAAAAALEJAAAAAAAAsgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAkAAAAAAACyCQAAAAAAAAAAAAAAAPC/"
				],
				[
					787,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALIJAAAAAAAAswkAAAAAAAAAAAAAswkAAAAAAAC0CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgkAAAAAAACyCQAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADYCQAAAAAAAAAAAADYCQAAAAAAANkJAAAAAAAAAAAAANkJAAAAAAAA2gkAAAAAAAAAAAAA2gkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAANwJAAAAAAAA3QkAAAAAAAAAAAAA3QkAAAAAAADeCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwkAAAAAAADPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					1,
					"insert",
					{
						"characters": " widget"
					},
					"BwAAAN4JAAAAAAAA3wkAAAAAAAAAAAAA3wkAAAAAAADgCQAAAAAAAAAAAADgCQAAAAAAAOEJAAAAAAAAAAAAAOEJAAAAAAAA4gkAAAAAAAAAAAAA4gkAAAAAAADjCQAAAAAAAAAAAADjCQAAAAAAAOQJAAAAAAAAAAAAAOQJAAAAAAAA5QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gkAAAAAAADeCQAAAAAAAAAAAAAAAPC/"
				],
				[
					795,
					1,
					"insert",
					{
						"characters": "\nwidget.setL"
					},
					"DQAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADYCQAAAAAAAAAAAADYCQAAAAAAANkJAAAAAAAAAAAAANkJAAAAAAAA2gkAAAAAAAAAAAAA2gkAAAAAAADbCQAAAAAAAAAAAADbCQAAAAAAANwJAAAAAAAAAAAAANwJAAAAAAAA3QkAAAAAAAAAAAAA3QkAAAAAAADeCQAAAAAAAAAAAADeCQAAAAAAAN8JAAAAAAAAAAAAAN8JAAAAAAAA4AkAAAAAAAAAAAAA4AkAAAAAAADhCQAAAAAAAAAAAADhCQAAAAAAAOIJAAAAAAAAAAAAAOIJAAAAAAAA4wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwkAAAAAAADPCQAAAAAAAAAAAAAAAPC/"
				],
				[
					796,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":13,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "setLayout"
					},
					"AgAAAN8JAAAAAAAA3wkAAAAAAAAEAAAAc2V0TN8JAAAAAAAA6AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wkAAAAAAADjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOgJAAAAAAAA6gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AkAAAAAAADoCQAAAAAAAAAAAAAAAPC/"
				],
				[
					798,
					1,
					"insert",
					{
						"characters": "QGRaphicsL"
					},
					"CgAAAOkJAAAAAAAA6gkAAAAAAAAAAAAA6gkAAAAAAADrCQAAAAAAAAAAAADrCQAAAAAAAOwJAAAAAAAAAAAAAOwJAAAAAAAA7QkAAAAAAAAAAAAA7QkAAAAAAADuCQAAAAAAAAAAAADuCQAAAAAAAO8JAAAAAAAAAAAAAO8JAAAAAAAA8AkAAAAAAAAAAAAA8AkAAAAAAADxCQAAAAAAAAAAAADxCQAAAAAAAPIJAAAAAAAAAAAAAPIJAAAAAAAA8wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QkAAAAAAADpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					1,
					"insert",
					{
						"characters": "in"
					},
					"AgAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA9AkAAAAAAAD1CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wkAAAAAAADzCQAAAAAAAAAAAAAAAPC/"
				],
				[
					801,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "QGraphicsLinearLayout"
					},
					"AgAAAOkJAAAAAAAA6QkAAAAAAAAMAAAAUUdSYXBoaWNzTGlu6QkAAAAAAAD+CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QkAAAAAAAD1CQAAAAAAAAAAAAAAAPC/"
				],
				[
					802,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAP4JAAAAAAAAAAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gkAAAAAAAD+CQAAAAAAAAAAAAAAAPC/"
				],
				[
					804,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAA/wkAAAAAAAD/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					812,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAKwJAAAAAAAArQkAAAAAAAAAAAAArQkAAAAAAACtCQAAAAAAAAgAAAB3aWRnZXQgPa0JAAAAAAAArgkAAAAAAAAAAAAArgkAAAAAAACvCQAAAAAAAAAAAACvCQAAAAAAALAJAAAAAAAAAAAAALAJAAAAAAAAsQkAAAAAAAAAAAAAsQkAAAAAAACyCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtAkAAAAAAACsCQAAAAAAAAAAAAAAAPC/"
				],
				[
					815,
					2,
					"left_delete",
					null,
					"AgAAAM4JAAAAAAAAzgkAAAAAAABHAAAAICAgICAgICB3aWRnZXQuc2V0TGF5b3V0KFFHcmFwaGljc0xpbmVhckxheW91dCgpKQogICAgICAgIHJldHVybiB3aWRnZXTNCQAAAAAAAM0JAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAFQoAAAAAAADOCQAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAYggAAAAAAABrCAAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"left_delete",
					null,
					"AQAAAA8EAAAAAAAADwQAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAEAQAAAAAAAAQBAAAAAAAAAAAAAAAAPC/"
				],
				[
					831,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAARBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwQAAAAAAAAPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAOCwAAAAAAAA4LAAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKIyBmcm9tIHN0YW5kYXJkX2dyYXBoX2RlbGVnYXRlIGltcG9ydCBTdGFuZGFyZEdyYXBoRGVsZWdhdGUKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9pZCwgbWFrZV91bmlxdWVfbmFtZQoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbAoKZnJvbSBweWxpdmUuUXRHcmFwaEVkaXRvci5OZXRyb3drWEdyYXBoRWRpdG9yLmxpbmtfZ3JhcGhpY3NfaXRlbXMgaW1wb3J0ICgKICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcywKKQpmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IucWdyYXBoaWNzX2Fycm93X2l0ZW0gaW1wb3J0ICgKICAgIFFHcmFwaGljc0Fycm93SXRlbSwKKQoKCmNsYXNzIFBpbldpZGdldChRR3JhcGhpY3NXaWRnZXQpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsCiAgICAgICAgaTogSGFzaGFibGUsCiAgICAgICAgbm9kZTogT3B0aW9uYWxbIk5vZGVXaWRnZXQiXSwKICAgICAgICB2aWV3OiAiR3JhcGhWaWV3IiwKICAgICkgLT4gTm9uZToKICAgICAgICBRR3JhcGhpY3NXaWRnZXQuX19pbml0X18oc2VsZiwgcGFyZW50PW5vZGUpCgogICAgICAgIHNlbGYuX25vZGUgPSBub2RlCiAgICAgICAgc2VsZi5fdmlldyA9IHZpZXcKICAgICAgICBzZWxmLl9pID0gaQoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIHdoaWNoOiBRdC5TaXplSGludCwgY29uc3RyYWludDogUVNpemVGIHwgUVNpemUgPSBRU2l6ZUYoKQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcmV0dXJuIFFTaXplRigyMCwgMjApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsIHBhaW50ZXI6IFFQYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUKICAgICk6CiAgICAgICAgciA9IDEwCiAgICAgICAgcGFpbnRlci5kcmF3RWxsaXBzZSgwLCAwLCByLCByKQoKICAgIGRlZiBtb3VzZVByZXNzRXZlbnQoc2VsZiwgZXZlbnQ6IFFHcmFwaGljc1NjZW5lTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICBzZWxmLl92aWV3LmluaXRpYXRlQ29ubmVjdGlvbihzZWxmKQoKCmNsYXNzIE5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgICAgIHZpZXc6ICJHcmFwaFZpZXciLAogICAgICAgIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lLAogICAgKSAtPiBOb25lOgogICAgICAgIFFHcmFwaGljc1dpZGdldC5fX2luaXRfXyhzZWxmLCBwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkdyYXBoaWNzSXRlbUZsYWcuSXRlbUlzTW92YWJsZSwgVHJ1ZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNGb2N1c2FibGUsIFRydWUpCgogICAgICAgIHNlbGYuX3ZpZXcgPSB2aWV3CiAgICAgICAgc2VsZi5fbiA9IG4KCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCB3aGljaDogUXQuU2l6ZUhpbnQsIGNvbnN0cmFpbnQ6IFFTaXplRiB8IFFTaXplID0gUVNpemVGKCkKICAgICkgLT4gUVNpemVGOgogICAgICAgIG9wdGlvbiA9IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSgpCiAgICAgICAgb3B0aW9uLmZvbnQgPSBzZWxmLmZvbnQoKQogICAgICAgIHJldHVybiBzZWxmLl92aWV3Ll9kZWxlZ2F0ZS5ub2RlU2l6ZUhpbnQoCiAgICAgICAgICAgIG9wdGlvbiwgc2VsZi5fdmlldy5fZ3JhcGhtb2RlbCwgc2VsZi5fbgogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwgcGFpbnRlcjogUVBhaW50ZXIsIG9wdGlvbjogUVN0eWxlT3B0aW9uR3JhcGhpY3NJdGVtLCB3aWRnZXQ9Tm9uZQogICAgKToKICAgICAgICBzZWxmLl92aWV3Ll9kZWxlZ2F0ZS5wYWludE5vZGUoCiAgICAgICAgICAgIHBhaW50ZXIsIG9wdGlvbiwgc2VsZi5fdmlldy5fZ3JhcGhtb2RlbCwgc2VsZi5fbgogICAgICAgICkKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRR3JhcGhpY3NTY2VuZU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgcHJpbnQoInByZXNzIikKICAgICAgICByZXR1cm4gc3VwZXIoKS5tb3VzZVByZXNzRXZlbnQoZXZlbnQpCgoKY2xhc3MgR3JhcGhEZWxlZ2F0ZShRT2JqZWN0KToKICAgIGRlZiBub2RlRmFjdG9yeShzZWxmLCB2aWV3LCBncmFwaCwgbikgLT4gUUdyYXBoaWNzSXRlbToKICAgICAgICByZXR1cm4gTm9kZVdpZGdldCh2aWV3PXZpZXcsIG49bikKCiAgICBkZWYgZWRnZUZhY3RvcnkoCiAgICAgICAgc2VsZiwgdmlldywgZ3JhcGgsIHNvdXJjZV9ub2RlLCB0YXJnZXRfbm9kZQogICAgKSAtPiBRR3JhcGhpY3NJdGVtOgogICAgICAgIGFycm93ID0gUUdyYXBoaWNzQXJyb3dJdGVtKCkKICAgICAgICBwZW4gPSBRUGVuKHZpZXcucGFsZXR0ZSgpLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5UZXh0KSwgMS41KQogICAgICAgIGFycm93LnNldFBlbihwZW4pCgogICAgICAgIGRlZiB1cGRhdGVfbGluaygpOgogICAgICAgICAgICBhcnJvdy5zZXRMaW5lKAogICAgICAgICAgICAgICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzKAogICAgICAgICAgICAgICAgICAgIHNvdXJjZV9ub2RlLmdlb21ldHJ5KCksIHRhcmdldF9ub2RlLmdlb21ldHJ5KCkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKQoKICAgICAgICB1cGRhdGVfbGluaygpCgogICAgICAgIHNvdXJjZV9ub2RlLmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQogICAgICAgIHRhcmdldF9ub2RlLmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQogICAgICAgIHJldHVybiBhcnJvdwoKICAgIGRlZiBub2RlU2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgR3JhcGhWaWV3KFFHcmFwaGljc1ZpZXcpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudD1Ob25lKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5zZXRSZW5kZXJIaW50cyhRUGFpbnRlci5BbnRpYWxpYXNpbmcpCiAgICAgICAgc2VsZi5zZXREcmFnTW9kZShRR3JhcGhpY3NWaWV3LkRyYWdNb2RlLlJ1YmJlckJhbmREcmFnKQogICAgICAgIHNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQogICAgICAgIHNjZW5lLnNldFNjZW5lUmVjdChRUmVjdCgtOTk5OSAvLyAyLCAtOTk5OSAvLyAyLCA5OTk5LCA5OTk5KSkKICAgICAgICBzZWxmLnNldFNjZW5lKHNjZW5lKQogICAgICAgICMgc2NlbmUuaW5zdGFsbEV2ZW50RmlsdGVyKHNlbGYpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBHcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXAgPSBkaWN0KCkKICAgICAgICBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXAgPSBkaWN0KCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsOiBHcmFwaE1vZGVsIHwgTm9uZSA9IE5vbmUKCiAgICBkZWYgbm9kZVdpZGdldChzZWxmLCBuOiBIYXNoYWJsZSk6CiAgICAgICAgcmV0dXJuIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQoKICAgIGRlZiBtb2RlbChzZWxmKSAtPiBHcmFwaE1vZGVsIHwgTm9uZToKICAgICAgICByZXR1cm4gc2VsZi5fZ3JhcGhtb2RlbAoKICAgIGRlZiBzZXRNb2RlbChzZWxmLCBncmFwaG1vZGVsOiBHcmFwaE1vZGVsKToKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsID0gZ3JhcGhtb2RlbAoKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzQWRkZWQuY29ubmVjdChzZWxmLmhhbmRsZU5vZGVzQWRkZWQpCiAgICAgICAgc2VsZi5fZ3JhcGhtb2RlbC5ub2Rlc0Fib3V0VG9CZVJlbW92ZWQuY29ubmVjdChzZWxmLmhhbmRsZU5vZGVzUmVtb3ZlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuY29ubmVjdCgKICAgICAgICAgICAgc2VsZi5oYW5kbGVOb2Rlc1Byb3BlcnRpZXNDaGFuZ2VkCiAgICAgICAgKQoKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmVkZ2VzQWRkZWQuY29ubmVjdChzZWxmLmhhbmRsZUVkZ2VzQWRkZWQpCiAgICAgICAgc2VsZi5fZ3JhcGhtb2RlbC5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuY29ubmVjdChzZWxmLmhhbmRsZUVkZ2VzUmVtb3ZlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmVkZ2VzUHJvcGVydGllc0NoYW5nZWQuY29ubmVjdCgKICAgICAgICAgICAgc2VsZi5oYW5kbGVFZGdlc1Byb3BlcnRpZXNDaGFuZ2VkCiAgICAgICAgKQoKICAgIGRlZiBoYW5kbGVOb2Rlc0FkZGVkKHNlbGYsIG5vZGVzOiBMaXN0W0hhc2hhYmxlXSk6CiAgICAgICAgZm9yIG4gaW4gbm9kZXM6CiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2RlbGVnYXRlLm5vZGVGYWN0b3J5KAogICAgICAgICAgICAgICAgdmlldz1zZWxmLCBncmFwaD1zZWxmLl9ncmFwaG1vZGVsLCBuPW4KICAgICAgICAgICAgKQoKICAgICAgICAgICAgc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dID0gd2lkZ2V0CiAgICAgICAgICAgIHNlbGYuX3dpZGdldF90b19pdGVtX21hcFt3aWRnZXRdID0gbgogICAgICAgICAgICBzZWxmLnNjZW5lKCkuYWRkSXRlbSh3aWRnZXQpCgogICAgZGVmIGhhbmRsZU5vZGVzUmVtb3ZlZChzZWxmLCBub2RlczogTGlzdFtIYXNoYWJsZV0pOgogICAgICAgIGZvciBuIGluIG5vZGVzOgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KICAgICAgICAgICAgc2VsZi5zY2VuZSgpLnJlbW92ZUl0ZW0od2lkZ2V0KQogICAgICAgICAgICBkZWwgc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCiAgICAgICAgICAgIGRlbCBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbd2lkZ2V0XQoKICAgIGRlZiBoYW5kbGVOb2Rlc1Byb3BlcnRpZXNDaGFuZ2VkKHNlbGYsIG5vZGVzUHJvcGVyaWVzKToKICAgICAgICBmb3IgbiwgcHJvcGVydGllcyBpbiBub2Rlc1Byb3Blcmllcy5pdGVtcygpOgogICAgICAgICAgICBub2RlX3dpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQoKICAgICAgICAgICAgZm9yIHByb3AsIHZhbHVlIGluIHByb3BlcnRpZXMuaXRlbXMoKToKICAgICAgICAgICAgICAgIG1hdGNoIHByb3A6CiAgICAgICAgICAgICAgICAgICAgY2FzZSAibGFiZWwiOgogICAgICAgICAgICAgICAgICAgICAgICAuLi4KICAgICAgICAgICAgICAgICAgICBjYXNlICJpbmxldHMiOgogICAgICAgICAgICAgICAgICAgICAgICBmb3IgaW5sZXQgaW4gdmFsdWU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwaW4gPSBQaW5XaWRnZXQoaW5sZXQsIG5vZGVfd2lkZ2V0LCBzZWxmKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF5b3V0ID0gY2FzdCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBRR3JhcGhpY3NMaW5lYXJMYXlvdXQsIG5vZGVfd2lkZ2V0LmxheW91dCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXlvdXQuYWRkSXRlbShwaW4pCgogICAgICAgICAgICAgICAgICAgIGNhc2UgIm91dGxldHMiOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludChwcm9wLCB2YWx1ZSkKCiAgICBkZWYgaGFuZGxlRWRnZXNBZGRlZChzZWxmLCBlZGdlczogTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGVdXSk6CiAgICAgICAgZm9yIHUsIHYgaW4gZWRnZXM6CiAgICAgICAgICAgIHNvdXJjZV9ub2RlID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW3VdCiAgICAgICAgICAgIHRhcmdldF9ub2RlID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW3ZdCgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9kZWxlZ2F0ZS5lZGdlRmFjdG9yeSgKICAgICAgICAgICAgICAgIHNlbGYsIHNlbGYuX2dyYXBobW9kZWwsIHNvdXJjZV9ub2RlLCB0YXJnZXRfbm9kZQogICAgICAgICAgICApCgogICAgICAgICAgICBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbKHUsIHYpXSA9IHdpZGdldAogICAgICAgICAgICBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbd2lkZ2V0XSA9ICh1LCB2KQogICAgICAgICAgICBzZWxmLnNjZW5lKCkuYWRkSXRlbSh3aWRnZXQpCgogICAgZGVmIGhhbmRsZUVkZ2VzUmVtb3ZlZChzZWxmLCBlZGdlczogTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGVdXSk6CiAgICAgICAgZm9yIHUsIHYgaW4gZWRnZXM6CiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFsodSwgdildCiAgICAgICAgICAgIHdpZGdldC5zZXRTb3VyY2UoTm9uZSkKICAgICAgICAgICAgd2lkZ2V0LnNldFRhcmdldChOb25lKQogICAgICAgICAgICBzZWxmLnNjZW5lKCkucmVtb3ZlSXRlbSh3aWRnZXQpCiAgICAgICAgICAgIGRlbCBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbKHUsIHYpXQogICAgICAgICAgICBkZWwgc2VsZi5fd2lkZ2V0X3RvX2l0ZW1fbWFwW3dpZGdldF0KCiAgICBkZWYgaGFuZGxlRWRnZXNQcm9wZXJ0aWVzQ2hhbmdlZChzZWxmLCBlZGdlc1Byb3BlcnRpZXMpOgogICAgICAgIGZvciBlZGdlLCBwcm9wZXJ0aWVzIGluIGVkZ2VzUHJvcGVydGllcy5pdGVtcygpOgogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9hbXBbZWRnZV0KICAgICAgICAgICAgIyBzZWxmLmRlbGVnYXRlKCkuc2V0RWRnZVdpZGdldFByb3BzKHNlbGYsIGVkZ2UsIHdpZGdldCwgKipwcm9wZXJ0aWVzKQoKICAgIGRlZiBpbml0aWF0ZUNvbm5lY3Rpb24oc2VsZiwgc291cmNlOiBRR3JhcGhpY3NJdGVtKToKICAgICAgICBwcmludCgiaW5pdGlhdGVDb25uZWN0aW9uIikKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbAoKICAgIGNsYXNzIEV4YW1wbGVHcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgICAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAgICAgaWYgbm90IHNlbGYuX2dyYXBobW9kZWw6CiAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgaXRlbUF0TW91c2UgPSBzZWxmLml0ZW1BdChldmVudC5wb3NpdGlvbigpLnRvUG9pbnQoKSkKICAgICAgICAgICAgaWYgaXRlbUF0TW91c2U6CiAgICAgICAgICAgICAgICByZXR1cm4gc3VwZXIoKS5tb3VzZURvdWJsZUNsaWNrRXZlbnQoZXZlbnQpCgogICAgICAgICAgICBjbGlja3BvcyA9IHNlbGYubWFwVG9TY2VuZShldmVudC5wb3NpdGlvbigpLnRvUG9pbnQoKSkKCiAgICAgICAgICAgICMgbiA9IG1ha2VfdW5pcXVlX2lkKGxlbmd0aD0xMikKICAgICAgICAgICAgbiA9IG1ha2VfdW5pcXVlX25hbWUoIk5PREUiLCBbbiBmb3IgbiBpbiBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzKCldKQogICAgICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmFkZE5vZGUoCiAgICAgICAgICAgICAgICBuLCBsYWJlbD0ibmV3IG5vZGUiLCBpbmxldHM9WyJpbiJdLCBvdXRsZXRzPVsib3V0Il0KICAgICAgICAgICAgKQogICAgICAgICAgICB3aWRnZXQgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KICAgICAgICAgICAgd2lkZ2V0LnNldFBvcyhjbGlja3BvcykKCiAgICAgICAgZGVmIGNyZWF0ZVN0YW5kYXJkQ29udGV4dE1lbnUoc2VsZiwgc2NlbmVQb3M6IFFQb2ludEYgfCBOb25lID0gTm9uZSk6CiAgICAgICAgICAgICIiIlRoaXMgZnVuY3Rpb24gY3JlYXRlcyB0aGUgc3RhbmRhcmQgY29udGV4dCBtZW51IHdoaWNoIGlzIHNob3duIHdoZW4KICAgICAgICAgICAgdGhlIHVzZXIgY2xpY2tzIG9uIHRoZSB0ZXh0IGVkaXQgd2l0aCB0aGUgcmlnaHQgbW91c2UgYnV0dG9uLiBJdCBpcwogICAgICAgICAgICBjYWxsZWQgZnJvbSB0aGUgZGVmYXVsdCBjb250ZXh0TWVudUV2ZW50KCkgaGFuZGxlciBhbmQgaXQgdGFrZXMgdGhlCiAgICAgICAgICAgIHBvc2l0aW9uIGluIGRvY3VtZW50IGNvb3JkaW5hdGVzIHdoZXJlIHRoZSBtb3VzZSBjbGljayB3YXMuIFRoaXMgY2FuCiAgICAgICAgICAgIGVuYWJsZSBhY3Rpb25zIHRoYXQgYXJlIHNlbnNpdGl2ZSB0byB0aGUgcG9zaXRpb24gd2hlcmUgdGhlIHVzZXIKICAgICAgICAgICAgY2xpY2tlZC4gVGhlIHBvcHVwIG1lbnUncyBvd25lcnNoaXAgaXMgdHJhbnNmZXJyZWQgdG8gdGhlIGNhbGxlci4iIiIKCiAgICAgICAgICAgIGRlZiBjcmVhdGVfbm9kZShzY2VuZVBvczogUVBvaW50RiB8IE5vbmUpOgogICAgICAgICAgICAgICAgaWYgbm90IHNlbGYuX2dyYXBobW9kZWw6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICBuID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICAiTk9ERSIsIFtuIGZvciBuIGluIHNlbGYuX2dyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkTm9kZSgKICAgICAgICAgICAgICAgICAgICBuLCBsYWJlbD0ibmV3IG5vZGUiLCBpbmxldHM9WyJpbiJdLCBvdXRsZXRzPVsib3V0Il0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQogICAgICAgICAgICAgICAgd2lkZ2V0LnNldFBvcyhzY2VuZVBvcyBvciBRUG9pbnRGKDAsIDApKQoKICAgICAgICAgICAgZGVmIGNvbm5lY3Rfc2VsZWN0ZWRfbm9kZXMoKToKICAgICAgICAgICAgICAgIGlmIG5vdCBzZWxmLl9ncmFwaG1vZGVsOgogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgc2VsZWN0aW9uID0gW2l0ZW0gZm9yIGl0ZW0gaW4gc2VsZi5zY2VuZSgpLnNlbGVjdGVkSXRlbXMoKV0KICAgICAgICAgICAgICAgIGlmIGxlbihzZWxlY3Rpb24pIDwgMjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4KCiAgICAgICAgICAgICAgICBmb3IgaXRlbSBpbiBzZWxlY3Rpb25bMTpdOgogICAgICAgICAgICAgICAgICAgIHUgPSBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbc2VsZWN0aW9uWzBdXQogICAgICAgICAgICAgICAgICAgIHYgPSBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbaXRlbV0KICAgICAgICAgICAgICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmFkZEVkZ2UodSwgdikKCiAgICAgICAgICAgIG1lbnUgPSBRTWVudShzZWxmKQoKICAgICAgICAgICAgZGVmIG51ZGdlX3NlbGVjdGVkX25vZGVzKCk6CiAgICAgICAgICAgICAgICBmb3IgaXRlbSwgd2lkZ2V0IGluIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcC5pdGVtcygpOgogICAgICAgICAgICAgICAgICAgIHdpZGdldC5tb3ZlQnkoMTAsIDEwKQoKICAgICAgICAgICAgbnVkZ2VfYWN0aW9uID0gUUFjdGlvbihzZWxmKQogICAgICAgICAgICBudWRnZV9hY3Rpb24uc2V0VGV4dCgibnVkZ2Ugbm9kZXMiKQogICAgICAgICAgICBudWRnZV9hY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhOiBudWRnZV9zZWxlY3RlZF9ub2RlcygpKQogICAgICAgICAgICBtZW51LmFkZEFjdGlvbihudWRnZV9hY3Rpb24pCgogICAgICAgICAgICBjcmVhdGVfYWN0aW9uID0gUUFjdGlvbihzZWxmKQogICAgICAgICAgICBjcmVhdGVfYWN0aW9uLnNldFRleHQoImNyZWF0ZSBub2RlIikKICAgICAgICAgICAgY3JlYXRlX2FjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGE6IGNyZWF0ZV9ub2RlKHNjZW5lUG9zKSkKICAgICAgICAgICAgbWVudS5hZGRBY3Rpb24oY3JlYXRlX2FjdGlvbikKCiAgICAgICAgICAgIGNvbm5lY3RfYWN0aW9uID0gUUFjdGlvbihzZWxmKQogICAgICAgICAgICBjb25uZWN0X2FjdGlvbi5zZXRUZXh0KCJjb25uZWN0IikKICAgICAgICAgICAgY29ubmVjdF9hY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhOiBjb25uZWN0X3NlbGVjdGVkX25vZGVzKCkpCiAgICAgICAgICAgIG1lbnUuYWRkQWN0aW9uKGNvbm5lY3RfYWN0aW9uKQogICAgICAgICAgICByZXR1cm4gbWVudQoKICAgICAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQogICAgICAgICAgICBtZW51ID0gc2VsZi5jcmVhdGVTdGFuZGFyZENvbnRleHRNZW51KHNjZW5lcG9zKQoKICAgICAgICAgICAgbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICB2aWV3ID0gRXhhbXBsZUdyYXBoVmlldygpCiAgICBtb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgdmlldy5zZXRNb2RlbChtb2RlbCkKICAgIHZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AQAAAAAAAAABAAAAEQQAAAAAAAARBAAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"cut",
					null,
					"AQAAAIoMAAAAAAAAigwAAAAAAADZAAAAICAgICAgICBwYWRkaW5nID0gNAogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQ",
					"AQAAAAAAAAABAAAAYw0AAAAAAACKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					861,
					1,
					"paste",
					null,
					"AgAAAHAHAAAAAAAASQgAAAAAAAAAAAAASQgAAAAAAABJCAAAAAAAAG8AAAAgICAgICAgIHJldHVybiBzZWxmLl92aWV3Ll9kZWxlZ2F0ZS5ub2RlU2l6ZUhpbnQoCiAgICAgICAgICAgIG9wdGlvbiwgc2VsZi5fdmlldy5fZ3JhcGhtb2RlbCwgc2VsZi5fbgogICAgICAgICk",
					"AQAAAAAAAAABAAAA3wcAAAAAAABwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"cut",
					null,
					"AQAAAGQHAAAAAAAAZAcAAAAAAAALAAAAc2VsZi5mb250KCk",
					"AQAAAAAAAAABAAAAbwcAAAAAAABkBwAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"paste",
					null,
					"AgAAAJMHAAAAAAAAngcAAAAAAAAAAAAAngcAAAAAAACeBwAAAAAAAAsAAABvcHRpb24uZm9udA",
					"AQAAAAAAAAABAAAAngcAAAAAAACTBwAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					2,
					"left_delete",
					null,
					"AgAAACIHAAAAAAAAIgcAAAAAAABCAAAAICAgICAgICBvcHRpb24gPSBRU3R5bGVPcHRpb25HcmFwaGljc0l0ZW0oKQogICAgICAgIG9wdGlvbi5mb250ID0gIQcAAAAAAAAhBwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAZAcAAAAAAAAiBwAAAAAAAAAAAAAAAPC/"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "self._n"
					},
					"BwAAAIoHAAAAAAAAiwcAAAAAAAAAAAAAiwcAAAAAAACMBwAAAAAAAAAAAACMBwAAAAAAAI0HAAAAAAAAAAAAAI0HAAAAAAAAjgcAAAAAAAAAAAAAjgcAAAAAAACPBwAAAAAAAAAAAACPBwAAAAAAAJAHAAAAAAAAAAAAAJAHAAAAAAAAkQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAigcAAAAAAACKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					877,
					1,
					"right_delete",
					null,
					"AQAAAJEHAAAAAAAAkQcAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAkQcAAAAAAACRBwAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACEHAAAAAAAAIgcAAAAAAAAAAAAAIgcAAAAAAAAmBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQcAAAAAAAAhBwAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"cut",
					null,
					"AQAAAEANAAAAAAAAQA0AAAAAAADvAAAAICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259Iik",
					"AQAAAAAAAAABAAAALw4AAAAAAABADQAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					3,
					"left_delete",
					null,
					"BAAAALMMAAAAAAAAswwAAAAAAADXAAAAICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoiBwAAAAAAACIHAAAAAAAABAAAACAgICCuDAAAAAAAAK4MAAAAAAAAAQAAAAqtDAAAAAAAAK0MAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAig0AAAAAAACzDAAAAAAAAAAAAAAAAPC/"
				],
				[
					895,
					1,
					"left_delete",
					null,
					"AQAAADsMAAAAAAAAOwwAAAAAAABzAAAAICAgIGRlZiBub2RlU2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKCg",
					"AQAAAAAAAAABAAAArgwAAAAAAAA7DAAAAAAAAAAAAAAAAPC/"
				],
				[
					900,
					1,
					"paste",
					null,
					"AgAAAGkIAAAAAAAAWAkAAAAAAAAAAAAAWAkAAAAAAABYCQAAAAAAAG4AAAAgICAgICAgIHNlbGYuX3ZpZXcuX2RlbGVnYXRlLnBhaW50Tm9kZSgKICAgICAgICAgICAgcGFpbnRlciwgb3B0aW9uLCBzZWxmLl92aWV3Ll9ncmFwaG1vZGVsLCBzZWxmLl9uCiAgICAgICAgKQ",
					"AQAAAAAAAAABAAAA1wgAAAAAAABpCAAAAAAAAAAAAAAAAPC/"
				],
				[
					904,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAxggAAAAAAADGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": "self._"
					},
					"BgAAAFMJAAAAAAAAVAkAAAAAAAAAAAAAVAkAAAAAAABVCQAAAAAAAAAAAABVCQAAAAAAAFYJAAAAAAAAAAAAAFYJAAAAAAAAVwkAAAAAAAAAAAAAVwkAAAAAAABYCQAAAAAAAAAAAABYCQAAAAAAAFkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwkAAAAAAABTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAzSkAAAAAAADNKQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKIyBmcm9tIHN0YW5kYXJkX2dyYXBoX2RlbGVnYXRlIGltcG9ydCBTdGFuZGFyZEdyYXBoRGVsZWdhdGUKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9pZCwgbWFrZV91bmlxdWVfbmFtZQoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbAoKZnJvbSBweWxpdmUuUXRHcmFwaEVkaXRvci5OZXRyb3drWEdyYXBoRWRpdG9yLmxpbmtfZ3JhcGhpY3NfaXRlbXMgaW1wb3J0ICgKICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcywKKQpmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IucWdyYXBoaWNzX2Fycm93X2l0ZW0gaW1wb3J0ICgKICAgIFFHcmFwaGljc0Fycm93SXRlbSwKKQoKCmNsYXNzIFBpbldpZGdldChRR3JhcGhpY3NXaWRnZXQpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsCiAgICAgICAgaTogSGFzaGFibGUsCiAgICAgICAgbm9kZTogT3B0aW9uYWxbIk5vZGVXaWRnZXQiXSwKICAgICAgICB2aWV3OiAiR3JhcGhWaWV3IiwKICAgICkgLT4gTm9uZToKICAgICAgICBRR3JhcGhpY3NXaWRnZXQuX19pbml0X18oc2VsZiwgcGFyZW50PW5vZGUpCgogICAgICAgIHNlbGYuX25vZGUgPSBub2RlCiAgICAgICAgc2VsZi5fdmlldyA9IHZpZXcKICAgICAgICBzZWxmLl9pID0gaQoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIHdoaWNoOiBRdC5TaXplSGludCwgY29uc3RyYWludDogUVNpemVGIHwgUVNpemUgPSBRU2l6ZUYoKQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcmV0dXJuIFFTaXplRigyMCwgMjApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsIHBhaW50ZXI6IFFQYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUKICAgICk6CiAgICAgICAgciA9IDEwCiAgICAgICAgcGFpbnRlci5kcmF3RWxsaXBzZSgwLCAwLCByLCByKQoKICAgIGRlZiBtb3VzZVByZXNzRXZlbnQoc2VsZiwgZXZlbnQ6IFFHcmFwaGljc1NjZW5lTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICBzZWxmLl92aWV3LmluaXRpYXRlQ29ubmVjdGlvbihzZWxmKQoKCmNsYXNzIE5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgICAgIHZpZXc6ICJHcmFwaFZpZXciLAogICAgICAgIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lLAogICAgKSAtPiBOb25lOgogICAgICAgIFFHcmFwaGljc1dpZGdldC5fX2luaXRfXyhzZWxmLCBwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkdyYXBoaWNzSXRlbUZsYWcuSXRlbUlzTW92YWJsZSwgVHJ1ZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNGb2N1c2FibGUsIFRydWUpCgogICAgICAgIHNlbGYuX3ZpZXcgPSB2aWV3CiAgICAgICAgc2VsZi5fbiA9IG4KCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCB3aGljaDogUXQuU2l6ZUhpbnQsIGNvbnN0cmFpbnQ6IFFTaXplRiB8IFFTaXplID0gUVNpemVGKCkKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSA0CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Moc2VsZi5mb250KCkpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie3NlbGYuX259IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsIHBhaW50ZXI6IFFQYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICAjIGRyYXcgb3V0bGluZQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KG9wdGlvbi5yZWN0LCA0LCA0KQoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntzZWxmLl9ufSIpCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUUdyYXBoaWNzU2NlbmVNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIHByaW50KCJwcmVzcyIpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkubW91c2VQcmVzc0V2ZW50KGV2ZW50KQoKCmNsYXNzIEdyYXBoRGVsZWdhdGUoUU9iamVjdCk6CiAgICBkZWYgbm9kZUZhY3Rvcnkoc2VsZiwgdmlldywgZ3JhcGgsIG4pIC0+IFFHcmFwaGljc0l0ZW06CiAgICAgICAgcmV0dXJuIE5vZGVXaWRnZXQodmlldz12aWV3LCBuPW4pCgogICAgZGVmIGVkZ2VGYWN0b3J5KAogICAgICAgIHNlbGYsIHZpZXcsIGdyYXBoLCBzb3VyY2Vfbm9kZSwgdGFyZ2V0X25vZGUKICAgICkgLT4gUUdyYXBoaWNzSXRlbToKICAgICAgICBhcnJvdyA9IFFHcmFwaGljc0Fycm93SXRlbSgpCiAgICAgICAgcGVuID0gUVBlbih2aWV3LnBhbGV0dGUoKS5jb2xvcihRUGFsZXR0ZS5Db2xvclJvbGUuVGV4dCksIDEuNSkKICAgICAgICBhcnJvdy5zZXRQZW4ocGVuKQoKICAgICAgICBkZWYgdXBkYXRlX2xpbmsoKToKICAgICAgICAgICAgYXJyb3cuc2V0TGluZSgKICAgICAgICAgICAgICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcygKICAgICAgICAgICAgICAgICAgICBzb3VyY2Vfbm9kZS5nZW9tZXRyeSgpLCB0YXJnZXRfbm9kZS5nZW9tZXRyeSgpCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICkKCiAgICAgICAgdXBkYXRlX2xpbmsoKQoKICAgICAgICBzb3VyY2Vfbm9kZS5nZW9tZXRyeUNoYW5nZWQuY29ubmVjdCh1cGRhdGVfbGluaykKICAgICAgICB0YXJnZXRfbm9kZS5nZW9tZXRyeUNoYW5nZWQuY29ubmVjdCh1cGRhdGVfbGluaykKICAgICAgICByZXR1cm4gYXJyb3cKCgpjbGFzcyBHcmFwaFZpZXcoUUdyYXBoaWNzVmlldyk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLnNldFJlbmRlckhpbnRzKFFQYWludGVyLkFudGlhbGlhc2luZykKICAgICAgICBzZWxmLnNldERyYWdNb2RlKFFHcmFwaGljc1ZpZXcuRHJhZ01vZGUuUnViYmVyQmFuZERyYWcpCiAgICAgICAgc2NlbmUgPSBRR3JhcGhpY3NTY2VuZSgpCiAgICAgICAgc2NlbmUuc2V0U2NlbmVSZWN0KFFSZWN0KC05OTk5IC8vIDIsIC05OTk5IC8vIDIsIDk5OTksIDk5OTkpKQogICAgICAgIHNlbGYuc2V0U2NlbmUoc2NlbmUpCiAgICAgICAgIyBzY2VuZS5pbnN0YWxsRXZlbnRGaWx0ZXIoc2VsZikKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcCA9IGRpY3QoKQogICAgICAgIHNlbGYuX3dpZGdldF90b19pdGVtX21hcCA9IGRpY3QoKQogICAgICAgIHNlbGYuX2dyYXBobW9kZWw6IEdyYXBoTW9kZWwgfCBOb25lID0gTm9uZQoKICAgIGRlZiBub2RlV2lkZ2V0KHNlbGYsIG46IEhhc2hhYmxlKToKICAgICAgICByZXR1cm4gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCgogICAgZGVmIG1vZGVsKHNlbGYpIC0+IEdyYXBoTW9kZWwgfCBOb25lOgogICAgICAgIHJldHVybiBzZWxmLl9ncmFwaG1vZGVsCgogICAgZGVmIHNldE1vZGVsKHNlbGYsIGdyYXBobW9kZWw6IEdyYXBoTW9kZWwpOgogICAgICAgIHNlbGYuX2dyYXBobW9kZWwgPSBncmFwaG1vZGVsCgogICAgICAgIHNlbGYuX2dyYXBobW9kZWwubm9kZXNBZGRlZC5jb25uZWN0KHNlbGYuaGFuZGxlTm9kZXNBZGRlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLm5vZGVzQWJvdXRUb0JlUmVtb3ZlZC5jb25uZWN0KHNlbGYuaGFuZGxlTm9kZXNSZW1vdmVkKQogICAgICAgIHNlbGYuX2dyYXBobW9kZWwubm9kZXNQcm9wZXJ0aWVzQ2hhbmdlZC5jb25uZWN0KAogICAgICAgICAgICBzZWxmLmhhbmRsZU5vZGVzUHJvcGVydGllc0NoYW5nZWQKICAgICAgICApCgogICAgICAgIHNlbGYuX2dyYXBobW9kZWwuZWRnZXNBZGRlZC5jb25uZWN0KHNlbGYuaGFuZGxlRWRnZXNBZGRlZCkKICAgICAgICBzZWxmLl9ncmFwaG1vZGVsLmVkZ2VzQWJvdXRUb0JlUmVtb3ZlZC5jb25uZWN0KHNlbGYuaGFuZGxlRWRnZXNSZW1vdmVkKQogICAgICAgIHNlbGYuX2dyYXBobW9kZWwuZWRnZXNQcm9wZXJ0aWVzQ2hhbmdlZC5jb25uZWN0KAogICAgICAgICAgICBzZWxmLmhhbmRsZUVkZ2VzUHJvcGVydGllc0NoYW5nZWQKICAgICAgICApCgogICAgZGVmIGhhbmRsZU5vZGVzQWRkZWQoc2VsZiwgbm9kZXM6IExpc3RbSGFzaGFibGVdKToKICAgICAgICBmb3IgbiBpbiBub2RlczoKICAgICAgICAgICAgd2lkZ2V0ID0gc2VsZi5fZGVsZWdhdGUubm9kZUZhY3RvcnkoCiAgICAgICAgICAgICAgICB2aWV3PXNlbGYsIGdyYXBoPXNlbGYuX2dyYXBobW9kZWwsIG49bgogICAgICAgICAgICApCgogICAgICAgICAgICBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0gPSB3aWRnZXQKICAgICAgICAgICAgc2VsZi5fd2lkZ2V0X3RvX2l0ZW1fbWFwW3dpZGdldF0gPSBuCiAgICAgICAgICAgIHNlbGYuc2NlbmUoKS5hZGRJdGVtKHdpZGdldCkKCiAgICBkZWYgaGFuZGxlTm9kZXNSZW1vdmVkKHNlbGYsIG5vZGVzOiBMaXN0W0hhc2hhYmxlXSk6CiAgICAgICAgZm9yIG4gaW4gbm9kZXM6CiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQogICAgICAgICAgICBzZWxmLnNjZW5lKCkucmVtb3ZlSXRlbSh3aWRnZXQpCiAgICAgICAgICAgIGRlbCBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbbl0KICAgICAgICAgICAgZGVsIHNlbGYuX3dpZGdldF90b19pdGVtX21hcFt3aWRnZXRdCgogICAgZGVmIGhhbmRsZU5vZGVzUHJvcGVydGllc0NoYW5nZWQoc2VsZiwgbm9kZXNQcm9wZXJpZXMpOgogICAgICAgIGZvciBuLCBwcm9wZXJ0aWVzIGluIG5vZGVzUHJvcGVyaWVzLml0ZW1zKCk6CiAgICAgICAgICAgIG5vZGVfd2lkZ2V0ID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCgogICAgICAgICAgICBmb3IgcHJvcCwgdmFsdWUgaW4gcHJvcGVydGllcy5pdGVtcygpOgogICAgICAgICAgICAgICAgbWF0Y2ggcHJvcDoKICAgICAgICAgICAgICAgICAgICBjYXNlICJsYWJlbCI6CiAgICAgICAgICAgICAgICAgICAgICAgIC4uLgogICAgICAgICAgICAgICAgICAgIGNhc2UgImlubGV0cyI6CiAgICAgICAgICAgICAgICAgICAgICAgIGZvciBpbmxldCBpbiB2YWx1ZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBpbiA9IFBpbldpZGdldChpbmxldCwgbm9kZV93aWRnZXQsIHNlbGYpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXlvdXQgPSBjYXN0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFFHcmFwaGljc0xpbmVhckxheW91dCwgbm9kZV93aWRnZXQubGF5b3V0KCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxheW91dC5hZGRJdGVtKHBpbikKCiAgICAgICAgICAgICAgICAgICAgY2FzZSAib3V0bGV0cyI6CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KHByb3AsIHZhbHVlKQoKICAgIGRlZiBoYW5kbGVFZGdlc0FkZGVkKHNlbGYsIGVkZ2VzOiBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV1dKToKICAgICAgICBmb3IgdSwgdiBpbiBlZGdlczoKICAgICAgICAgICAgc291cmNlX25vZGUgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbdV0KICAgICAgICAgICAgdGFyZ2V0X25vZGUgPSBzZWxmLl9pdGVtX3RvX3dpZGdldF9tYXBbdl0KCiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2RlbGVnYXRlLmVkZ2VGYWN0b3J5KAogICAgICAgICAgICAgICAgc2VsZiwgc2VsZi5fZ3JhcGhtb2RlbCwgc291cmNlX25vZGUsIHRhcmdldF9ub2RlCiAgICAgICAgICAgICkKCiAgICAgICAgICAgIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFsodSwgdildID0gd2lkZ2V0CiAgICAgICAgICAgIHNlbGYuX3dpZGdldF90b19pdGVtX21hcFt3aWRnZXRdID0gKHUsIHYpCiAgICAgICAgICAgIHNlbGYuc2NlbmUoKS5hZGRJdGVtKHdpZGdldCkKCiAgICBkZWYgaGFuZGxlRWRnZXNSZW1vdmVkKHNlbGYsIGVkZ2VzOiBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV1dKToKICAgICAgICBmb3IgdSwgdiBpbiBlZGdlczoKICAgICAgICAgICAgd2lkZ2V0ID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwWyh1LCB2KV0KICAgICAgICAgICAgd2lkZ2V0LnNldFNvdXJjZShOb25lKQogICAgICAgICAgICB3aWRnZXQuc2V0VGFyZ2V0KE5vbmUpCiAgICAgICAgICAgIHNlbGYuc2NlbmUoKS5yZW1vdmVJdGVtKHdpZGdldCkKICAgICAgICAgICAgZGVsIHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFsodSwgdildCiAgICAgICAgICAgIGRlbCBzZWxmLl93aWRnZXRfdG9faXRlbV9tYXBbd2lkZ2V0XQoKICAgIGRlZiBoYW5kbGVFZGdlc1Byb3BlcnRpZXNDaGFuZ2VkKHNlbGYsIGVkZ2VzUHJvcGVydGllcyk6CiAgICAgICAgZm9yIGVkZ2UsIHByb3BlcnRpZXMgaW4gZWRnZXNQcm9wZXJ0aWVzLml0ZW1zKCk6CiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X2FtcFtlZGdlXQogICAgICAgICAgICAjIHNlbGYuZGVsZWdhdGUoKS5zZXRFZGdlV2lkZ2V0UHJvcHMoc2VsZiwgZWRnZSwgd2lkZ2V0LCAqKnByb3BlcnRpZXMpCgogICAgZGVmIGluaXRpYXRlQ29ubmVjdGlvbihzZWxmLCBzb3VyY2U6IFFHcmFwaGljc0l0ZW0pOgogICAgICAgIHByaW50KCJpbml0aWF0ZUNvbm5lY3Rpb24iKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBmcm9tIGdyYXBoX21vZGVsIGltcG9ydCBHcmFwaE1vZGVsCgogICAgY2xhc3MgRXhhbXBsZUdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgICAgICBpZiBub3Qgc2VsZi5fZ3JhcGhtb2RlbDoKICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICBpdGVtQXRNb3VzZSA9IHNlbGYuaXRlbUF0KGV2ZW50LnBvc2l0aW9uKCkudG9Qb2ludCgpKQogICAgICAgICAgICBpZiBpdGVtQXRNb3VzZToKICAgICAgICAgICAgICAgIHJldHVybiBzdXBlcigpLm1vdXNlRG91YmxlQ2xpY2tFdmVudChldmVudCkKCiAgICAgICAgICAgIGNsaWNrcG9zID0gc2VsZi5tYXBUb1NjZW5lKGV2ZW50LnBvc2l0aW9uKCkudG9Qb2ludCgpKQoKICAgICAgICAgICAgIyBuID0gbWFrZV91bmlxdWVfaWQobGVuZ3RoPTEyKQogICAgICAgICAgICBuID0gbWFrZV91bmlxdWVfbmFtZSgiTk9ERSIsIFtuIGZvciBuIGluIHNlbGYuX2dyYXBobW9kZWwubm9kZXMoKV0pCiAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkTm9kZSgKICAgICAgICAgICAgICAgIG4sIGxhYmVsPSJuZXcgbm9kZSIsIGlubGV0cz1bImluIl0sIG91dGxldHM9WyJvdXQiXQogICAgICAgICAgICApCiAgICAgICAgICAgIHdpZGdldCA9IHNlbGYuX2l0ZW1fdG9fd2lkZ2V0X21hcFtuXQogICAgICAgICAgICB3aWRnZXQuc2V0UG9zKGNsaWNrcG9zKQoKICAgICAgICBkZWYgY3JlYXRlU3RhbmRhcmRDb250ZXh0TWVudShzZWxmLCBzY2VuZVBvczogUVBvaW50RiB8IE5vbmUgPSBOb25lKToKICAgICAgICAgICAgIiIiVGhpcyBmdW5jdGlvbiBjcmVhdGVzIHRoZSBzdGFuZGFyZCBjb250ZXh0IG1lbnUgd2hpY2ggaXMgc2hvd24gd2hlbgogICAgICAgICAgICB0aGUgdXNlciBjbGlja3Mgb24gdGhlIHRleHQgZWRpdCB3aXRoIHRoZSByaWdodCBtb3VzZSBidXR0b24uIEl0IGlzCiAgICAgICAgICAgIGNhbGxlZCBmcm9tIHRoZSBkZWZhdWx0IGNvbnRleHRNZW51RXZlbnQoKSBoYW5kbGVyIGFuZCBpdCB0YWtlcyB0aGUKICAgICAgICAgICAgcG9zaXRpb24gaW4gZG9jdW1lbnQgY29vcmRpbmF0ZXMgd2hlcmUgdGhlIG1vdXNlIGNsaWNrIHdhcy4gVGhpcyBjYW4KICAgICAgICAgICAgZW5hYmxlIGFjdGlvbnMgdGhhdCBhcmUgc2Vuc2l0aXZlIHRvIHRoZSBwb3NpdGlvbiB3aGVyZSB0aGUgdXNlcgogICAgICAgICAgICBjbGlja2VkLiBUaGUgcG9wdXAgbWVudSdzIG93bmVyc2hpcCBpcyB0cmFuc2ZlcnJlZCB0byB0aGUgY2FsbGVyLiIiIgoKICAgICAgICAgICAgZGVmIGNyZWF0ZV9ub2RlKHNjZW5lUG9zOiBRUG9pbnRGIHwgTm9uZSk6CiAgICAgICAgICAgICAgICBpZiBub3Qgc2VsZi5fZ3JhcGhtb2RlbDoKICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIG4gPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgICJOT0RFIiwgW24gZm9yIG4gaW4gc2VsZi5fZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgc2VsZi5fZ3JhcGhtb2RlbC5hZGROb2RlKAogICAgICAgICAgICAgICAgICAgIG4sIGxhYmVsPSJuZXcgbm9kZSIsIGlubGV0cz1bImluIl0sIG91dGxldHM9WyJvdXQiXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgd2lkZ2V0ID0gc2VsZi5faXRlbV90b193aWRnZXRfbWFwW25dCiAgICAgICAgICAgICAgICB3aWRnZXQuc2V0UG9zKHNjZW5lUG9zIG9yIFFQb2ludEYoMCwgMCkpCgogICAgICAgICAgICBkZWYgY29ubmVjdF9zZWxlY3RlZF9ub2RlcygpOgogICAgICAgICAgICAgICAgaWYgbm90IHNlbGYuX2dyYXBobW9kZWw6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICBzZWxlY3Rpb24gPSBbaXRlbSBmb3IgaXRlbSBpbiBzZWxmLnNjZW5lKCkuc2VsZWN0ZWRJdGVtcygpXQogICAgICAgICAgICAgICAgaWYgbGVuKHNlbGVjdGlvbikgPCAyOgogICAgICAgICAgICAgICAgICAgIHJldHVybgoKICAgICAgICAgICAgICAgIGZvciBpdGVtIGluIHNlbGVjdGlvblsxOl06CiAgICAgICAgICAgICAgICAgICAgdSA9IHNlbGYuX3dpZGdldF90b19pdGVtX21hcFtzZWxlY3Rpb25bMF1dCiAgICAgICAgICAgICAgICAgICAgdiA9IHNlbGYuX3dpZGdldF90b19pdGVtX21hcFtpdGVtXQogICAgICAgICAgICAgICAgICAgIHNlbGYuX2dyYXBobW9kZWwuYWRkRWRnZSh1LCB2KQoKICAgICAgICAgICAgbWVudSA9IFFNZW51KHNlbGYpCgogICAgICAgICAgICBkZWYgbnVkZ2Vfc2VsZWN0ZWRfbm9kZXMoKToKICAgICAgICAgICAgICAgIGZvciBpdGVtLCB3aWRnZXQgaW4gc2VsZi5faXRlbV90b193aWRnZXRfbWFwLml0ZW1zKCk6CiAgICAgICAgICAgICAgICAgICAgd2lkZ2V0Lm1vdmVCeSgxMCwgMTApCgogICAgICAgICAgICBudWRnZV9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIG51ZGdlX2FjdGlvbi5zZXRUZXh0KCJudWRnZSBub2RlcyIpCiAgICAgICAgICAgIG51ZGdlX2FjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGE6IG51ZGdlX3NlbGVjdGVkX25vZGVzKCkpCiAgICAgICAgICAgIG1lbnUuYWRkQWN0aW9uKG51ZGdlX2FjdGlvbikKCiAgICAgICAgICAgIGNyZWF0ZV9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIGNyZWF0ZV9hY3Rpb24uc2V0VGV4dCgiY3JlYXRlIG5vZGUiKQogICAgICAgICAgICBjcmVhdGVfYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYTogY3JlYXRlX25vZGUoc2NlbmVQb3MpKQogICAgICAgICAgICBtZW51LmFkZEFjdGlvbihjcmVhdGVfYWN0aW9uKQoKICAgICAgICAgICAgY29ubmVjdF9hY3Rpb24gPSBRQWN0aW9uKHNlbGYpCiAgICAgICAgICAgIGNvbm5lY3RfYWN0aW9uLnNldFRleHQoImNvbm5lY3QiKQogICAgICAgICAgICBjb25uZWN0X2FjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGE6IGNvbm5lY3Rfc2VsZWN0ZWRfbm9kZXMoKSkKICAgICAgICAgICAgbWVudS5hZGRBY3Rpb24oY29ubmVjdF9hY3Rpb24pCiAgICAgICAgICAgIHJldHVybiBtZW51CgogICAgICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCiAgICAgICAgICAgIG1lbnUgPSBzZWxmLmNyZWF0ZVN0YW5kYXJkQ29udGV4dE1lbnUoc2NlbmVwb3MpCgogICAgICAgICAgICBtZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIHZpZXcgPSBFeGFtcGxlR3JhcGhWaWV3KCkKICAgIG1vZGVsID0gR3JhcGhNb2RlbCgpCiAgICB2aWV3LnNldE1vZGVsKG1vZGVsKQogICAgdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAAWQkAAAAAAABZCQAAAAAAAAAAAAAAAPC/"
				],
				[
					923,
					1,
					"cut",
					null,
					"AQAAAMcIAAAAAAAAxwgAAAAAAACWAAAAICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntzZWxmLl9ufSIp",
					"AQAAAAAAAAABAAAAXQkAAAAAAADHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					2,
					"left_delete",
					null,
					"AgAAAMYIAAAAAAAAxggAAAAAAAABAAAACsUIAAAAAAAAxQgAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAxwgAAAAAAADHCAAAAAAAAAAAAAAAAPC/"
				],
				[
					926,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAxQgAAAAAAADFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					930,
					1,
					"insert",
					{
						"characters": "\n\n#"
					},
					"BgAAAKcGAAAAAAAAqAYAAAAAAAAAAAAAqAYAAAAAAACwBgAAAAAAAAAAAACwBgAAAAAAALEGAAAAAAAAAAAAALEGAAAAAAAAuQYAAAAAAAAAAAAAqAYAAAAAAACoBgAAAAAAAAgAAAAgICAgICAgILEGAAAAAAAAsgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApwYAAAAAAACnBgAAAAAAAAAAAAAAAPC/"
				],
				[
					931,
					1,
					"insert",
					{
						"characters": " add"
					},
					"BAAAALIGAAAAAAAAswYAAAAAAAAAAAAAswYAAAAAAAC0BgAAAAAAAAAAAAC0BgAAAAAAALUGAAAAAAAAAAAAALUGAAAAAAAAtgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgYAAAAAAACyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					932,
					1,
					"insert",
					{
						"characters": " name"
					},
					"BQAAALYGAAAAAAAAtwYAAAAAAAAAAAAAtwYAAAAAAAC4BgAAAAAAAAAAAAC4BgAAAAAAALkGAAAAAAAAAAAAALkGAAAAAAAAugYAAAAAAAAAAAAAugYAAAAAAAC7BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": " label"
					},
					"BgAAALsGAAAAAAAAvAYAAAAAAAAAAAAAvAYAAAAAAAC9BgAAAAAAAAAAAAC9BgAAAAAAAL4GAAAAAAAAAAAAAL4GAAAAAAAAvwYAAAAAAAAAAAAAvwYAAAAAAADABgAAAAAAAAAAAADABgAAAAAAAMEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwYAAAAAAAC7BgAAAAAAAAAAAAAAAPC/"
				],
				[
					934,
					1,
					"insert",
					{
						"characters": "\nQ"
					},
					"AwAAAMEGAAAAAAAAwgYAAAAAAAAAAAAAwgYAAAAAAADKBgAAAAAAAAAAAADKBgAAAAAAAMsGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQYAAAAAAADBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"insert",
					{
						"characters": "Gra"
					},
					"AwAAAMsGAAAAAAAAzAYAAAAAAAAAAAAAzAYAAAAAAADNBgAAAAAAAAAAAADNBgAAAAAAAM4GAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywYAAAAAAADLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					936,
					4,
					"left_delete",
					null,
					"BAAAAM0GAAAAAAAAzQYAAAAAAAABAAAAYcwGAAAAAAAAzAYAAAAAAAABAAAAcssGAAAAAAAAywYAAAAAAAABAAAAR8oGAAAAAAAAygYAAAAAAAABAAAAUQ",
					"AQAAAAAAAAABAAAAzgYAAAAAAADOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					939,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AwAAAK8EAAAAAAAAsAQAAAAAAAAAAAAAwwYAAAAAAADDBgAAAAAAAAgAAAAgICAgICAgILAEAAAAAAAAsQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwQAAAAAAACvBAAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"insert",
					{
						"characters": "class"
					},
					"BQAAALAEAAAAAAAAsQQAAAAAAAAAAAAAsQQAAAAAAACyBAAAAAAAAAAAAACyBAAAAAAAALMEAAAAAAAAAAAAALMEAAAAAAAAtAQAAAAAAAAAAAAAtAQAAAAAAAC1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAQAAAAAAACwBAAAAAAAAAAAAAAAAAAA"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": " QGraphicsT"
					},
					"CwAAALUEAAAAAAAAtgQAAAAAAAAAAAAAtgQAAAAAAAC3BAAAAAAAAAAAAAC3BAAAAAAAALgEAAAAAAAAAAAAALgEAAAAAAAAuQQAAAAAAAAAAAAAuQQAAAAAAAC6BAAAAAAAAAAAAAC6BAAAAAAAALsEAAAAAAAAAAAAALsEAAAAAAAAvAQAAAAAAAAAAAAAvAQAAAAAAAC9BAAAAAAAAAAAAAC9BAAAAAAAAL4EAAAAAAAAAAAAAL4EAAAAAAAAvwQAAAAAAAAAAAAAvwQAAAAAAADABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQQAAAAAAAC1BAAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"insert",
					{
						"characters": "extItem"
					},
					"BwAAAMAEAAAAAAAAwQQAAAAAAAAAAAAAwQQAAAAAAADCBAAAAAAAAAAAAADCBAAAAAAAAMMEAAAAAAAAAAAAAMMEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADFBAAAAAAAAAAAAADFBAAAAAAAAMYEAAAAAAAAAAAAAMYEAAAAAAAAxwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAQAAAAAAADABAAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMcEAAAAAAAAyAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwQAAAAAAADHBAAAAAAAAAAAAAAAAPC/"
				],
				[
					946,
					1,
					"reindent",
					null,
					"AQAAAMgEAAAAAAAAzAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAQAAAAAAADIBAAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"left_delete",
					null,
					"AgAAALAEAAAAAAAAsAQAAAAAAAAeAAAAY2xhc3MgUUdyYXBoaWNzVGV4dEl0ZW0KICAgIAoKsAQAAAAAAAC4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					965,
					1,
					"left_delete",
					null,
					"AQAAALAEAAAAAAAAsAQAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAuAQAAAAAAACwBAAAAAAAAAAAAAAAAPC/"
				],
				[
					969,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAA8yIAAAAAAADzIgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 195 files for \"QGraphicsTextItem\"\n\nC:\\dev\\src\\pylive\\pylive\\examples\\visual_coding.py:\n   48  \t\tself.expressioneditor.setTextWidth(self.rect.width()-10)\n   49  \n   50: \t\tself.outputlabel = QGraphicsTextItem(self)\n   51  \t\tself.outputlabel.setPos(0,30)\n   52  \n\nC:\\dev\\src\\pylive\\pylive\\examples\\python_function_graph\\graph_view.py:\n   45          self._view.initiateConnection(self)\n   46  \n   47: class QGraphicsTextItem\n   48      \n   49  \n\nC:\\dev\\src\\pylive\\pylive\\QtGraphEditor\\dag_graph_graphics_scene.py:\n   10  \n   11  class TextWidget(QGraphicsWidget):\n   12: \t\"\"\"A simple widget that contains a QGraphicsTextItem.\"\"\"\n   13  \tdef __init__(self, text, parent=None):\n   14  \t\tsuper().__init__(parent)\n   15  \t\t# Create the text item\n   16: \t\tself.text_item = QGraphicsTextItem(text, self)\n   17  \t\tself.text_item.document().setDocumentMargin(0)\n   18  \t\tself.text_item.setTextInteractionFlags(Qt.TextInteractionFlag.TextEditorInteraction)\n\nC:\\dev\\src\\pylive\\pylive\\QtGraphEditor\\editable_text_item.py:\n    4  from PySide6.QtWidgets import *\n    5  \n    6: class EditableTextItem(QGraphicsTextItem):\n    7  \ttextChanged = Signal(str)\n    8  \tdef __init__(self, text:str=\"\", parent=None):\n\nC:\\dev\\src\\pylive\\pylive\\QtGraphEditor\\graphview_columnbased.py:\n  262  \n  263  \n  264: class EditableTextItem(QGraphicsTextItem):\n  265  \tdef __init__(self, text, parent=None):\n  266  \t\tsuper().__init__(text, parent)\n\nC:\\dev\\src\\pylive\\pylive\\QtGraphEditor\\graphview_rolebased.py:\n    9  \n   10  \n   11: class EditableTextItem(QGraphicsTextItem):\n   12  \tdef __init__(self, text, parent=None):\n   13  \t\tsuper().__init__(text, parent)\n\n7 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 1665,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "pylive/QtGraphEditor/dag_graph_graphics_scene.py",
			"settings":
			{
				"buffer_size": 31507,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAVwwAAAAAAABXDAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pylive/utils/unique.py",
			"settings":
			{
				"buffer_size": 658,
				"line_ending": "Windows"
			}
		},
		{
			"file": "pylive/examples/python_function_graph/main.py",
			"settings":
			{
				"buffer_size": 3075,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1503,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB2AQAAAAAAADkAAABmcm9tIHN0YW5kYXJkX2dyYXBoX2RlbGVnYXRlIGltcG9ydCBBYnN0cmFjdEdyYXBoRGVsZWdhdGU",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4BAAAAAAAAdQEAAAAAAAAAAAAAAADwvw"
				],
				[
					1504,
					1,
					"left_delete",
					null,
					"AQAAAHUBAAAAAAAAdQEAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYBAAAAAAAAdgEAAAAAAAAAAAAAAADwvw"
				],
				[
					1528,
					1,
					"left_delete",
					null,
					"AQAAACkHAAAAAAAAKQcAAAAAAAAIBwAAZGVmIGNyZWF0ZU5vZGVXaWRnZXQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKSAtPiBRR3JhcGhpY3NJdGVtOgogICAgICAgICIiImNyZWF0ZSBhbmQgYmluZCB0aGUgd2lkZ2V0IiIiCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB3aWRnZXQgPSBGdW5jdGlvbk5vZGVXaWRnZXQoZm4pCiAgICAgICAgcmV0dXJuIHdpZGdldAoKICAgIGRlZiBjcmVhdGVQcm9wZXJ0eVdpZGdldCgKICAgICAgICBzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUsIGF0dHI6IHN0ciwgcHJvcDogb2JqZWN0CiAgICApOgogICAgICAgIHBhc3MKCiAgICBkZWYgc2V0Tm9kZVdpZGdldFByb3BzKAogICAgICAgIHNlbGYsIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZSwgd2lkZ2V0OiBRR3JhcGhpY3NXaWRnZXQsICoqcHJvcHMKICAgICk6CiAgICAgICAgLi4uCiAgICAgICAgcHJpbnQoImhlbGxvIikKICAgICAgICAiIiJ1cGRhdGUgaXdkZ2V0IHByb3BzIGZyb20gbW9kZWwiIiIKICAgICAgICAjIGlmICdsYWJlbCcgaW4gcHJvcHMua2V5cygpOgogICAgICAgICMgCXdpZGdldC5sYWJlbC5kb2N1bWVudCgpLnNldFBsYWluVGV4dChwcm9wc1snbGFiZWwnXSkKCiAgICAgICAgIyBpZiAnaW5sZXRzJyBpbiBwcm9wcy5rZXlzKCk6CiAgICAgICAgIyAJLi4uCgogICAgICAgICMgaWYgJ291dGxldHMnIGluIHByb3BzLmtleXMoKToKICAgICAgICAjIAkuLi4KCiAgICBkZWYgc2V0Tm9kZU1vZGVsUHJvcHMoCiAgICAgICAgc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlLCB3aWRnZXQ6IFFHcmFwaGljc1dpZGdldCwgKipwcm9wcwogICAgKToKICAgICAgICAiIiJ1cGRhdGUgbW9kZWwgcHJvcHMgZnJvbSB3aWRnZXQiIiIKICAgICAgICBncmFwaC5zZXROb2RlUHJvcGVydGllcyhuLCAqKnByb3BzKQoKICAgIGRlZiBjcmVhdGVFZGdlV2lkZ2V0KAogICAgICAgIHNlbGYsCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgc291cmNlOiBRR3JhcGhpY3NXaWRnZXQsCiAgICAgICAgdGFyZ2V0OiBRR3JhcGhpY3NXaWRnZXQsCiAgICApIC0+IFFHcmFwaGljc0Fycm93SXRlbToKICAgICAgICBsaW5rID0gRm5FZGdlV2lkZ2V0KCkKCiAgICAgICAgZGVmIHVwZGF0ZV9saW5rKCk6CiAgICAgICAgICAgIGxpbmsuc2V0TGluZSgKICAgICAgICAgICAgICAgIG1ha2VMaW5lQmV0d2VlblNoYXBlcyhzb3VyY2UuZ2VvbWV0cnkoKSwgdGFyZ2V0Lmdlb21ldHJ5KCkpCiAgICAgICAgICAgICkKCiAgICAgICAgdXBkYXRlX2xpbmsoKQoKICAgICAgICBzb3VyY2UuZ2VvbWV0cnlDaGFuZ2VkLmNvbm5lY3QodXBkYXRlX2xpbmspCiAgICAgICAgdGFyZ2V0Lmdlb21ldHJ5Q2hhbmdlZC5jb25uZWN0KHVwZGF0ZV9saW5rKQoKICAgICAgICByZXR1cm4gbGluawoKICAgIGRlZiBzZXRFZGdlV2lkZ2V0UHJvcHMoCiAgICAgICAgc2VsZiwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBlOiBUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGVdLAogICAgICAgIHdpZGdldDogUUdyYXBoaWNzQXJyb3dJdGVtLAogICAgICAgICoqcHJvcHMsCiAgICApOgogICAgICAgIC4uLgoKICAgIGRlZiBzZXRFZGdlTW9kZWxQcm9wcygKICAgICAgICBzZWxmLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIGU6IFR1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZV0sCiAgICAgICAgd2lkZ2V0OiBRR3JhcGhpY3NBcnJvd0l0ZW0sCiAgICAgICAgKipwcm9wcywKICAgICk6CiAgICAgICAgLi4u",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEOAAAAAAAAKQcAAAAAAAAAAAAAAADwvw"
				],
				[
					1529,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAACkHAAAAAAAAKgcAAAAAAAAAAAAAKgcAAAAAAAArBwAAAAAAAAAAAAArBwAAAAAAACwHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkHAAAAAAAAKQcAAAAAAAAAAAAAAADwvw"
				],
				[
					1530,
					1,
					"insert",
					{
						"characters": " pan"
					},
					"BAAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAuBwAAAAAAAAAAAAAuBwAAAAAAAC8HAAAAAAAAAAAAAC8HAAAAAAAAMAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACwHAAAAAAAALAcAAAAAAAAAAAAAAADwvw"
				],
				[
					1531,
					1,
					"left_delete",
					null,
					"AQAAAC8HAAAAAAAALwcAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAHAAAAAAAAMAcAAAAAAAAAAAAAAADwvw"
				],
				[
					1532,
					1,
					"insert",
					{
						"characters": "intNode"
					},
					"BwAAAC8HAAAAAAAAMAcAAAAAAAAAAAAAMAcAAAAAAAAxBwAAAAAAAAAAAAAxBwAAAAAAADIHAAAAAAAAAAAAADIHAAAAAAAAMwcAAAAAAAAAAAAAMwcAAAAAAAA0BwAAAAAAAAAAAAA0BwAAAAAAADUHAAAAAAAAAAAAADUHAAAAAAAANgcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8HAAAAAAAALwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1533,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADYHAAAAAAAAOAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYHAAAAAAAANgcAAAAAAAAAAAAAAADwvw"
				],
				[
					1534,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAADcHAAAAAAAAOAcAAAAAAAAAAAAAOAcAAAAAAAA5BwAAAAAAAAAAAAA5BwAAAAAAADoHAAAAAAAAAAAAADoHAAAAAAAAOwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcHAAAAAAAANwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1535,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADsHAAAAAAAAPAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsHAAAAAAAAOwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1536,
					1,
					"insert",
					{
						"characters": " graph:"
					},
					"BwAAADwHAAAAAAAAPQcAAAAAAAAAAAAAPQcAAAAAAAA+BwAAAAAAAAAAAAA+BwAAAAAAAD8HAAAAAAAAAAAAAD8HAAAAAAAAQAcAAAAAAAAAAAAAQAcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAQwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwHAAAAAAAAPAcAAAAAAAAAAAAAAADwvw"
				],
				[
					1537,
					1,
					"insert",
					{
						"characters": "GraphMode"
					},
					"CQAAAEMHAAAAAAAARAcAAAAAAAAAAAAARAcAAAAAAABFBwAAAAAAAAAAAABFBwAAAAAAAEYHAAAAAAAAAAAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAASgcAAAAAAABLBwAAAAAAAAAAAABLBwAAAAAAAEwHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMHAAAAAAAAQwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1538,
					1,
					"insert",
					{
						"characters": "l,"
					},
					"AgAAAEwHAAAAAAAATQcAAAAAAAAAAAAATQcAAAAAAABOBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwHAAAAAAAATAcAAAAAAAAAAAAAAADwvw"
				],
				[
					1539,
					1,
					"insert",
					{
						"characters": " n:Hasha"
					},
					"CAAAAE4HAAAAAAAATwcAAAAAAAAAAAAATwcAAAAAAABQBwAAAAAAAAAAAABQBwAAAAAAAFEHAAAAAAAAAAAAAFEHAAAAAAAAUgcAAAAAAAAAAAAAUgcAAAAAAABTBwAAAAAAAAAAAABTBwAAAAAAAFQHAAAAAAAAAAAAAFQHAAAAAAAAVQcAAAAAAAAAAAAAVQcAAAAAAABWBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4HAAAAAAAATgcAAAAAAAAAAAAAAADwvw"
				],
				[
					1540,
					1,
					"insert",
					{
						"characters": "ble"
					},
					"AwAAAFYHAAAAAAAAVwcAAAAAAAAAAAAAVwcAAAAAAABYBwAAAAAAAAAAAABYBwAAAAAAAFkHAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYHAAAAAAAAVgcAAAAAAAAAAAAAAADwvw"
				],
				[
					1542,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFoHAAAAAAAAWwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoHAAAAAAAAWgcAAAAAAAAAAAAAAADwvw"
				],
				[
					1543,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BQAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsHAAAAAAAAWwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1544,
					1,
					"insert",
					{
						"characters": "turn"
					},
					"BAAAAGMHAAAAAAAAZAcAAAAAAAAAAAAAZAcAAAAAAABlBwAAAAAAAAAAAABlBwAAAAAAAGYHAAAAAAAAAAAAAGYHAAAAAAAAZwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMHAAAAAAAAYwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1545,
					6,
					"left_delete",
					null,
					"BgAAAGYHAAAAAAAAZgcAAAAAAAABAAAAbmUHAAAAAAAAZQcAAAAAAAABAAAAcmQHAAAAAAAAZAcAAAAAAAABAAAAdWMHAAAAAAAAYwcAAAAAAAABAAAAdGIHAAAAAAAAYgcAAAAAAAABAAAAZWEHAAAAAAAAYQcAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcHAAAAAAAAZwcAAAAAAAAAAAAAAADwvw"
				],
				[
					1552,
					1,
					"insert",
					{
						"characters": "QObject"
					},
					"CQAAAA0HAAAAAAAADgcAAAAAAAAAAAAADgcAAAAAAAAOBwAAAAAAABUAAABBYnN0cmFjdEdyYXBoRGVsZWdhdGVIBwAAAAAAAEgHAAAAAAAABQAAACAgICAJDgcAAAAAAAAPBwAAAAAAAAAAAAAPBwAAAAAAABAHAAAAAAAAAAAAABAHAAAAAAAAEQcAAAAAAAAAAAAAEQcAAAAAAAASBwAAAAAAAAAAAAASBwAAAAAAABMHAAAAAAAAAAAAABMHAAAAAAAAFAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0HAAAAAAAAIgcAAAAAAAAAAAAAAADwvw"
				],
				[
					1557,
					1,
					"left_delete",
					null,
					"AQAAAE8HAAAAAAAATwcAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAHAAAAAAAAUAcAAAAAAAAAAAAAAADwvw"
				],
				[
					1589,
					2,
					"left_delete",
					null,
					"AgAAAEAGAAAAAAAAQAYAAAAAAAC1AAAAY2xhc3MgRm5FZGdlV2lkZ2V0KFFHcmFwaGljc0Fycm93SXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBwZW4gPSBRUGVuKFFDb2xvcigid2hpdGUiKSwgMikKICAgICAgICBzZWxmLnNldFBlbihwZW4pCj8GAAAAAAAAPwYAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPUGAAAAAAAAQAYAAAAAAAAAAAAAAADwvw"
				],
				[
					1599,
					1,
					"unexpand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAAPAsAAAAAAAAyDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKIyBjbGFzcyBGbk5vZGVXaWRnZXQoUUdyYXBoaWNzV2lkZ2V0KToKIyAgICAgZGVmIF9faW5pdF9fKHNlbGYsIHBhcmVudDogT3B0aW9uYWxbUUdyYXBoaWNzSXRlbV0gPSBOb25lKSAtPiBOb25lOgojICAgICAgICAgUUdyYXBoaWNzV2lkZ2V0Ll9faW5pdF9fKHNlbGYsIHBhcmVudD1wYXJlbnQpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc01vdmFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiMgICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc0ZvY3VzYWJsZSwgVHJ1ZSkKCiMgICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb246IFFTdHlsZU9wdGlvbkdyYXBoaWNzSXRlbSwgd2lkZ2V0PU5vbmUpOgojICAgICAgICAgcGFsZXR0ZSA9IHNlbGYucGFsZXR0ZSgpCgojICAgICAgICAgcGVuID0gUVBlbihwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5UZXh0KSwgMSkKIyAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgIHJlY3QgPSBRUmVjdEYoMCwgMCwgc2VsZi5nZW9tZXRyeSgpLndpZHRoKCksIHNlbGYuZ2VvbWV0cnkoKS5oZWlnaHQoKSkKIyAgICAgICAgICMgcGFpbnRlci5kcmF3RWxsaXBzZShyZWN0KQoKIyAgICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KHJlY3QsIDEwLCAxMCkKCiMgICAgICAgICBpZiBRU3R5bGUuU3RhdGVGbGFnLlN0YXRlX1NlbGVjdGVkIGluIG9wdGlvbi5zdGF0ZToKIyAgICAgICAgICAgICBwZW4gPSBRUGVuKAojICAgICAgICAgICAgICAgICBwYWxldHRlLmNvbG9yKFFQYWxldHRlLkNvbG9yUm9sZS5XaW5kb3dUZXh0KSwKIyAgICAgICAgICAgICAgICAgMSwKIyAgICAgICAgICAgICAgICAgUXQuUGVuU3R5bGUuRGFzaExpbmUsCiMgICAgICAgICAgICAgKQojICAgICAgICAgICAgIHBhaW50ZXIuc2V0UGVuKHBlbikKIyAgICAgICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChyZWN0LCAxLCAxKQoKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoUU9iamVjdCk6CiAgICBkZWYgcGFpbnROb2RlKHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQoKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAMgwAAAAAAAAAAAAAAADwvw"
				],
				[
					1608,
					1,
					"paste",
					null,
					"AgAAAFsGAAAAAAAAZQkAAAAAAAAAAAAAZQkAAAAAAABlCQAAAAAAADMAAAAJZGVmIHBhaW50Tm9kZShzZWxmLCBncmFwaDpHcmFwaE1vZGVsLCBuOkhhc2hhYmxlKTo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4GAAAAAAAAWwYAAAAAAAAAAAAAAADwvw"
				],
				[
					1611,
					2,
					"left_delete",
					null,
					"AgAAAPQBAAAAAAAA9AEAAAAAAABEBAAACiMgY2xhc3MgRm5Ob2RlV2lkZ2V0KFFHcmFwaGljc1dpZGdldCk6CiMgICAgIGRlZiBfX2luaXRfXyhzZWxmLCBwYXJlbnQ6IE9wdGlvbmFsW1FHcmFwaGljc0l0ZW1dID0gTm9uZSkgLT4gTm9uZToKIyAgICAgICAgIFFHcmFwaGljc1dpZGdldC5fX2luaXRfXyhzZWxmLCBwYXJlbnQ9cGFyZW50KQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNNb3ZhYmxlLCBUcnVlKQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNTZWxlY3RhYmxlLCBUcnVlKQojICAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNGb2N1c2FibGUsIFRydWUpCgojICAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uOiBRU3R5bGVPcHRpb25HcmFwaGljc0l0ZW0sIHdpZGdldD1Ob25lKToKIyAgICAgICAgIHBhbGV0dGUgPSBzZWxmLnBhbGV0dGUoKQoKIyAgICAgICAgIHBlbiA9IFFQZW4ocGFsZXR0ZS5jb2xvcihRUGFsZXR0ZS5Db2xvclJvbGUuVGV4dCksIDEpCiMgICAgICAgICBwYWludGVyLnNldFBlbihwZW4pCiMgICAgICAgICByZWN0ID0gUVJlY3RGKDAsIDAsIHNlbGYuZ2VvbWV0cnkoKS53aWR0aCgpLCBzZWxmLmdlb21ldHJ5KCkuaGVpZ2h0KCkpCiMgICAgICAgICAjIHBhaW50ZXIuZHJhd0VsbGlwc2UocmVjdCkKCiMgICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChyZWN0LCAxMCwgMTApCgojICAgICAgICAgaWYgUVN0eWxlLlN0YXRlRmxhZy5TdGF0ZV9TZWxlY3RlZCBpbiBvcHRpb24uc3RhdGU6CiMgICAgICAgICAgICAgcGVuID0gUVBlbigKIyAgICAgICAgICAgICAgICAgcGFsZXR0ZS5jb2xvcihRUGFsZXR0ZS5Db2xvclJvbGUuV2luZG93VGV4dCksCiMgICAgICAgICAgICAgICAgIDEsCiMgICAgICAgICAgICAgICAgIFF0LlBlblN0eWxlLkRhc2hMaW5lLAojICAgICAgICAgICAgICkKIyAgICAgICAgICAgICBwYWludGVyLnNldFBlbihwZW4pCiMgICAgICAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3QocmVjdCwgMSwgMSkK8wEAAAAAAADzAQAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgGAAAAAAAA9AEAAAAAAAAAAAAAAADwvw"
				],
				[
					1615,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAwAoAAAAAAADOCQAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAoJbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAoJUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKCmNsYXNzIEZuR3JhcGhEZWxlZ2F0ZShRT2JqZWN0KToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSA0CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICAjIGRyYXcgb3V0bGluZQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KG9wdGlvbi5yZWN0LCA0LCA0KQoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufSIpCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CglkZWYgX19pbml0X18oCgkJc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKCSk6CgkJc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQoKCQlzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKCWRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgoJCS4uLgoKCWRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CgkJdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKCQlzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKCQlkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKCQkJaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CgkJCQl1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKCQkJCQlmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQoJCQkJKQoJCQkJZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKCQlncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCgkJaWYgZ3JhcGhtb2RlbDoKCQkJYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgoJCQlmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CgkJCQlhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgoJCQkJYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCgkJCQlhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCgkJCQlhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKCQkJYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgoJYXBwID0gUUFwcGxpY2F0aW9uKCkKCWdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCglmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCgljd2QgPSBQYXRoLmN3ZCgpCgljd2QuZ2xvYigiKiIpCgoJZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAoJCVtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KCSkKCWdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCglncmFwaF92aWV3LnNob3coKQoJYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUCAAAAAAAAFQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1619,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAwAoAAAAAAADACgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldwoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKFFPYmplY3QpOgogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCgogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOwDAAAAAAAA7AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1625,
					1,
					"reindent",
					null,
					"AQAAAM4FAAAAAAAA1gUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4FAAAAAAAAzgUAAAAAAAAAAAAAAMBpQA"
				],
				[
					1626,
					1,
					"insert",
					{
						"characters": "self."
					},
					"BQAAANYFAAAAAAAA1wUAAAAAAAAAAAAA1wUAAAAAAADYBQAAAAAAAAAAAADYBQAAAAAAANkFAAAAAAAAAAAAANkFAAAAAAAA2gUAAAAAAAAAAAAA2gUAAAAAAADbBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANYFAAAAAAAA1gUAAAAAAAAAAAAAAADwvw"
				],
				[
					1627,
					1,
					"insert",
					{
						"characters": "_del"
					},
					"BAAAANsFAAAAAAAA3AUAAAAAAAAAAAAA3AUAAAAAAADdBQAAAAAAAAAAAADdBQAAAAAAAN4FAAAAAAAAAAAAAN4FAAAAAAAA3wUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsFAAAAAAAA2wUAAAAAAAAAAAAAAADwvw"
				],
				[
					1628,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":1,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_delegate"
					},
					"AgAAANsFAAAAAAAA2wUAAAAAAAAEAAAAX2RlbNsFAAAAAAAA5AUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN8FAAAAAAAA3wUAAAAAAAAAAAAAAADwvw"
				],
				[
					1629,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOQFAAAAAAAA5QUAAAAAAAAAAAAA5QUAAAAAAADmBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQFAAAAAAAA5AUAAAAAAAAAAAAAAADwvw"
				],
				[
					1630,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOYFAAAAAAAA5wUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOYFAAAAAAAA5gUAAAAAAAAAAAAAAADwvw"
				],
				[
					1640,
					1,
					"paste",
					null,
					"AQAAAOcFAAAAAAAA9gUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcFAAAAAAAA5wUAAAAAAAAAAAAAAADwvw"
				],
				[
					1641,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPYFAAAAAAAA+AUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPYFAAAAAAAA9gUAAAAAAAAAAAAAAADwvw"
				],
				[
					1653,
					1,
					"paste",
					null,
					"AgAAABECAAAAAAAAHQIAAAAAAAAAAAAAHQIAAAAAAAAdAgAAAAAAAAcAAABRT2JqZWN0",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABECAAAAAAAAGAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1656,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoBAAAAAAAA+gEAAAAAAAAAAAAAAADwvw"
				],
				[
					1658,
					1,
					"insert",
					{
						"characters": "NodeD"
					},
					"BQAAAPoBAAAAAAAA+wEAAAAAAAAAAAAA+wEAAAAAAAD8AQAAAAAAAAAAAAD8AQAAAAAAAP0BAAAAAAAAAAAAAP0BAAAAAAAA/gEAAAAAAAAAAAAA/gEAAAAAAAD/AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPoBAAAAAAAA+gEAAAAAAAAAAAAAAAAAAA"
				],
				[
					1659,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":11,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": true,
						"must_insert": false,
						"query_change_id":
						[
							1084,
							1658,
							5
						],
						"trigger": "NodeDelegate"
					},
					"AwAAAPoBAAAAAAAA+gEAAAAAAAAFAAAATm9kZUT6AQAAAAAAAAYCAAAAAAAAAAAAAJYBAAAAAAAApAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP8BAAAAAAAA/wEAAAAAAAAAAAAAAADwvw"
				],
				[
					1664,
					3,
					"left_delete",
					null,
					"AwAAAAgCAAAAAAAACAIAAAAAAAAMAAAATm9kZURlbGVnYXRlBwIAAAAAAAAHAgAAAAAAAAEAAAAKBgIAAAAAAAAGAgAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQCAAAAAAAACAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1668,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA/QoAAAAAAAD8CgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCmNsYXNzIEZuR3JhcGhEZWxlZ2F0ZShOb2RlRGVsZWdhdGUpOgogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDQKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gNAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcCAAAAAAAABwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1671,
					1,
					"left_delete",
					null,
					"AQAAAK4CAAAAAAAArgIAAAAAAAABAAAANA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8CAAAAAAAArwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1672,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4CAAAAAAAArgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1675,
					1,
					"left_delete",
					null,
					"AQAAABMEAAAAAAAAEwQAAAAAAAABAAAANA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAADwvw"
				],
				[
					1676,
					1,
					"insert",
					{
						"characters": "16"
					},
					"AgAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABMEAAAAAAAAEwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1678,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA/woAAAAAAAD/CgAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGgsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUEAAAAAAAAFQQAAAAAAAAAAAAAAADwvw"
				],
				[
					1681,
					1,
					"left_delete",
					null,
					"AQAAADsFAAAAAAAAOwUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwFAAAAAAAAPAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "\n\nself.g"
					},
					"CwAAAF8EAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGkEAAAAAAAAAAAAAGkEAAAAAAAAcQQAAAAAAAAAAAAAYAQAAAAAAABgBAAAAAAAAAgAAAAgICAgICAgIGkEAAAAAAAAagQAAAAAAAAAAAAAagQAAAAAAABrBAAAAAAAAAAAAABrBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAbQQAAAAAAAAAAAAAbQQAAAAAAABuBAAAAAAAAAAAAABuBAAAAAAAAG8EAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8EAAAAAAAAXwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1685,
					1,
					"insert",
					{
						"characters": "ra"
					},
					"AgAAAG8EAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAABxBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8EAAAAAAAAbwQAAAAAAAAAAAAAAADwvw"
				],
				[
					1687,
					1,
					"left_delete",
					null,
					"AQAAAGAEAAAAAAAAYAQAAAAAAAARAAAACiAgICAgICAgc2VsZi5ncmE",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEEAAAAAAAAYAQAAAAAAAAAAAAAAEBYQA"
				],
				[
					1694,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADsFAAAAAAAAPAUAAAAAAAAAAAAAPAUAAAAAAABEBQAAAAAAAAAAAABEBQAAAAAAAEUFAAAAAAAAAAAAAEUFAAAAAAAATQUAAAAAAAAAAAAAPAUAAAAAAAA8BQAAAAAAAAgAAAAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsFAAAAAAAAOwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1695,
					1,
					"paste",
					null,
					"AQAAAEUFAAAAAAAAzQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUFAAAAAAAARQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1698,
					2,
					"left_delete",
					null,
					"AgAAAFYFAAAAAAAAVgUAAAAAAABKAAAAICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmdVBQAAAAAAAFUFAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKAFAAAAAAAAVgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "\nfn"
					},
					"BAAAAFUFAAAAAAAAVgUAAAAAAAAAAAAAVgUAAAAAAABeBQAAAAAAAAAAAABeBQAAAAAAAF8FAAAAAAAAAAAAAF8FAAAAAAAAYAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUFAAAAAAAAVQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1703,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGAFAAAAAAAAYQUAAAAAAAAAAAAAYQUAAAAAAABiBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAFAAAAAAAAYAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1704,
					1,
					"insert",
					{
						"characters": " graph."
					},
					"BwAAAGIFAAAAAAAAYwUAAAAAAAAAAAAAYwUAAAAAAABkBQAAAAAAAAAAAABkBQAAAAAAAGUFAAAAAAAAAAAAAGUFAAAAAAAAZgUAAAAAAAAAAAAAZgUAAAAAAABnBQAAAAAAAAAAAABnBQAAAAAAAGgFAAAAAAAAAAAAAGgFAAAAAAAAaQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIFAAAAAAAAYgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1705,
					1,
					"insert",
					{
						"characters": "nodeP"
					},
					"BQAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAAbQUAAAAAAABuBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkFAAAAAAAAaQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1706,
					5,
					"left_delete",
					null,
					"BQAAAG0FAAAAAAAAbQUAAAAAAAABAAAAUGwFAAAAAAAAbAUAAAAAAAABAAAAZWsFAAAAAAAAawUAAAAAAAABAAAAZGoFAAAAAAAAagUAAAAAAAABAAAAb2kFAAAAAAAAaQUAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4FAAAAAAAAbgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1707,
					1,
					"insert",
					{
						"characters": "getN"
					},
					"BAAAAGkFAAAAAAAAagUAAAAAAAAAAAAAagUAAAAAAABrBQAAAAAAAAAAAABrBQAAAAAAAGwFAAAAAAAAAAAAAGwFAAAAAAAAbQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkFAAAAAAAAaQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1708,
					4,
					"left_delete",
					null,
					"BAAAAGwFAAAAAAAAbAUAAAAAAAABAAAATmsFAAAAAAAAawUAAAAAAAABAAAAdGoFAAAAAAAAagUAAAAAAAABAAAAZWkFAAAAAAAAaQUAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0FAAAAAAAAbQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1711,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMDAAAAAAAA4wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1712,
					1,
					"left_delete",
					null,
					"AQAAAOMDAAAAAAAA4wMAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1713,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOMDAAAAAAAA5AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOMDAAAAAAAA4wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1719,
					1,
					"insert",
					{
						"characters": "GraphMoel"
					},
					"CQAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAADmAwAAAAAAAOcDAAAAAAAAAAAAAOcDAAAAAAAA6AMAAAAAAAAAAAAA6AMAAAAAAADpAwAAAAAAAAAAAADpAwAAAAAAAOoDAAAAAAAAAAAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1721,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsDAAAAAAAA6wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1728,
					1,
					"left_delete",
					null,
					"AQAAAHMFAAAAAAAAcwUAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQFAAAAAAAAdAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1729,
					1,
					"insert",
					{
						"characters": ".getN"
					},
					"BQAAAHMFAAAAAAAAdAUAAAAAAAAAAAAAdAUAAAAAAAB1BQAAAAAAAAAAAAB1BQAAAAAAAHYFAAAAAAAAAAAAAHYFAAAAAAAAdwUAAAAAAAAAAAAAdwUAAAAAAAB4BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMFAAAAAAAAcwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1730,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getNodeProperty"
					},
					"AgAAAHQFAAAAAAAAdAUAAAAAAAAEAAAAZ2V0TnQFAAAAAAAAgwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgFAAAAAAAAeAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1731,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAIMFAAAAAAAAhQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIMFAAAAAAAAgwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1732,
					1,
					"insert",
					{
						"characters": "n,"
					},
					"AgAAAIQFAAAAAAAAhQUAAAAAAAAAAAAAhQUAAAAAAACGBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQFAAAAAAAAhAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1733,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYFAAAAAAAAhwUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYFAAAAAAAAhgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1734,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAIcFAAAAAAAAiQUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcFAAAAAAAAhwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1735,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAAIgFAAAAAAAAiQUAAAAAAAAAAAAAiQUAAAAAAACKBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIgFAAAAAAAAiAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1738,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAALcFAAAAAAAAuAUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcFAAAAAAAAtwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1739,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAALgFAAAAAAAAugUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALgFAAAAAAAAuAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1740,
					1,
					"insert",
					{
						"characters": "fn"
					},
					"AgAAALkFAAAAAAAAugUAAAAAAAAAAAAAugUAAAAAAAC7BQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkFAAAAAAAAuQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1742,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAgwsAAAAAAACCCwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6R3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259IikKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0te2ZufSIpCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALsFAAAAAAAAuwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1748,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANcCAAAAAAAA2AIAAAAAAAAAAAAA2AIAAAAAAADgAgAAAAAAAAAAAADgAgAAAAAAAOECAAAAAAAAAAAAAOECAAAAAAAA6QIAAAAAAAAAAAAA2AIAAAAAAADYAgAAAAAAAAgAAAAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcCAAAAAAAA1wIAAAAAAAAAAAAAAADwvw"
				],
				[
					1749,
					1,
					"paste",
					null,
					"AQAAAOECAAAAAAAABAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOECAAAAAAAA4QIAAAAAAAAAAAAAAADwvw"
				],
				[
					1755,
					1,
					"paste",
					null,
					"AgAAAC8DAAAAAAAAOgMAAAAAAAAAAAAAOgMAAAAAAAA6AwAAAAAAAAYAAABmIntufSI",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADUDAAAAAAAALwMAAAAAAAAAAAAAAADwvw"
				],
				[
					1759,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAtQsAAAAAAAC1CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQoKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufS17Zm59IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgCAAAAAAAA2AIAAAAAAAAAAAAAAADwvw"
				],
				[
					1761,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAtQsAAAAAAAC1CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBzaXplSGludCgKICAgICAgICBzZWxmLCBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUKICAgICkgLT4gUVNpemVGOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKG9wdGlvbi5mb250KQoKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShmIntufS17Zm59IikKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgCAAAAAAAA2AIAAAAAAAAAAAAAAADwvw"
				],
				[
					1764,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAC0CAAAAAAAALgIAAAAAAAAAAAAALgIAAAAAAAAvAgAAAAAAAAAAAAAvAgAAAAAAADACAAAAAAAAAAAAADACAAAAAAAAMQIAAAAAAAAAAAAALgIAAAAAAAAuAgAAAAAAAAEAAAAJMAIAAAAAAAAxAgAAAAAAAAAAAAAxAgAAAAAAADICAAAAAAAAAAAAAC8CAAAAAAAALwIAAAAAAAABAAAACQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0CAAAAAAAALQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1766,
					1,
					"reindent",
					null,
					"AQAAAC8CAAAAAAAAMAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8CAAAAAAAALwIAAAAAAAAAAAAAAAA4QA"
				],
				[
					1767,
					1,
					"insert",
					{
						"characters": "def"
					},
					"BAAAADACAAAAAAAAMQIAAAAAAAAAAAAAMgIAAAAAAAAyAgAAAAAAAAEAAAAJMQIAAAAAAAAyAgAAAAAAAAAAAAAyAgAAAAAAADMCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADACAAAAAAAAMAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1768,
					1,
					"insert",
					{
						"characters": " header_tex"
					},
					"CwAAADMCAAAAAAAANAIAAAAAAAAAAAAANAIAAAAAAAA1AgAAAAAAAAAAAAA1AgAAAAAAADYCAAAAAAAAAAAAADYCAAAAAAAANwIAAAAAAAAAAAAANwIAAAAAAAA4AgAAAAAAAAAAAAA4AgAAAAAAADkCAAAAAAAAAAAAADkCAAAAAAAAOgIAAAAAAAAAAAAAOgIAAAAAAAA7AgAAAAAAAAAAAAA7AgAAAAAAADwCAAAAAAAAAAAAADwCAAAAAAAAPQIAAAAAAAAAAAAAPQIAAAAAAAA+AgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMCAAAAAAAAMwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1769,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAD4CAAAAAAAAPwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4CAAAAAAAAPgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1770,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD8CAAAAAAAAQQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8CAAAAAAAAPwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1771,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BAAAAEACAAAAAAAAQQIAAAAAAAAAAAAAQQIAAAAAAABCAgAAAAAAAAAAAABCAgAAAAAAAEMCAAAAAAAAAAAAAEMCAAAAAAAARAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEACAAAAAAAAQAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1773,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEUCAAAAAAAARgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUCAAAAAAAARQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1776,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAADQCAAAAAAAANQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQCAAAAAAAANAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1779,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEgCAAAAAAAASQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgCAAAAAAAASAIAAAAAAAAAAAAAAABLQA"
				],
				[
					1780,
					1,
					"reindent",
					null,
					"AQAAAEkCAAAAAAAASwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkCAAAAAAAASQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1781,
					1,
					"left_delete",
					null,
					"AQAAAEoCAAAAAAAASgIAAAAAAAABAAAACQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsCAAAAAAAASwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1782,
					1,
					"insert",
					{
						"characters": "@override"
					},
					"CQAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAABPAgAAAAAAAFACAAAAAAAAAAAAAFACAAAAAAAAUQIAAAAAAAAAAAAAUQIAAAAAAABSAgAAAAAAAAAAAABSAgAAAAAAAFMCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoCAAAAAAAASgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1785,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8DAAAAAAAA0AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8DAAAAAAAAzwMAAAAAAAAAAAAAAADwvw"
				],
				[
					1786,
					1,
					"reindent",
					null,
					"AQAAANADAAAAAAAA2AMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANADAAAAAAAA0AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1787,
					4,
					"left_delete",
					null,
					"BAAAANcDAAAAAAAA1wMAAAAAAAABAAAAINYDAAAAAAAA1gMAAAAAAAABAAAAINUDAAAAAAAA1QMAAAAAAAABAAAAINQDAAAAAAAA1AMAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANgDAAAAAAAA2AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1788,
					1,
					"insert",
					{
						"characters": "@override"
					},
					"CQAAANQDAAAAAAAA1QMAAAAAAAAAAAAA1QMAAAAAAADWAwAAAAAAAAAAAADWAwAAAAAAANcDAAAAAAAAAAAAANcDAAAAAAAA2AMAAAAAAAAAAAAA2AMAAAAAAADZAwAAAAAAAAAAAADZAwAAAAAAANoDAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAA2wMAAAAAAADcAwAAAAAAAAAAAADcAwAAAAAAAN0DAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQDAAAAAAAA1AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1803,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAEcCAAAAAAAASAIAAAAAAAAAAAAASAIAAAAAAABJAgAAAAAAAAAAAABJAgAAAAAAAEoCAAAAAAAAAAAAAEoCAAAAAAAASwIAAAAAAAAAAAAASwIAAAAAAABMAgAAAAAAAAAAAABMAgAAAAAAAE0CAAAAAAAAAAAAAE0CAAAAAAAATgIAAAAAAAAAAAAATgIAAAAAAABPAgAAAAAAAAAAAABPAgAAAAAAAFACAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcCAAAAAAAARwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1804,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFACAAAAAAAAUQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFACAAAAAAAAUAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1807,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAEUCAAAAAAAARgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUCAAAAAAAARQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1808,
					1,
					"insert",
					{
						"characters": " graph:Gr"
					},
					"CQAAAEYCAAAAAAAARwIAAAAAAAAAAAAARwIAAAAAAABIAgAAAAAAAAAAAABIAgAAAAAAAEkCAAAAAAAAAAAAAEkCAAAAAAAASgIAAAAAAAAAAAAASgIAAAAAAABLAgAAAAAAAAAAAABLAgAAAAAAAEwCAAAAAAAAAAAAAEwCAAAAAAAATQIAAAAAAAAAAAAATQIAAAAAAABOAgAAAAAAAAAAAABOAgAAAAAAAE8CAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYCAAAAAAAARgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1809,
					1,
					"insert",
					{
						"characters": "aphM"
					},
					"BAAAAE8CAAAAAAAAUAIAAAAAAAAAAAAAUAIAAAAAAABRAgAAAAAAAAAAAABRAgAAAAAAAFICAAAAAAAAAAAAAFICAAAAAAAAUwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8CAAAAAAAATwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1810,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "GraphModel"
					},
					"AgAAAE0CAAAAAAAATQIAAAAAAAAGAAAAR3JhcGhNTQIAAAAAAABXAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMCAAAAAAAAUwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1811,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFcCAAAAAAAAWAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcCAAAAAAAAVwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1812,
					1,
					"insert",
					{
						"characters": " n:Hashbl"
					},
					"CQAAAFgCAAAAAAAAWQIAAAAAAAAAAAAAWQIAAAAAAABaAgAAAAAAAAAAAABaAgAAAAAAAFsCAAAAAAAAAAAAAFsCAAAAAAAAXAIAAAAAAAAAAAAAXAIAAAAAAABdAgAAAAAAAAAAAABdAgAAAAAAAF4CAAAAAAAAAAAAAF4CAAAAAAAAXwIAAAAAAAAAAAAAXwIAAAAAAABgAgAAAAAAAAAAAABgAgAAAAAAAGECAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgCAAAAAAAAWAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1813,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAGECAAAAAAAAYgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGECAAAAAAAAYQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAF8CAAAAAAAAYAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF8CAAAAAAAAXwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1826,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAGUCAAAAAAAAZgIAAAAAAAAAAAAAZgIAAAAAAABnAgAAAAAAAAAAAABnAgAAAAAAAGgCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUCAAAAAAAAZQIAAAAAAAAAAAAAAADwvw"
				],
				[
					1827,
					1,
					"paste",
					null,
					"AQAAAGgCAAAAAAAAwQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgCAAAAAAAAaAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1830,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BwAAAJQCAAAAAAAAlQIAAAAAAAAAAAAAlQIAAAAAAACVAgAAAAAAACEAAAB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2WVAgAAAAAAAJYCAAAAAAAAAAAAAJYCAAAAAAAAlwIAAAAAAAAAAAAAlwIAAAAAAACYAgAAAAAAAAAAAACYAgAAAAAAAJkCAAAAAAAAAAAAAJkCAAAAAAAAmgIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUCAAAAAAAAlAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1831,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoCAAAAAAAAmgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1834,
					1,
					"left_delete",
					null,
					"AQAAAKcCAAAAAAAApwIAAAAAAAAKAAAACgkJcmV0dXJuIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALECAAAAAAAApwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1837,
					1,
					"left_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsCAAAAAAAAmwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1838,
					1,
					"right_delete",
					null,
					"AQAAAJoCAAAAAAAAmgIAAAAAAAABAAAAKA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoCAAAAAAAAmgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1839,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJoCAAAAAAAAmwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoCAAAAAAAAmgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1849,
					1,
					"expand_tabs",
					{
						"set_translate_tabs": true
					},
					"AQAAAAAAAAAAAAAAVAwAAAAAAABIDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKCglkZWYgX2hlYWRlcl90ZXh0KHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgoJCWZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbn0iCgoJQG92ZXJyaWRlCiAgICBkZWYgc2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0te2ZufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIEBvdmVycmlkZQogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAASAwAAAAAAAAAAAAAAADwvw"
				],
				[
					1856,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAVQwAAAAAAABUDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKCiAgICBkZWYgX2hlYWRlcl90ZXh0KHNlbGYsIGdyYXBoOkdyYXBoTW9kZWwsIG46SGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbn0iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgc2l6ZUhpbnQoCiAgICAgICAgc2VsZiwgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlCiAgICApIC0+IFFTaXplRjoKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2UoZiJ7bn0te2ZufSIpCiAgICAgICAgcmV0dXJuIFFTaXplRigKICAgICAgICAgICAgcGFkZGluZyArIHRleHRfd2lkdGggKyBwYWRkaW5nLCBwYWRkaW5nICsgZm0uYXNjZW50KCkgKyBwYWRkaW5nCiAgICAgICAgKQoKICAgIEBvdmVycmlkZQogICAgZGVmIHBhaW50KAogICAgICAgIHNlbGYsCiAgICAgICAgcGFpbnRlcjogUVBhaW50ZXIsCiAgICAgICAgb3B0aW9uOiBRU3R5bGVPcHRpb25WaWV3SXRlbSwKICAgICAgICBncmFwaDogR3JhcGhNb2RlbCwKICAgICAgICBuOiBIYXNoYWJsZSwKICAgICk6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgZiJ7bn0iKQogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBmIntufS17Zm59IikKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALACAAAAAAAAsAIAAAAAAAAAAAAAAADwvw"
				],
				[
					1872,
					1,
					"left_delete",
					null,
					"AQAAAKMFAAAAAAAAowUAAAAAAAAsAAAAICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIGYie259Iik",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8FAAAAAAAAowUAAAAAAAAAAAAAAADwvw"
				],
				[
					1878,
					1,
					"insert",
					{
						"characters": "header"
					},
					"BwAAAE4FAAAAAAAATwUAAAAAAAAAAAAATwUAAAAAAABPBQAAAAAAAAQAAABub2RlTwUAAAAAAABQBQAAAAAAAAAAAABQBQAAAAAAAFEFAAAAAAAAAAAAAFEFAAAAAAAAUgUAAAAAAAAAAAAAUgUAAAAAAABTBQAAAAAAAAAAAABTBQAAAAAAAFQFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4FAAAAAAAAUgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1881,
					1,
					"insert",
					{
						"characters": "self._"
					},
					"BwAAAFoGAAAAAAAAWwYAAAAAAAAAAAAAWwYAAAAAAABbBgAAAAAAAAsAAABmIntufS17Zm59IlsGAAAAAAAAXAYAAAAAAAAAAAAAXAYAAAAAAABdBgAAAAAAAAAAAABdBgAAAAAAAF4GAAAAAAAAAAAAAF4GAAAAAAAAXwYAAAAAAAAAAAAAXwYAAAAAAABgBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUGAAAAAAAAWgYAAAAAAAAAAAAAAADwvw"
				],
				[
					1882,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_header_text"
					},
					"AgAAAF8GAAAAAAAAXwYAAAAAAAABAAAAX18GAAAAAAAAawYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAGAAAAAAAAYAYAAAAAAAAAAAAAAADwvw"
				],
				[
					1883,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGsGAAAAAAAAbQYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsGAAAAAAAAawYAAAAAAAAAAAAAAADwvw"
				],
				[
					1884,
					1,
					"insert",
					{
						"characters": "graph,"
					},
					"BgAAAGwGAAAAAAAAbQYAAAAAAAAAAAAAbQYAAAAAAABuBgAAAAAAAAAAAABuBgAAAAAAAG8GAAAAAAAAAAAAAG8GAAAAAAAAcAYAAAAAAAAAAAAAcAYAAAAAAABxBgAAAAAAAAAAAABxBgAAAAAAAHIGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwGAAAAAAAAbAYAAAAAAAAAAAAAAADwvw"
				],
				[
					1885,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAHIGAAAAAAAAcwYAAAAAAAAAAAAAcwYAAAAAAAB0BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIGAAAAAAAAcgYAAAAAAAAAAAAAAADwvw"
				],
				[
					1893,
					1,
					"cut",
					null,
					"AQAAAK4FAAAAAAAArgUAAAAAAABAAAAAIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO4FAAAAAAAArgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1896,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADYGAAAAAAAANwYAAAAAAAAAAAAANwYAAAAAAAA/BgAAAAAAAAAAAAA/BgAAAAAAAEAGAAAAAAAAAAAAAEAGAAAAAAAASAYAAAAAAAAAAAAANwYAAAAAAAA3BgAAAAAAAAgAAAAgICAgICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYGAAAAAAAANgYAAAAAAAAAAAAAAADwvw"
				],
				[
					1897,
					1,
					"paste",
					null,
					"AQAAAEAGAAAAAAAAgAYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAGAAAAAAAAQAYAAAAAAAAAAAAAAADwvw"
				],
				[
					1900,
					4,
					"left_delete",
					null,
					"BAAAAK4FAAAAAAAArgUAAAAAAAABAAAACqoFAAAAAAAAqgUAAAAAAAAEAAAAICAgIKYFAAAAAAAApgUAAAAAAAAEAAAAICAgIKUFAAAAAAAApQUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK8FAAAAAAAArwUAAAAAAAAAAAAAAADwvw"
				],
				[
					1906,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAOwwAAAAAAAA7DAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm59IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259LXtmbn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkFAAAAAAAAWQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1911,
					1,
					"insert",
					{
						"characters": ".__name__"
					},
					"CQAAAK4CAAAAAAAArwIAAAAAAAAAAAAArwIAAAAAAACwAgAAAAAAAAAAAACwAgAAAAAAALECAAAAAAAAAAAAALECAAAAAAAAsgIAAAAAAAAAAAAAsgIAAAAAAACzAgAAAAAAAAAAAACzAgAAAAAAALQCAAAAAAAAAAAAALQCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC2AgAAAAAAAAAAAAC2AgAAAAAAALcCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4CAAAAAAAArgIAAAAAAAAAAAAAAADwvw"
				],
				[
					1913,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAARAwAAAAAAABEDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKGYie259LXtmbn0iKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSAxNgogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALcCAAAAAAAAtwIAAAAAAAAAAAAAAADwvw"
				],
				[
					1918,
					1,
					"insert",
					{
						"characters": "self._h"
					},
					"CAAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADLAwAAAAAAAAsAAABmIntufS17Zm59IssDAAAAAAAAzAMAAAAAAAAAAAAAzAMAAAAAAADNAwAAAAAAAAAAAADNAwAAAAAAAM4DAAAAAAAAAAAAAM4DAAAAAAAAzwMAAAAAAAAAAAAAzwMAAAAAAADQAwAAAAAAAAAAAADQAwAAAAAAANEDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAA1QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1919,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_header_text"
					},
					"AgAAAM8DAAAAAAAAzwMAAAAAAAACAAAAX2jPAwAAAAAAANsDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEDAAAAAAAA0QMAAAAAAAAAAAAAAADwvw"
				],
				[
					1920,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANsDAAAAAAAA3QMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANsDAAAAAAAA2wMAAAAAAAAAAAAAAADwvw"
				],
				[
					1921,
					1,
					"insert",
					{
						"characters": "graph,"
					},
					"BgAAANwDAAAAAAAA3QMAAAAAAAAAAAAA3QMAAAAAAADeAwAAAAAAAAAAAADeAwAAAAAAAN8DAAAAAAAAAAAAAN8DAAAAAAAA4AMAAAAAAAAAAAAA4AMAAAAAAADhAwAAAAAAAAAAAADhAwAAAAAAAOIDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANwDAAAAAAAA3AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1922,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAOIDAAAAAAAA4wMAAAAAAAAAAAAA4wMAAAAAAADkAwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIDAAAAAAAA4gMAAAAAAAAAAAAAAADwvw"
				],
				[
					1924,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAVAwAAAAAAABUDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDE2CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Mob3B0aW9uLmZvbnQpCgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgdGV4dF93aWR0aCA9IGZtLmhvcml6b250YWxBZHZhbmNlKHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKICAgICAgICByZXR1cm4gUVNpemVGKAogICAgICAgICAgICBwYWRkaW5nICsgdGV4dF93aWR0aCArIHBhZGRpbmcsIHBhZGRpbmcgKyBmbS5hc2NlbnQoKSArIHBhZGRpbmcKICAgICAgICApCgogICAgQG92ZXJyaWRlCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gMTYKICAgICAgICAjIGRyYXcgb3V0bGluZQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KG9wdGlvbi5yZWN0LCA0LCA0KQoKICAgICAgICAjIGRyYXcgaGVhZGVyIHRleHQKICAgICAgICBmbSA9IG9wdGlvbi5mb250TWV0cmljcwogICAgICAgIHkgPSBvcHRpb24ucmVjdC5oZWlnaHQoKSAtIHBhZGRpbmcKCiAgICAgICAgIyBkcmF3IG5vZGUgdGV4dAogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQDAAAAAAAA5AMAAAAAAAAAAAAAAADwvw"
				],
				[
					1928,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAEkDAAAAAAAASgMAAAAAAAAAAAAASgMAAAAAAABKAwAAAAAAAAIAAAAxNg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsDAAAAAAAASQMAAAAAAAAAAAAAAADwvw"
				],
				[
					1931,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AgAAAAkFAAAAAAAACgUAAAAAAAAAAAAACgUAAAAAAAAKBQAAAAAAAAIAAAAxNg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsFAAAAAAAACQUAAAAAAAAAAAAAAADwvw"
				],
				[
					1933,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAUgwAAAAAAABSDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKCiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIikKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHBhaW50ZXIuZHJhd1RleHQocGFkZGluZywgeSwgc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQoKICAgICAgICAjIHBhaW50ZXIuZHJhd0xpbmUoMCwgeSwgb3B0aW9uLnJlY3Qud2lkdGgoKSwgeSkgIyBkcmF3IGJhc2VsaW5lCgoKY2xhc3MgRm5HcmFwaFZpZXcoR3JhcGhWaWV3KToKICAgIGRlZiBfX2luaXRfXygKICAgICAgICBzZWxmLCBmdW5jdGlvbnM6IExpc3RbQ2FsbGFibGVdLCBwYXJlbnQ6IFFXaWRnZXQgfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5fZGVsZWdhdGUgPSBGbkdyYXBoRGVsZWdhdGUoKQogICAgICAgIHNlbGYuZnVuY3Rpb25zID0gZnVuY3Rpb25zCgogICAgZGVmIG1vdXNlRG91YmxlQ2xpY2tFdmVudChzZWxmLCBldmVudDogUU1vdXNlRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgLi4uCgogICAgZGVmIGNvbnRleHRNZW51RXZlbnQoc2VsZiwgZXZlbnQ6IFFDb250ZXh0TWVudUV2ZW50KToKICAgICAgICB2aWV3cG9zID0gc2VsZi5tYXBGcm9tR2xvYmFsKGV2ZW50Lmdsb2JhbFBvcygpKQogICAgICAgIHNjZW5lcG9zID0gc2VsZi5tYXBUb1NjZW5lKHZpZXdwb3MpCgogICAgICAgIGRlZiBhZGRfbm9kZShmbjogQ2FsbGFibGUpOgogICAgICAgICAgICBpZiBncmFwaG1vZGVsIDo9IHNlbGYubW9kZWwoKToKICAgICAgICAgICAgICAgIHVuaXF1ZV9ub2RlX25hbWUgPSBtYWtlX3VuaXF1ZV9uYW1lKAogICAgICAgICAgICAgICAgICAgIGZuLl9fbmFtZV9fLCBbbiBmb3IgbiBpbiBncmFwaG1vZGVsLm5vZGVzKCldCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBncmFwaG1vZGVsLmFkZE5vZGUodW5pcXVlX25vZGVfbmFtZSwgZm49Zm4pCgogICAgICAgIGdyYXBobW9kZWwgPSBzZWxmLm1vZGVsKCkKICAgICAgICBpZiBncmFwaG1vZGVsOgogICAgICAgICAgICBhZGRfbWVudTogUU1lbnUgPSBRTWVudSgiYWRkIikKCiAgICAgICAgICAgIGZvciBmbiBpbiBzZWxmLmZ1bmN0aW9uczoKICAgICAgICAgICAgICAgIGFjdGlvbiA9IFFBY3Rpb24oc2VsZikKCiAgICAgICAgICAgICAgICBhY3Rpb24uc2V0VGV4dChmbi5fX25hbWVfXykKICAgICAgICAgICAgICAgIGFjdGlvbi50cmlnZ2VyZWQuY29ubmVjdChsYW1iZGEgY2hlY2tlZCwgZm49Zm46IGFkZF9ub2RlKGZuKSkKICAgICAgICAgICAgICAgIGFkZF9tZW51LmFkZEFjdGlvbihhY3Rpb24pCgogICAgICAgICAgICBhZGRfbWVudS5leGVjKGV2ZW50Lmdsb2JhbFBvcygpKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBhcHAgPSBRQXBwbGljYXRpb24oKQogICAgZ3JhcGhfbW9kZWwgPSBHcmFwaE1vZGVsKCkKICAgIGZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aAoKICAgIGN3ZCA9IFBhdGguY3dkKCkKICAgIGN3ZC5nbG9iKCIqIikKCiAgICBncmFwaF92aWV3ID0gRm5HcmFwaFZpZXcoCiAgICAgICAgW2xlbiwgcHJpbnQsIFBhdGguY3dkLCBQYXRoLml0ZXJkaXIsIFBhdGgucmVhZF90ZXh0XQogICAgKQogICAgZ3JhcGhfdmlldy5zZXRNb2RlbChncmFwaF9tb2RlbCkKICAgIGdyYXBoX3ZpZXcuc2hvdygpCiAgICBhcHAuZXhlYygpCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAoFAAAAAAAACgUAAAAAAAAAAAAAAADwvw"
				],
				[
					1945,
					2,
					"left_delete",
					null,
					"AgAAANYFAAAAAAAA1gUAAAAAAAArAAAAICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKdUFAAAAAAAA1QUAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEGAAAAAAAA1gUAAAAAAAAAAAAAAADwvw"
				],
				[
					1954,
					2,
					"left_delete",
					null,
					"AgAAAHIDAAAAAAAAcgMAAAAAAAAsAAAACiAgICAgICAgZm4gPSBncmFwaC5nZXROb2RlUHJvcGVydHkobiwgImZuIilxAwAAAAAAAHEDAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4DAAAAAAAAcgMAAAAAAAAAAAAAAADwvw"
				],
				[
					1958,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEDAAAAAAAAcQMAAAAAAAAAAAAAAADwvw"
				],
				[
					1964,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgFAAAAAAAAKAUAAAAAAAAAAAAAAADwvw"
				],
				[
					1995,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUCAAAAAAAAlQIAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAA+QsAAAAAAAD5CwAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgTm9kZURlbGVnYXRlCgpmcm9tIHB5bGl2ZS51dGlscy51bmlxdWUgaW1wb3J0IG1ha2VfdW5pcXVlX25hbWUKCmZyb20gZnVuY3Rpb25fd2lkZ2V0IGltcG9ydCBGdW5jdGlvbk5vZGVXaWRnZXQKCgpjbGFzcyBGbkdyYXBoRGVsZWdhdGUoTm9kZURlbGVnYXRlKToKICAgIGRlZiBfaGVhZGVyX3RleHQoc2VsZiwgZ3JhcGg6IEdyYXBoTW9kZWwsIG46IEhhc2hhYmxlKToKICAgICAgICBmbiA9IGdyYXBoLmdldE5vZGVQcm9wZXJ0eShuLCAiZm4iKQogICAgICAgIHJldHVybiBmIntufS17Zm4uX19uYW1lX199IgoKICAgIEBvdmVycmlkZQogICAgZGVmIHNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLAogICAgICAgIHBhaW50ZXI6IFFQYWludGVyLAogICAgICAgIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sCiAgICAgICAgZ3JhcGg6IEdyYXBoTW9kZWwsCiAgICAgICAgbjogSGFzaGFibGUsCiAgICApOgogICAgICAgIHBhZGRpbmcgPSA4CiAgICAgICAgIyBkcmF3IG91dGxpbmUKICAgICAgICBwYWludGVyLmRyYXdSb3VuZGVkUmVjdChvcHRpb24ucmVjdCwgNCwgNCkKCiAgICAgICAgIyBkcmF3IGhlYWRlciB0ZXh0CiAgICAgICAgZm0gPSBvcHRpb24uZm9udE1ldHJpY3MKICAgICAgICB5ID0gb3B0aW9uLnJlY3QuaGVpZ2h0KCkgLSBwYWRkaW5nCgogICAgICAgICMgZHJhdyBub2RlIHRleHQKICAgICAgICBwYWludGVyLmRyYXdUZXh0KHBhZGRpbmcsIHksIHNlbGYuX2hlYWRlcl90ZXh0KGdyYXBoLCBuKSkKCiAgICAgICAgIyBwYWludGVyLmRyYXdMaW5lKDAsIHksIG9wdGlvbi5yZWN0LndpZHRoKCksIHkpICMgZHJhdyBiYXNlbGluZQoKCmNsYXNzIEZuR3JhcGhWaWV3KEdyYXBoVmlldyk6CiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgZnVuY3Rpb25zOiBMaXN0W0NhbGxhYmxlXSwgcGFyZW50OiBRV2lkZ2V0IHwgTm9uZSA9IE5vbmUKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2RlbGVnYXRlID0gRm5HcmFwaERlbGVnYXRlKCkKICAgICAgICBzZWxmLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucwoKICAgIGRlZiBtb3VzZURvdWJsZUNsaWNrRXZlbnQoc2VsZiwgZXZlbnQ6IFFNb3VzZUV2ZW50KSAtPiBOb25lOgogICAgICAgIC4uLgoKICAgIGRlZiBjb250ZXh0TWVudUV2ZW50KHNlbGYsIGV2ZW50OiBRQ29udGV4dE1lbnVFdmVudCk6CiAgICAgICAgdmlld3BvcyA9IHNlbGYubWFwRnJvbUdsb2JhbChldmVudC5nbG9iYWxQb3MoKSkKICAgICAgICBzY2VuZXBvcyA9IHNlbGYubWFwVG9TY2VuZSh2aWV3cG9zKQoKICAgICAgICBkZWYgYWRkX25vZGUoZm46IENhbGxhYmxlKToKICAgICAgICAgICAgaWYgZ3JhcGhtb2RlbCA6PSBzZWxmLm1vZGVsKCk6CiAgICAgICAgICAgICAgICB1bmlxdWVfbm9kZV9uYW1lID0gbWFrZV91bmlxdWVfbmFtZSgKICAgICAgICAgICAgICAgICAgICBmbi5fX25hbWVfXywgW24gZm9yIG4gaW4gZ3JhcGhtb2RlbC5ub2RlcygpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZ3JhcGhtb2RlbC5hZGROb2RlKHVuaXF1ZV9ub2RlX25hbWUsIGZuPWZuKQoKICAgICAgICBncmFwaG1vZGVsID0gc2VsZi5tb2RlbCgpCiAgICAgICAgaWYgZ3JhcGhtb2RlbDoKICAgICAgICAgICAgYWRkX21lbnU6IFFNZW51ID0gUU1lbnUoImFkZCIpCgogICAgICAgICAgICBmb3IgZm4gaW4gc2VsZi5mdW5jdGlvbnM6CiAgICAgICAgICAgICAgICBhY3Rpb24gPSBRQWN0aW9uKHNlbGYpCgogICAgICAgICAgICAgICAgYWN0aW9uLnNldFRleHQoZm4uX19uYW1lX18pCiAgICAgICAgICAgICAgICBhY3Rpb24udHJpZ2dlcmVkLmNvbm5lY3QobGFtYmRhIGNoZWNrZWQsIGZuPWZuOiBhZGRfbm9kZShmbikpCiAgICAgICAgICAgICAgICBhZGRfbWVudS5hZGRBY3Rpb24oYWN0aW9uKQoKICAgICAgICAgICAgYWRkX21lbnUuZXhlYyhldmVudC5nbG9iYWxQb3MoKSkKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgYXBwID0gUUFwcGxpY2F0aW9uKCkKICAgIGdyYXBoX21vZGVsID0gR3JhcGhNb2RlbCgpCiAgICBmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKCiAgICBjd2QgPSBQYXRoLmN3ZCgpCiAgICBjd2QuZ2xvYigiKiIpCgogICAgZ3JhcGhfdmlldyA9IEZuR3JhcGhWaWV3KAogICAgICAgIFtsZW4sIHByaW50LCBQYXRoLmN3ZCwgUGF0aC5pdGVyZGlyLCBQYXRoLnJlYWRfdGV4dF0KICAgICkKICAgIGdyYXBoX3ZpZXcuc2V0TW9kZWwoZ3JhcGhfbW9kZWwpCiAgICBncmFwaF92aWV3LnNob3coKQogICAgYXBwLmV4ZWMoKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1BgAAAAAAADUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BgAAAJgBAAAAAAAAmQEAAAAAAAAAAAAAmQEAAAAAAACZAQAAAAAAAAQAAABOb2RlmQEAAAAAAACaAQAAAAAAAAAAAACaAQAAAAAAAJsBAAAAAAAAAAAAAJsBAAAAAAAAnAEAAAAAAAAAAAAAnAEAAAAAAACdAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAQAAAAAAAJgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "Graph"
					},
					"BgAAACACAAAAAAAAIQIAAAAAAAAAAAAAIQIAAAAAAAAhAgAAAAAAAAQAAABOb2RlIQIAAAAAAAAiAgAAAAAAAAAAAAAiAgAAAAAAACMCAAAAAAAAAAAAACMCAAAAAAAAJAIAAAAAAAAAAAAAJAIAAAAAAAAlAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkAgAAAAAAACACAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "node"
					},
					"BAAAANMCAAAAAAAA1AIAAAAAAAAAAAAA1AIAAAAAAADVAgAAAAAAAAAAAADVAgAAAAAAANYCAAAAAAAAAAAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAgAAAAAAANMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"right_delete",
					null,
					"AQAAANcCAAAAAAAA1wIAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAgAAAAAAANcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAANcCAAAAAAAA2AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAgAAAAAAANcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "Node"
					},
					"BAAAAEgEAAAAAAAASQQAAAAAAAAAAAAASQQAAAAAAABKBAAAAAAAAAAAAABKBAAAAAAAAEsEAAAAAAAAAAAAAEsEAAAAAAAATAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIBAAAAAAAAEgEAAAAAAAAAAAAAADAU0A"
				],
				[
					28,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAAwwAAAAAAAADDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgR3JhcGhEZWxlZ2F0ZQoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIF9oZWFkZXJfdGV4dChzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbi5fX25hbWVfX30iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgbm9kZVNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gOAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMBAAAAAAAAEwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAAwwAAAAAAAADDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgR3JhcGhEZWxlZ2F0ZQoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIF9oZWFkZXJfdGV4dChzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbi5fX25hbWVfX30iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgbm9kZVNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gOAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJBAAAAAAAAAkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAAwwAAAAAAAADDAAAZnJvbSBhc3QgaW1wb3J0IENhbGwKZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBncmFwaF9tb2RlbCBpbXBvcnQgR3JhcGhNb2RlbApmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLk5ldHJvd2tYR3JhcGhFZGl0b3IubGlua19ncmFwaGljc19pdGVtcyBpbXBvcnQgKAogICAgbWFrZUxpbmVCZXR3ZWVuU2hhcGVzLAopCmZyb20gcHlsaXZlLlF0R3JhcGhFZGl0b3IuTmV0cm93a1hHcmFwaEVkaXRvci5xZ3JhcGhpY3NfYXJyb3dfaXRlbSBpbXBvcnQgKAogICAgUUdyYXBoaWNzQXJyb3dJdGVtLAopCgpmcm9tIGdyYXBoX3ZpZXcgaW1wb3J0IEdyYXBoVmlldywgR3JhcGhEZWxlZ2F0ZQoKZnJvbSBweWxpdmUudXRpbHMudW5pcXVlIGltcG9ydCBtYWtlX3VuaXF1ZV9uYW1lCgpmcm9tIGZ1bmN0aW9uX3dpZGdldCBpbXBvcnQgRnVuY3Rpb25Ob2RlV2lkZ2V0CgoKY2xhc3MgRm5HcmFwaERlbGVnYXRlKEdyYXBoRGVsZWdhdGUpOgogICAgZGVmIF9oZWFkZXJfdGV4dChzZWxmLCBncmFwaDogR3JhcGhNb2RlbCwgbjogSGFzaGFibGUpOgogICAgICAgIGZuID0gZ3JhcGguZ2V0Tm9kZVByb3BlcnR5KG4sICJmbiIpCiAgICAgICAgcmV0dXJuIGYie259LXtmbi5fX25hbWVfX30iCgogICAgQG92ZXJyaWRlCiAgICBkZWYgbm9kZVNpemVIaW50KAogICAgICAgIHNlbGYsIG9wdGlvbjogUVN0eWxlT3B0aW9uVmlld0l0ZW0sIGdyYXBoOiBHcmFwaE1vZGVsLCBuOiBIYXNoYWJsZQogICAgKSAtPiBRU2l6ZUY6CiAgICAgICAgcGFkZGluZyA9IDgKICAgICAgICBmbSA9IFFGb250TWV0cmljcyhvcHRpb24uZm9udCkKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5faGVhZGVyX3RleHQoZ3JhcGgsIG4pKQogICAgICAgIHJldHVybiBRU2l6ZUYoCiAgICAgICAgICAgIHBhZGRpbmcgKyB0ZXh0X3dpZHRoICsgcGFkZGluZywgcGFkZGluZyArIGZtLmFzY2VudCgpICsgcGFkZGluZwogICAgICAgICkKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBwYWludE5vZGUoCiAgICAgICAgc2VsZiwKICAgICAgICBwYWludGVyOiBRUGFpbnRlciwKICAgICAgICBvcHRpb246IFFTdHlsZU9wdGlvblZpZXdJdGVtLAogICAgICAgIGdyYXBoOiBHcmFwaE1vZGVsLAogICAgICAgIG46IEhhc2hhYmxlLAogICAgKToKICAgICAgICBwYWRkaW5nID0gOAogICAgICAgICMgZHJhdyBvdXRsaW5lCiAgICAgICAgcGFpbnRlci5kcmF3Um91bmRlZFJlY3Qob3B0aW9uLnJlY3QsIDQsIDQpCgogICAgICAgICMgZHJhdyBoZWFkZXIgdGV4dAogICAgICAgIGZtID0gb3B0aW9uLmZvbnRNZXRyaWNzCiAgICAgICAgeSA9IG9wdGlvbi5yZWN0LmhlaWdodCgpIC0gcGFkZGluZwoKICAgICAgICAjIGRyYXcgbm9kZSB0ZXh0CiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChwYWRkaW5nLCB5LCBzZWxmLl9oZWFkZXJfdGV4dChncmFwaCwgbikpCgogICAgICAgICMgcGFpbnRlci5kcmF3TGluZSgwLCB5LCBvcHRpb24ucmVjdC53aWR0aCgpLCB5KSAjIGRyYXcgYmFzZWxpbmUKCgpjbGFzcyBGbkdyYXBoVmlldyhHcmFwaFZpZXcpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsIGZ1bmN0aW9uczogTGlzdFtDYWxsYWJsZV0sIHBhcmVudDogUVdpZGdldCB8IE5vbmUgPSBOb25lCiAgICApOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLl9kZWxlZ2F0ZSA9IEZuR3JhcGhEZWxlZ2F0ZSgpCiAgICAgICAgc2VsZi5mdW5jdGlvbnMgPSBmdW5jdGlvbnMKCiAgICBkZWYgbW91c2VEb3VibGVDbGlja0V2ZW50KHNlbGYsIGV2ZW50OiBRTW91c2VFdmVudCkgLT4gTm9uZToKICAgICAgICAuLi4KCiAgICBkZWYgY29udGV4dE1lbnVFdmVudChzZWxmLCBldmVudDogUUNvbnRleHRNZW51RXZlbnQpOgogICAgICAgIHZpZXdwb3MgPSBzZWxmLm1hcEZyb21HbG9iYWwoZXZlbnQuZ2xvYmFsUG9zKCkpCiAgICAgICAgc2NlbmVwb3MgPSBzZWxmLm1hcFRvU2NlbmUodmlld3BvcykKCiAgICAgICAgZGVmIGFkZF9ub2RlKGZuOiBDYWxsYWJsZSk6CiAgICAgICAgICAgIGlmIGdyYXBobW9kZWwgOj0gc2VsZi5tb2RlbCgpOgogICAgICAgICAgICAgICAgdW5pcXVlX25vZGVfbmFtZSA9IG1ha2VfdW5pcXVlX25hbWUoCiAgICAgICAgICAgICAgICAgICAgZm4uX19uYW1lX18sIFtuIGZvciBuIGluIGdyYXBobW9kZWwubm9kZXMoKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIGdyYXBobW9kZWwuYWRkTm9kZSh1bmlxdWVfbm9kZV9uYW1lLCBmbj1mbikKCiAgICAgICAgZ3JhcGhtb2RlbCA9IHNlbGYubW9kZWwoKQogICAgICAgIGlmIGdyYXBobW9kZWw6CiAgICAgICAgICAgIGFkZF9tZW51OiBRTWVudSA9IFFNZW51KCJhZGQiKQoKICAgICAgICAgICAgZm9yIGZuIGluIHNlbGYuZnVuY3Rpb25zOgogICAgICAgICAgICAgICAgYWN0aW9uID0gUUFjdGlvbihzZWxmKQoKICAgICAgICAgICAgICAgIGFjdGlvbi5zZXRUZXh0KGZuLl9fbmFtZV9fKQogICAgICAgICAgICAgICAgYWN0aW9uLnRyaWdnZXJlZC5jb25uZWN0KGxhbWJkYSBjaGVja2VkLCBmbj1mbjogYWRkX25vZGUoZm4pKQogICAgICAgICAgICAgICAgYWRkX21lbnUuYWRkQWN0aW9uKGFjdGlvbikKCiAgICAgICAgICAgIGFkZF9tZW51LmV4ZWMoZXZlbnQuZ2xvYmFsUG9zKCkpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGFwcCA9IFFBcHBsaWNhdGlvbigpCiAgICBncmFwaF9tb2RlbCA9IEdyYXBoTW9kZWwoKQogICAgZnJvbSBwYXRobGliIGltcG9ydCBQYXRoCgogICAgY3dkID0gUGF0aC5jd2QoKQogICAgY3dkLmdsb2IoIioiKQoKICAgIGdyYXBoX3ZpZXcgPSBGbkdyYXBoVmlldygKICAgICAgICBbbGVuLCBwcmludCwgUGF0aC5jd2QsIFBhdGguaXRlcmRpciwgUGF0aC5yZWFkX3RleHRdCiAgICApCiAgICBncmFwaF92aWV3LnNldE1vZGVsKGdyYXBoX21vZGVsKQogICAgZ3JhcGhfdmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAACQIAAAAAAAAJAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pylive/examples/python_function_graph/function_widget.py",
			"settings":
			{
				"buffer_size": 12045,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pyrigth",
				"Preferences: LSP-pyright Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"terminu",
				"Terminus: Close All"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"REMOE",
				"Package Control: Remove Package"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"View Package File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/src/pylive",
		"/C/dev/src/pylive/blog",
		"/C/dev/src/pylive/pylive",
		"/C/dev/src/pylive/pylive/examples",
		"/C/dev/src/pylive/pylive/examples/python_function_graph",
		"/C/dev/src/pylive/pylive/utils"
	],
	"file_history":
	[
		"/C/dev/src/pylive/blog/2024_12_18-houdini-meats-python.md",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_model.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/function_widget.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/main.py",
		"/C/dev/src/pylive/pylive/QtTerminal/logwindow.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/abstract_graph_deletage.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/python_function_graph/function_graph_view.py",
		"/C/dev/src/pylive/expreiments/inspect_available_functions.py",
		"/C/dev/src/pylive/expreiments/inspect_functions_experiment.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/nx_graph_model.py",
		"/P/!!INSTALL!!/____Install 2024/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/utils/geo.py",
		"/C/Users/and/Desktop/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/abstract_graph_delegate.py",
		"/C/dev/src/pylive/expreiments/ListItemDelegate-example.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_node_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/ConnectableGraphicsItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/edge_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/QGraphicsArrowItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/Connectable.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphmodel_databased.py",
		"/C/dev/src/pylive/expreiments/built-a-dependency-graph-of-a-python-codebase.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_columnbased.py",
		"/C/dev/src/pylive/pylive/examples/livescript.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_databased.py",
		"/C/dev/src/pylive/docs/2024_12_06-hot-reloading-a-python-script.md",
		"/C/dev/src/pylive/pyproject.toml",
		"/C/dev/src/pylive/pylive/utils/unique.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/cell_support.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/line_number_area.py",
		"/C/dev/src/pylive/tests/test_cells.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_edit.py",
		"/C/dev/src/pylive/tests/test_function_signatures.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/display.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_skeleton.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/IPython/utils/terminal.py",
		"/C/dev/src/pylive/pylive/QtTerminal/terminal_with_exec.py",
		"/C/dev/src/pylive/pylive/render_engine/render_layers.py",
		"/C/dev/src/pylive/script_examples_to_run_live/spherical_transform.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/script_cursor.py",
		"/C/dev/src/pylive/pylive/__main__.py",
		"/C/dev/src/pylive/TODOs.md",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_skeleton.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_exec.py",
		"/C/dev/src/pylive/script_examples_to_run_live/glcanvas_widget_with_moderngl.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_number_editor.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/file_link.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/invisibles_highlighter.py",
		"/C/dev/src/pylive/script_examples_to_run_live/livescript_demonstration.py",
		"/C/dev/src/pylive/script_examples_to_run_live/lorem_ipsum.md",
		"/C/dev/src/pylive/expreiments/file_textdocument_link.py",
		"/C/dev/src/pylive/pylive/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_qtconsole.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/asttokens/line_numbers.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/old_architecture/script_editor_simple.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/jedi_completer.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_exec.py",
		"/C/dev/src/pylive/expreiments/glcanvas.py",
		"/C/dev/src/pylive/pylive/render_engine/regl/regl.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_skeleton.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/glcanvas.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLWindow_with_qopengl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget_with_request_animation.py",
		"/C/dev/src/pylive/pylive/render_engine/utils/__init__.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget-with_painting_signal.py",
		"/C/dev/src/pylive/pylive/render_engine/glwidget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWindow.py",
		"/C/Users/andris/AppData/Local/Temp/2ea7c807-5541-48c5-9e23-9d4d4826a0ed_Microsoft Office 2021 Pro Plus.zip.0ed/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/Users/andris/Downloads/Microsoft Office 2021 Pro Plus (365 ) + Patch/Microsoft Office 2021 Pro Plus/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/dev/src/pylive/expreiments/opengl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pygame_moderngl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/opengl_outside_window.py",
		"/C/dev/src/pylive/pylive/render_engine/orbit_control.py",
		"/C/dev/src/pylive/pylive/render_engine/lookAt_standalone.vert",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/linter_widget.py",
		"/C/dev/src/pylive/pylive/logwindow.py",
		"/C/dev/src/pylive/pylive/shaders/billboard.vert",
		"/C/dev/src/pylive/pylive/render_engine/resource_manager.py",
		"/C/dev/src/pylive/pylive/render_engine/examples/1 render layers.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/unified_titlebar.py",
		"/C/dev/src/pylive/pylive/render_engine/camera.py",
		"/C/dev/src/pylive/pylive/shaders/default_vertex_shader.vert",
		"/C/dev/src/pylive/pylive/shaders/flat_fragment_shader.frag",
		"/C/dev/src/pylive/gloo/render_layers.py",
		"/C/dev/src/pylive/gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/orbit_control.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_window_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/rendering_with_qt.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/qpygletwidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_1.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget (Not Working).py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_2.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_canvas_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pyglet_on_QWidget.py",
		"/C/dev/src/pylive/expreiments/ipython/ipython_kernel.py",
		"/C/dev/src/pylive/expreiments/ipython/qtconsole_inprocess1.py",
		"/C/dev/src/pylive/expreiments/ipython/simple_console.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_ipython.py",
		"/C/dev/src/pylive/expreiments/simple_console.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_gpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notbook_with_chatgpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/live_framework.py",
		"/C/dev/src/pylive/expreiments/ipython_kernel.py",
		"/C/dev/src/pylive/pylive/examples/livenotebook.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtGui.pyi",
		"/C/dev/src/pylive/expreiments/visualize_function_dependencies.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter_OLD.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_completer.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/WhitespaceHighlighter.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"QGraphicsTextItem",
			"PinWidget",
			"handleNodesProp",
			"handlenodesProp",
			"nodedele",
			"n = ",
			"NodeWidget",
			"print",
			"geometry",
			"createNodeW",
			"delegate",
			"initiate",
			"contextMenu",
			"eventFilter",
			"intersectLineWithRectangle",
			"intersectLineWithPath",
			"ellipse",
			"intersectRay",
			"rect_max[1]",
			"rect_min[1]",
			"rect_max[0]",
			"rect_min[0]",
			"print",
			"intersect",
			"intersectLineWithPath",
			"intersectLine",
			"intersect",
			"intersectRayWithPath",
			"intersectLine",
			"print",
			".target",
			".source",
			"def paint(",
			"def paint",
			"Signal",
			"scenePositionChanged",
			"scenePositionChan ged",
			"ItemScenePositionHasChanged",
			"print",
			"LiveScript",
			"cells",
			"cell",
			"insertbar",
			"trimesh",
			"self.cell",
			"setEditor",
			"cell",
			"status",
			"self._wi",
			"saveFile",
			"def setup",
			"def setu[",
			"setup",
			"self.document",
			"updateWindowTitle",
			"modified",
			"def open",
			"setPreview",
			"pylive.display",
			"get_line_at_offset",
			"updateLine",
			"LineNumberArea",
			"line number",
			"setAttribute(",
			"setAttribute",
			"get_context",
			"QOpenGLWindow",
			"import QOpenGLWindow",
			"Literal",
			"literal",
			"Searching",
			"Lityeral",
			"dtype",
			"\t\t'",
			"internal_format",
			"dtype",
			"mode",
			"varyings_capture_mode",
			"internal_format",
			"dtype",
			"internal_format",
			"dtype",
			"internal_format",
			"varyings_capture_mode",
			"self",
			"for",
			"framebuffers",
			"placeholder",
			"find",
			"fin",
			"clearNo",
			"showException",
			"evalu",
			"completer",
			"RopeC",
			"lineNumberArea",
			"completer",
			"print",
			"new file",
			"setWindowTitle",
			"modifie",
			"setPreviewCollapse",
			"contentChang",
			"setupMenui",
			"NodeW",
			"self.palette",
			"threshold",
			"cancel",
			"interactive_edge_end_pin",
			"interactive_edge_start_pin",
			"interactive_edge_end_pin",
			"interactive_edge_moving_pin",
			"interactive_edge_start_pin",
			"self._pare",
			".parent_node",
			"_edges",
			"GrabThreshold",
			"center",
			"HeaderWidget",
			"palette",
			"updatePosition",
			"pinAt",
			"onNodeEditorChange",
			"onnodePropertyChange",
			"updatePin",
			"EdgeItem",
			"InletItem",
			"OutletItem"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bottom",
			"top",
			"right",
			"left",
			"self._document",
			"interactive_edge_moving_pin",
			"interactive_edge_fixed_pin",
			"interactive_edge_moving_pin",
			"EdgeGraphicsItem",
			"InletGraphicsItem",
			"OutletGraphicsItem",
			"PinGraphicsItem",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"OutletRef",
			"InletRef",
			"EdgeRef",
			"NodeRef",
			"EdgeDataColumn",
			"OutletDataColumn",
			"InletDataColumn",
			"NodeDataColumn",
			"EdgeView",
			"InletView",
			"OutletView",
			"self._edgeTable",
			"self._outletTable",
			"self._inletTable",
			"self._nodeTable"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pylive/examples/python_function_graph/graph_view.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10575,
						"regions":
						{
						},
						"selection":
						[
							[
								8987,
								8987
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3920.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1665,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										199,
										216
									],
									[
										414,
										431
									],
									[
										614,
										631
									],
									[
										775,
										792
									],
									[
										1095,
										1112
									],
									[
										1315,
										1332
									],
									[
										1532,
										1549
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								497,
								497
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"line_numbers": false,
							"lsp_uri": "buffer:178",
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "pylive/QtGraphEditor/dag_graph_graphics_scene.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31507,
						"regions":
						{
						},
						"selection":
						[
							[
								3223,
								3223
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pylive/utils/unique.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 658,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/utils/unique.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 4,
					"file": "pylive/examples/python_function_graph/main.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3075,
						"regions":
						{
						},
						"selection":
						[
							[
								520,
								520
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/main.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "pylive/examples/python_function_graph/function_widget.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12045,
						"regions":
						{
						},
						"selection":
						[
							[
								6589,
								6464
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/examples/python_function_graph/function_widget.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2686.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.531956967096,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 412.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 157.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Python: Run File (CrossPlatform)",
	"project": "pylive.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"geo",
				"pylive\\utils\\geo.py"
			],
			[
				"nx",
				"pylive\\QtGraphEditor\\NetrowkXGraphditor\\NXGraphView.py"
			],
			[
				"unique",
				"pylive\\pylive\\utils\\unique.py"
			],
			[
				"linenu",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"test",
				"pylive\\tests\\test_cells.py"
			],
			[
				"cell_s",
				"pylive\\pylive\\QtScriptEditor\\cell_support.py"
			],
			[
				"linen",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"lineare",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"terminal",
				"pylive\\pylive\\QtTerminal\\terminal_with_exec.py"
			],
			[
				"termina",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\terminal.py"
			],
			[
				"scripte",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"script",
				"pylive\\pylive\\QtScriptEditor\\components\\script_cursor.py"
			],
			[
				"pyg",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"numbere",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"highlight",
				"pylive\\pylive\\QtScriptEditor\\components\\invisibles_highlighter.py"
			],
			[
				"glca",
				"pylive\\script_examples_to_run_live\\glcanvas_widget_with_moderngl.py"
			],
			[
				"filelink",
				"pylive\\expreiments\\file_textdocument_link.py"
			],
			[
				"displ",
				"pylive\\pylive\\QtLiveApp\\display.py"
			],
			[
				"line",
				"pylive\\.venv\\Lib\\site-packages\\asttokens\\line_numbers.py"
			],
			[
				"scri",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"jedi",
				"pylive\\pylive\\QtScriptEditor\\components\\jedi_completer.py"
			],
			[
				"with_exec",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"framew",
				"pylive\\pylive\\QtLiveFramework\\live_framework_skeleton.py"
			],
			[
				"moderngl",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"modenr",
				"pylive\\expreiments\\3d_rendering\\pygame_moderngl_boilerplate.py"
			],
			[
				"regl",
				"pylive\\pylive\\render_engine\\regl\\regl.py"
			],
			[
				"logwind",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"resou",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"render",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"main",
				"pylive\\pylive\\render_engine\\regl\\main.py"
			],
			[
				"resource",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"modern",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"unifie",
				"pylive\\expreiments\\unified_titlebar.py"
			],
			[
				"camer",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"linter",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"Script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"camera",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"orbit",
				"pylive\\pylive\\render_engine\\orbit_control.py"
			],
			[
				"renderl",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"live",
				"pylive\\pylive\\examples\\livescript.py"
			],
			[
				"orbitcon",
				"pylive\\expreiments\\3d_rendering\\orbit_control.py"
			],
			[
				"number editor",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"whitespace",
				"pylive\\pylive\\QtScriptEditor\\components\\WhitespaceHighlighter.py"
			],
			[
				"pygme",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"highlighte",
				"pylive\\pylive\\QtScriptEditor\\highlighters.py"
			],
			[
				"textedito",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_completer.py"
			],
			[
				"keywo",
				"pylive\\pylive\\QtScriptEditor\\components\\KeywordsCompleter.py"
			],
			[
				"scrip",
				"pylive\\pylive\\QtScriptEditor\\ScriptEdit.py"
			],
			[
				"logw",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"capture",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\capture.py"
			],
			[
				"preview",
				"pylive\\pylive\\preview_widget.py"
			],
			[
				"pan",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"panand",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"visu",
				"pylive\\pylive\\examples\\visual_coding.py"
			],
			[
				"log",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"livescript",
				"pylive\\pylive\\LiveScript.py"
			],
			[
				"mind",
				"pylive\\pylive\\QtGraphEditor\\mindmap_example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 59.3333333333,
		"last_filter": "circle",
		"selected_items":
		[
			[
				"circle",
				"CircleWidget"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 307.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
