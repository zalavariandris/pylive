{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"QPainter",
				"QPainterPath"
			],
			[
				"item",
				"_item_to_widget_map"
			],
			[
				"QSize",
				"QSizeF"
			],
			[
				"set",
				"setColor"
			],
			[
				"setP",
				"setP2"
			],
			[
				"len",
				"length"
			],
			[
				"mapFrom",
				"mapFromItem"
			],
			[
				"_boun",
				"_boundingrect"
			],
			[
				"QRec",
				"QRectF"
			],
			[
				"rect",
				"rect_shape"
			],
			[
				"update",
				"updatePosition"
			],
			[
				"addP",
				"addPolygon"
			],
			[
				"poly",
				"polygon"
			],
			[
				"QPol",
				"QPolygonF"
			],
			[
				"map",
				"mapToScene"
			],
			[
				"source",
				"source_offset"
			],
			[
				"tar",
				"target_offset"
			],
			[
				"str",
				"createStroke"
			],
			[
				"shape_",
				"shape_center"
			],
			[
				"Itemsend",
				"ItemSendsScenePositionChanges"
			],
			[
				"fla",
				"GraphicsItemFlag"
			],
			[
				"scenePos",
				"scenePositionChanged"
			],
			[
				"sceneP",
				"scenePositionChanged"
			],
			[
				"isin",
				"isinstance"
			],
			[
				"setS",
				"setSource"
			],
			[
				"Qpoint",
				"QPointF"
			],
			[
				"QPainterP",
				"QPainterPathStroker"
			],
			[
				"sc",
				"scene"
			],
			[
				"Qpainter",
				"QPainterPath"
			],
			[
				"QPoint",
				"QPointF"
			],
			[
				"adjus",
				"adjusted"
			],
			[
				"Graphis",
				"GraphicsItemFlag"
			],
			[
				"group",
				"group_widget"
			],
			[
				"send",
				"ItemSendsScenePositionChanges"
			],
			[
				"Grpahi",
				"GraphicsItemFlag"
			],
			[
				"flag",
				"GraphicsItemFlag"
			],
			[
				"QGrap",
				"QGraphicsItem"
			],
			[
				"graph",
				"graph_scene"
			],
			[
				"handleEdges",
				"handleEdgesAdded"
			],
			[
				"graphmodel",
				"graphmodel_databased"
			],
			[
				"pa",
				"parent"
			],
			[
				"line",
				"lineCount"
			],
			[
				"inser",
				"insertBar"
			],
			[
				"cell",
				"cell_at_line"
			],
			[
				"Code",
				"CodeHasDocstring"
			],
			[
				"assertNo",
				"assertNotEqual"
			],
			[
				"Script",
				"ScriptEdit"
			],
			[
				"end",
				"end_block"
			],
			[
				"begin",
				"begin_rect"
			],
			[
				"find",
				"findBlockByLineNumber"
			],
			[
				"Modi",
				"KeyboardModifier"
			],
			[
				"QKey",
				"QKeyEvent"
			],
			[
				"curr",
				"currentBlockState"
			],
			[
				"current",
				"currentBlockState"
			],
			[
				"curren",
				"currentBlockState"
			],
			[
				"list",
				"listwidget"
			],
			[
				"setCi",
				"setCurrentIndex"
			],
			[
				"file",
				"fileChanged"
			],
			[
				"add",
				"addMenu"
			],
			[
				"QMenu",
				"QMenuBar"
			],
			[
				"parent",
				"parentWidget"
			],
			[
				"QMeu",
				"QMenuBar"
			],
			[
				"QPlainTe",
				"QPlainTextDocumentLayout"
			],
			[
				"ty",
				"typing"
			],
			[
				"LiveA",
				"QtLiveApp"
			],
			[
				"NotIm",
				"NotImplementedError"
			],
			[
				"LiveAppW",
				"LiveAppWithExec"
			],
			[
				"Qt",
				"QtGraphEditor"
			],
			[
				"text",
				"textedit"
			],
			[
				"inter",
				"intersects"
			],
			[
				"con",
				"contentsRect"
			],
			[
				"Upda",
				"UpdateRequest"
			],
			[
				"lineNumberAre",
				"lineNumberAreaWidth"
			],
			[
				"gc",
				"get_context"
			],
			[
				"per",
				"perf_counter_ns"
			],
			[
				"pain",
				"painting"
			],
			[
				"setSwap",
				"setSwapBehavior"
			],
			[
				"setSw",
				"setSwapInterval"
			],
			[
				"call",
				"callback"
			],
			[
				"glEnableVerte",
				"glEnableVertexAttribArray"
			],
			[
				"QOpenGLShader",
				"QOpenGLShaderProgram"
			],
			[
				"GL",
				"GLCanvas"
			],
			[
				"reques",
				"requestUpdate"
			],
			[
				"initi",
				"initializeOpenGLFunctions"
			],
			[
				"reque",
				"requestedFormat"
			],
			[
				"request",
				"requestUpdate"
			],
			[
				"resize",
				"resizeGL"
			],
			[
				"QTo",
				"QtOpenGL"
			],
			[
				"Qop",
				"QtOpenGLWidgets"
			],
			[
				"size",
				"sizeHint"
			],
			[
				"open",
				"opengl_widget"
			],
			[
				"paintE",
				"paintEvent"
			],
			[
				"GL_DEPTH_BU",
				"GL_DEPTH_BUFFER_BIT"
			],
			[
				"Qope",
				"QOpenGLWidget"
			],
			[
				"frame",
				"defaultFramebufferObject"
			],
			[
				"validate",
				"validate_uniforms"
			],
			[
				"ui",
				"uint8"
			],
			[
				"u",
				"uint"
			],
			[
				"Res",
				"result"
			],
			[
				"in",
				"input"
			],
			[
				"ex",
				"exceptionThrown"
			],
			[
				"lint",
				"lintException"
			],
			[
				"proje",
				"projectionMatrix"
			],
			[
				"intern",
				"internal_format"
			],
			[
				"texture_",
				"texture_cube"
			],
			[
				"Tex",
				"Texture3D"
			],
			[
				"texture",
				"texture3ds"
			],
			[
				"vert",
				"vertex_arrays"
			],
			[
				"ver",
				"vertex_array"
			],
			[
				"weak",
				"weakref"
			],
			[
				"bu",
				"buffers"
			],
			[
				"QPain",
				"QPaintEvent"
			],
			[
				"po",
				"getPosition"
			],
			[
				"p",
				"pi"
			],
			[
				"lin",
				"lintException"
			],
			[
				"li",
				"lintException"
			],
			[
				"dis",
				"distance"
			],
			[
				"Tria",
				"TRIANGLES"
			],
			[
				"Layer",
				"BoxLayer"
			],
			[
				"resiz",
				"resizeGL"
			],
			[
				"typ",
				"typing"
			],
			[
				"defaultdi",
				"defaultdict"
			],
			[
				"Press",
				"MouseButtonPress"
			],
			[
				"Qtopen",
				"QtOpenGLWidgets"
			],
			[
				"q",
				"QtWidgets"
			],
			[
				"QtOpe",
				"QtOpenGLWidgets"
			],
			[
				"Q",
				"QOpenGLWidget"
			],
			[
				"QtOpen",
				"QtOpenGLWidgets"
			]
		]
	},
	"buffers":
	[
		{
			"file": "expreiments/inspect_available_functions.py",
			"settings":
			{
				"buffer_size": 803,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"GgAAAAoDAAAAAAAACgMAAAAAAAACAAAAIyD5AgAAAAAAAPkCAAAAAAAAAgAAACMg3gIAAAAAAADeAgAAAAAAAAIAAAAjILECAAAAAAAAsQIAAAAAAAACAAAAIyCZAgAAAAAAAJkCAAAAAAAAAgAAACMghgIAAAAAAACGAgAAAAAAAAIAAAAjIGUCAAAAAAAAZQIAAAAAAAACAAAAIyAyAgAAAAAAADICAAAAAAAAAgAAACMgEwIAAAAAAAATAgAAAAAAAAIAAAAjIOwBAAAAAAAA7AEAAAAAAAACAAAAIyDGAQAAAAAAAMYBAAAAAAAAAgAAACMgpQEAAAAAAAClAQAAAAAAAAIAAAAjIIgBAAAAAAAAiAEAAAAAAAACAAAAIyBgAQAAAAAAAGABAAAAAAAAAgAAACMgPwEAAAAAAAA/AQAAAAAAAAIAAAAjIB8BAAAAAAAAHwEAAAAAAAACAAAAIyAJAQAAAAAAAAkBAAAAAAAAAgAAACMg7QAAAAAAAADtAAAAAAAAAAIAAAAjINIAAAAAAAAA0gAAAAAAAAACAAAAIyCjAAAAAAAAAKMAAAAAAAAAAgAAACMgjAAAAAAAAACMAAAAAAAAAAIAAAAjIH8AAAAAAAAAfwAAAAAAAAACAAAAIyBdAAAAAAAAAF0AAAAAAAAAAgAAACMgPgAAAAAAAAA+AAAAAAAAAAIAAAAjICAAAAAAAAAAIAAAAAAAAAACAAAAIyAAAAAAAAAAAAAAAAAAAAAAAgAAACMg",
					"AQAAAAAAAAABAAAAVwMAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "\n\nimport inspect\n\n#SEE python docs: https://docs.python.org/3/library/inspect.html\nfrom typing import *\ndef sample_function(a: int, b: str, c: float = 5.0, props:List=[]) -> bool:\n\treturn True\n\n\n# Print argument details\nprint(\"Arguments:\")\nfor param in sig.parameters.values():\n    print(f\"- Name: {param.name}, Default: {param.default}, Annotation: {param.annotation}\")\n\ndef format_type(annotation):\n\t\"\"\"Helper function to format type annotations as readable strings.\"\"\"\n\tif hasattr(annotation, '__name__'):  # For built-in types like int, float\n\t\treturn annotation.__name__\n\telif hasattr(annotation, '__origin__'):  # For generic types like List, Dict\n\t\torigin = annotation.__origin__\n\t\targs = \", \".join(format_type(arg) for arg in annotation.__args__) if annotation.__args__ else \"\"\n\t\treturn f\"{origin.__name__}[{args}]\" if args else origin.__name__\n\telse:\n\t\treturn str(annotation)  # Fallback for unusual cases\n\ndef format_param(param)->str:\n\ttext = \"\"\n\tif param.kind == inspect.Parameter.VAR_POSITIONAL:\n\t\ttext += \"*\"\n\tif param.kind == inspect.Parameter.VAR_KEYWORD:\n\t\ttext += \"**\"\n\ttext += f\"{param.name}\"\n\t\n\t# Add type annotation if available\n\tif param.annotation is not inspect.Parameter.empty:\n\t\ttext += f\":{format_type(param.annotation)}\"\n\t\n\t# Add default value if available\n\tif param.default is not inspect.Parameter.empty:\n\t\ttext += f\"={repr(param.default)}\"\n\t\n\treturn text\n\ndef format_signature(fn):\n\t# Get the signature of the function\n\tsig = inspect.signature(fn)\n\n\t# Build the formatted signature text\n\ttext = f\"{fn.__name__}\"\n\ttext+=\"(\"\n\ttext+=\", \".join( [format_param(param) for param in sig.parameters.values()] )\n\ttext+=\")\"\n\t\n\t# Output the return type annotation if present\n\tif sig.return_annotation is not inspect.Signature.empty:\n\t\ttext += f\"-> {format_type(sig.return_annotation)}\"\n\t\n\treturn text\n\t\n\nfrom pylive import livescript\nlivescript.display(format_signature(sample_function))\nlivescript.display(format_signature(print))\n",
			"file": "expreiments/inspect_functions_experiment.py",
			"file_size": 2019,
			"file_write_time": 133765004069861375,
			"settings":
			{
				"buffer_size": 1951,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					2,
					"left_delete",
					null,
					"AgAAAMMAAAAAAAAAwwAAAAAAAAABAAAACsIAAAAAAAAAwgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pyrigth",
				"Preferences: LSP-pyright Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"terminu",
				"Terminus: Close All"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"REMOE",
				"Package Control: Remove Package"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"View Package File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/src/pylive",
		"/C/dev/src/pylive/expreiments",
		"/C/dev/src/pylive/expreiments/live_coding"
	],
	"file_history":
	[
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/nx_graph_model.py",
		"/P/!!INSTALL!!/____Install 2024/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/utils/geo.py",
		"/C/Users/and/Desktop/TVPaint Animation 10 Pro 10.0.16 (32 Bit)/Install.Notes.nfo",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/abstract_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/expreiments/ListItemDelegate-example.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_node_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/ConnectableGraphicsItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/edge_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/QGraphicsArrowItem.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/Connectable.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphmodel_databased.py",
		"/C/dev/src/pylive/expreiments/built-a-dependency-graph-of-a-python-codebase.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_columnbased.py",
		"/C/dev/src/pylive/pylive/examples/livescript.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_databased.py",
		"/C/dev/src/pylive/docs/2024_12_06-hot-reloading-a-python-script.md",
		"/C/dev/src/pylive/pyproject.toml",
		"/C/dev/src/pylive/pylive/utils/unique.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/cell_support.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/line_number_area.py",
		"/C/dev/src/pylive/tests/test_cells.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_edit.py",
		"/C/dev/src/pylive/tests/test_function_signatures.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/display.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_skeleton.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/IPython/utils/terminal.py",
		"/C/dev/src/pylive/pylive/QtTerminal/terminal_with_exec.py",
		"/C/dev/src/pylive/pylive/render_engine/render_layers.py",
		"/C/dev/src/pylive/script_examples_to_run_live/spherical_transform.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/script_cursor.py",
		"/C/dev/src/pylive/pylive/__main__.py",
		"/C/dev/src/pylive/TODOs.md",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_skeleton.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_exec.py",
		"/C/dev/src/pylive/script_examples_to_run_live/glcanvas_widget_with_moderngl.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_number_editor.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/file_link.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/invisibles_highlighter.py",
		"/C/dev/src/pylive/script_examples_to_run_live/livescript_demonstration.py",
		"/C/dev/src/pylive/script_examples_to_run_live/lorem_ipsum.md",
		"/C/dev/src/pylive/expreiments/file_textdocument_link.py",
		"/C/dev/src/pylive/pylive/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/__init__.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_app_with_qtconsole.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/asttokens/line_numbers.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/old_architecture/script_editor_simple.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/jedi_completer.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_exec.py",
		"/C/dev/src/pylive/expreiments/glcanvas.py",
		"/C/dev/src/pylive/pylive/render_engine/regl/regl.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_skeleton.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/glcanvas.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLWindow_with_qopengl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget_with_request_animation.py",
		"/C/dev/src/pylive/pylive/render_engine/utils/__init__.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget-with_painting_signal.py",
		"/C/dev/src/pylive/pylive/render_engine/glwidget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWindow.py",
		"/C/Users/andris/AppData/Local/Temp/2ea7c807-5541-48c5-9e23-9d4d4826a0ed_Microsoft Office 2021 Pro Plus.zip.0ed/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/Users/andris/Downloads/Microsoft Office 2021 Pro Plus (365 ) + Patch/Microsoft Office 2021 Pro Plus/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/dev/src/pylive/expreiments/opengl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pygame_moderngl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/opengl_outside_window.py",
		"/C/dev/src/pylive/pylive/render_engine/orbit_control.py",
		"/C/dev/src/pylive/pylive/render_engine/lookAt_standalone.vert",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/linter_widget.py",
		"/C/dev/src/pylive/pylive/logwindow.py",
		"/C/dev/src/pylive/pylive/shaders/billboard.vert",
		"/C/dev/src/pylive/pylive/render_engine/resource_manager.py",
		"/C/dev/src/pylive/pylive/render_engine/examples/1 render layers.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/unified_titlebar.py",
		"/C/dev/src/pylive/pylive/render_engine/camera.py",
		"/C/dev/src/pylive/pylive/shaders/default_vertex_shader.vert",
		"/C/dev/src/pylive/pylive/shaders/flat_fragment_shader.frag",
		"/C/dev/src/pylive/gloo/render_layers.py",
		"/C/dev/src/pylive/gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/orbit_control.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_window_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/rendering_with_qt.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/qpygletwidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_1.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget (Not Working).py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_2.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_canvas_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pyglet_on_QWidget.py",
		"/C/dev/src/pylive/expreiments/ipython/ipython_kernel.py",
		"/C/dev/src/pylive/expreiments/ipython/qtconsole_inprocess1.py",
		"/C/dev/src/pylive/expreiments/ipython/simple_console.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_ipython.py",
		"/C/dev/src/pylive/expreiments/simple_console.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_gpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notbook_with_chatgpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/live_framework.py",
		"/C/dev/src/pylive/expreiments/ipython_kernel.py",
		"/C/dev/src/pylive/pylive/examples/livenotebook.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtGui.pyi",
		"/C/dev/src/pylive/expreiments/visualize_function_dependencies.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter_OLD.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_completer.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/WhitespaceHighlighter.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/highlighters.py",
		"/C/dev/src/pylive/expreiments/jedi_test.py",
		"/C/dev/src/pylive/expreiments/live_colorscheme.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/async_rope_completer_for_textedit.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_editor_with_async_rope_completion.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/simple_script_editor.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/completer_for_textedit.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/number_editor.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/KeywordsCompleter_OLD.py",
		"/C/dev/src/pylive/pylive/thread_pool_tracker.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_editor_with_async_rope_completer.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"intersectLineWithRectangle",
			"intersectLineWithPath",
			"ellipse",
			"intersectRay",
			"rect_max[1]",
			"rect_min[1]",
			"rect_max[0]",
			"rect_min[0]",
			"print",
			"intersect",
			"intersectLineWithPath",
			"intersectLine",
			"intersect",
			"intersectRayWithPath",
			"intersectLine",
			"print",
			".target",
			".source",
			"def paint(",
			"def paint",
			"Signal",
			"scenePositionChanged",
			"scenePositionChan ged",
			"ItemScenePositionHasChanged",
			"print",
			"LiveScript",
			"cells",
			"cell",
			"insertbar",
			"trimesh",
			"self.cell",
			"setEditor",
			"cell",
			"status",
			"self._wi",
			"saveFile",
			"def setup",
			"def setu[",
			"setup",
			"self.document",
			"updateWindowTitle",
			"modified",
			"def open",
			"setPreview",
			"pylive.display",
			"get_line_at_offset",
			"updateLine",
			"LineNumberArea",
			"line number",
			"setAttribute(",
			"setAttribute",
			"get_context",
			"QOpenGLWindow",
			"import QOpenGLWindow",
			"Literal",
			"literal",
			"Searching",
			"Lityeral",
			"dtype",
			"\t\t'",
			"internal_format",
			"dtype",
			"mode",
			"varyings_capture_mode",
			"internal_format",
			"dtype",
			"internal_format",
			"dtype",
			"internal_format",
			"varyings_capture_mode",
			"self",
			"for",
			"framebuffers",
			"placeholder",
			"find",
			"fin",
			"clearNo",
			"showException",
			"evalu",
			"completer",
			"RopeC",
			"lineNumberArea",
			"completer",
			"print",
			"new file",
			"setWindowTitle",
			"modifie",
			"setPreviewCollapse",
			"contentChang",
			"setupMenui",
			"NodeW",
			"self.palette",
			"threshold",
			"cancel",
			"interactive_edge_end_pin",
			"interactive_edge_start_pin",
			"interactive_edge_end_pin",
			"interactive_edge_moving_pin",
			"interactive_edge_start_pin",
			"self._pare",
			".parent_node",
			"_edges",
			"GrabThreshold",
			"center",
			"HeaderWidget",
			"palette",
			"updatePosition",
			"pinAt",
			"onNodeEditorChange",
			"onnodePropertyChange",
			"updatePin",
			"EdgeItem",
			"InletItem",
			"OutletItem",
			"PinItem",
			"inlet",
			"handleInletsADDED",
			"handleNodesProp",
			"doubleClick",
			"editable",
			"evaluate",
			"inspect",
			"MiniTable",
			"from",
			"pyg",
			"setNodeProperty",
			"index",
			"html"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"bottom",
			"top",
			"right",
			"left",
			"self._document",
			"interactive_edge_moving_pin",
			"interactive_edge_fixed_pin",
			"interactive_edge_moving_pin",
			"EdgeGraphicsItem",
			"InletGraphicsItem",
			"OutletGraphicsItem",
			"PinGraphicsItem",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"OutletRef",
			"InletRef",
			"EdgeRef",
			"NodeRef",
			"EdgeDataColumn",
			"OutletDataColumn",
			"InletDataColumn",
			"NodeDataColumn",
			"EdgeView",
			"InletView",
			"OutletView",
			"self._edgeTable",
			"self._outletTable",
			"self._inletTable",
			"self._nodeTable"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "expreiments/inspect_available_functions.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 803,
						"regions":
						{
						},
						"selection":
						[
							[
								327,
								327
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/expreiments/inspect_available_functions.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "expreiments/inspect_functions_experiment.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1951,
						"regions":
						{
						},
						"selection":
						[
							[
								1370,
								1370
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/expreiments/inspect_functions_experiment.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.60038119441,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 412.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 166.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Python: Run File (CrossPlatform)",
	"project": "pylive.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"geo",
				"pylive\\utils\\geo.py"
			],
			[
				"nx",
				"pylive\\QtGraphEditor\\NetrowkXGraphditor\\NXGraphView.py"
			],
			[
				"unique",
				"pylive\\pylive\\utils\\unique.py"
			],
			[
				"linenu",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"test",
				"pylive\\tests\\test_cells.py"
			],
			[
				"cell_s",
				"pylive\\pylive\\QtScriptEditor\\cell_support.py"
			],
			[
				"linen",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"lineare",
				"pylive\\pylive\\QtScriptEditor\\components\\line_number_area.py"
			],
			[
				"terminal",
				"pylive\\pylive\\QtTerminal\\terminal_with_exec.py"
			],
			[
				"termina",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\terminal.py"
			],
			[
				"scripte",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"script",
				"pylive\\pylive\\QtScriptEditor\\components\\script_cursor.py"
			],
			[
				"pyg",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"numbere",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"highlight",
				"pylive\\pylive\\QtScriptEditor\\components\\invisibles_highlighter.py"
			],
			[
				"glca",
				"pylive\\script_examples_to_run_live\\glcanvas_widget_with_moderngl.py"
			],
			[
				"filelink",
				"pylive\\expreiments\\file_textdocument_link.py"
			],
			[
				"displ",
				"pylive\\pylive\\QtLiveApp\\display.py"
			],
			[
				"line",
				"pylive\\.venv\\Lib\\site-packages\\asttokens\\line_numbers.py"
			],
			[
				"scri",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"jedi",
				"pylive\\pylive\\QtScriptEditor\\components\\jedi_completer.py"
			],
			[
				"with_exec",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"framew",
				"pylive\\pylive\\QtLiveFramework\\live_framework_skeleton.py"
			],
			[
				"moderngl",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"modenr",
				"pylive\\expreiments\\3d_rendering\\pygame_moderngl_boilerplate.py"
			],
			[
				"regl",
				"pylive\\pylive\\render_engine\\regl\\regl.py"
			],
			[
				"logwind",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"resou",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"render",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"main",
				"pylive\\pylive\\render_engine\\regl\\main.py"
			],
			[
				"resource",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"modern",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"unifie",
				"pylive\\expreiments\\unified_titlebar.py"
			],
			[
				"camer",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"linter",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"Script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"camera",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"orbit",
				"pylive\\pylive\\render_engine\\orbit_control.py"
			],
			[
				"renderl",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"live",
				"pylive\\pylive\\examples\\livescript.py"
			],
			[
				"orbitcon",
				"pylive\\expreiments\\3d_rendering\\orbit_control.py"
			],
			[
				"number editor",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"whitespace",
				"pylive\\pylive\\QtScriptEditor\\components\\WhitespaceHighlighter.py"
			],
			[
				"pygme",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"highlighte",
				"pylive\\pylive\\QtScriptEditor\\highlighters.py"
			],
			[
				"textedito",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_completer.py"
			],
			[
				"keywo",
				"pylive\\pylive\\QtScriptEditor\\components\\KeywordsCompleter.py"
			],
			[
				"scrip",
				"pylive\\pylive\\QtScriptEditor\\ScriptEdit.py"
			],
			[
				"logw",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"capture",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\capture.py"
			],
			[
				"preview",
				"pylive\\pylive\\preview_widget.py"
			],
			[
				"pan",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"panand",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"visu",
				"pylive\\pylive\\examples\\visual_coding.py"
			],
			[
				"log",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"livescript",
				"pylive\\pylive\\LiveScript.py"
			],
			[
				"mind",
				"pylive\\pylive\\QtGraphEditor\\mindmap_example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 59.3333333333,
		"last_filter": "circle",
		"selected_items":
		[
			[
				"circle",
				"CircleWidget"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 601.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
