{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"addP",
				"addPolygon"
			],
			[
				"out",
				"outletGraphicsObject"
			],
			[
				"outl",
				"outletGraphicsObject"
			],
			[
				"P",
				"PenStyle"
			],
			[
				"Networ",
				"NetrowkXGraphEditor"
			],
			[
				"NotImpl",
				"NotImplementedError"
			],
			[
				"child",
				"childrenBoundingRect"
			],
			[
				"oute",
				"outletAt"
			],
			[
				"Qpoin",
				"QPointF"
			],
			[
				"Outlet",
				"OutletGraphicsObject"
			],
			[
				"setAcc",
				"setAcceptHoverEvents"
			],
			[
				"item",
				"itemAt"
			],
			[
				"ungrab",
				"ungrabMouse"
			],
			[
				"Link",
				"LinkGraphicsObject"
			],
			[
				"NotIm",
				"NotImplementedError"
			],
			[
				"isin",
				"isinstance"
			],
			[
				"outlet",
				"outletGraphicsObject"
			],
			[
				"mapFro",
				"mapFromScene"
			],
			[
				"Inlet",
				"InletGraphicsObject"
			],
			[
				"GraphicsSceneMou",
				"GraphicsSceneMousePress"
			],
			[
				"scene",
				"_scene"
			],
			[
				"GraphicsN",
				"GraphicsNodeItem"
			],
			[
				"NXGraphScen",
				"NXGraphSceneMouseTool"
			],
			[
				"make",
				"make_fillet_path"
			],
			[
				"ar",
				"arcMoveTo"
			],
			[
				"mapFrom",
				"mapFromParent"
			],
			[
				"arcTo",
				"arcMoveTo"
			],
			[
				"_in",
				"_inlet_graphics_objects"
			],
			[
				"_inl",
				"_inlet_graphics_objects"
			],
			[
				"nx_grp",
				"nx_graph_graphics_items"
			],
			[
				"Gra",
				"GraphicsPortItem"
			],
			[
				"Graphics",
				"GraphicsVertexItem"
			],
			[
				"graph",
				"graphscene"
			],
			[
				"onNode",
				"onNodeDeleted"
			],
			[
				"onC",
				"onNodeCreated"
			],
			[
				"node",
				"nodesAdded"
			],
			[
				"onLink",
				"onLinkDeleted"
			],
			[
				"edge",
				"edgesAdded"
			],
			[
				"inde",
				"ItemIndexMethod"
			],
			[
				"add",
				"addNode"
			],
			[
				"update",
				"updateAttachedNodes"
			],
			[
				"getN",
				"getNodeProperty"
			],
			[
				"Nx",
				"NXGraphModel"
			],
			[
				"Connection",
				"ConnectionType"
			],
			[
				"Node",
				"NodeGraphicsObject"
			],
			[
				"Item",
				"ItemScenePositionHasChanged"
			],
			[
				"Vertex",
				"VertexElement"
			],
			[
				"Fla",
				"GraphicsItemFlag"
			],
			[
				"setAcce",
				"setAcceptHoverEvents"
			],
			[
				"gr",
				"createItemGroup"
			],
			[
				"GraphicsO",
				"GraphicsPortItem"
			],
			[
				"setL",
				"setLine"
			],
			[
				"QFo",
				"QFont"
			],
			[
				"create",
				"createAttributeEditor"
			],
			[
				"mous",
				"mouseMoveEvent"
			],
			[
				"Mous",
				"MouseButtonPress"
			],
			[
				"T",
				"Type"
			],
			[
				"ins",
				"installEventFilter"
			],
			[
				"_a",
				"_attribute_to_widget_map"
			],
			[
				"parent",
				"parentItem"
			],
			[
				"QFileO",
				"QFileDialog"
			],
			[
				"edge_",
				"_edge_to_widget_map"
			],
			[
				"_widget_to",
				"_widget_to_node_map"
			],
			[
				"up",
				"updateEdgePosition"
			],
			[
				"setAccep",
				"setAcceptHoverEvents"
			],
			[
				"Att",
				"AttributeError"
			],
			[
				"hei",
				"height"
			],
			[
				"setB",
				"setBrush"
			],
			[
				"chil",
				"childrenBoundingRect"
			],
			[
				"NXGra",
				"NXGraphView"
			],
			[
				"_wi",
				"_widget_to_node_map"
			],
			[
				"nodes",
				"nodesPropertiesChanged"
			],
			[
				"setP",
				"setParentItem"
			],
			[
				"_widg",
				"_widget_to_node_map"
			],
			[
				"remove",
				"removeEdge"
			],
			[
				"hover",
				"hoverMoveEvent"
			],
			[
				"isEnd",
				"_isEndHighlighted"
			],
			[
				"widget_t",
				"_widget_to_edge_map"
			],
			[
				"shape",
				"shape_bbox"
			],
			[
				"Connect",
				"ConnectionEvent"
			],
			[
				"model",
				"_model"
			],
			[
				"widget_",
				"_widget_to_node_map"
			],
			[
				"QGraphicsS",
				"QGraphicsScene"
			],
			[
				"pyl",
				"pylive"
			],
			[
				"ConnectionL",
				"ConnectionLeaveType"
			],
			[
				"setSiz",
				"setSizePolicy"
			],
			[
				"se",
				"setAlignment"
			],
			[
				"main",
				"main_layout"
			],
			[
				"header",
				"header_widget"
			],
			[
				"outlet_",
				"outlet_row"
			],
			[
				"QGraphicsLi",
				"QGraphicsLinearLayout"
			],
			[
				"inlet_r",
				"inlet_row_layout"
			],
			[
				"QGraphicsLine",
				"QGraphicsLinearLayout"
			],
			[
				"QGraph",
				"QGraphicsLayout"
			],
			[
				"Q",
				"QGraphicsLinearLayout"
			],
			[
				"size",
				"sizeHint"
			],
			[
				"inlet",
				"inlet_layout"
			],
			[
				"inle",
				"inlet_layout"
			],
			[
				"GraphicsMou",
				"GraphicsSceneMousePress"
			],
			[
				"sceneEven",
				"sceneEventFilter"
			],
			[
				"instal",
				"installSceneEventFilter"
			],
			[
				"NodeW",
				"NodeWidget2"
			],
			[
				"Arrow",
				"QGraphicsArrowItem"
			],
			[
				"_node",
				"_node_edges"
			],
			[
				"trigg",
				"triggered"
			],
			[
				"tri",
				"triggered"
			],
			[
				"setS",
				"setStyle"
			],
			[
				"QMenu",
				"QMenuBar"
			],
			[
				"text",
				"textChanged"
			],
			[
				"_edg",
				"_edge_targets"
			],
			[
				"nx",
				"nx_inspector_view"
			],
			[
				"ce",
				"cellWidget"
			],
			[
				"itemA",
				"itemAt"
			],
			[
				"QTableW",
				"QTableWidgetItem"
			],
			[
				"QTable",
				"QTableWidgetItem"
			],
			[
				"on_",
				"on_item_changed"
			],
			[
				"clear",
				"clearContents"
			],
			[
				"QAbleW",
				"QTableWidgetItem"
			],
			[
				"setVer",
				"setVerticalHeaderItem"
			],
			[
				"inser",
				"insertRow"
			],
			[
				"set",
				"setText"
			],
			[
				"upda",
				"updateView"
			],
			[
				"patch_",
				"patch_list"
			],
			[
				"dic",
				"dict_diff"
			],
			[
				"begin",
				"beginInsertRows"
			],
			[
				"nodelist",
				"nodelistview"
			],
			[
				"nodel",
				"nodelist"
			],
			[
				"QStan",
				"QStandardItemModel"
			]
		]
	},
	"buffers":
	[
		{
			"file": "pylive/NetworkXGraphEditor/nx_network_scene.py",
			"settings":
			{
				"buffer_size": 16231,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					1373,
					1,
					"cut",
					null,
					"AQAAACw8AAAAAAAALDwAAAAAAADVAQAAZGVmIG1vdmUoCiAgICAgICAgc2VsZiwKICAgICAgICBzb3VyY2VfZ3JhcGhpY3NfaXRlbTogUUdyYXBoaWNzSXRlbSwKICAgICAgICB0YXJnZXRfZ3JhcGhpY3NfaXRlbTogUUdyYXBoaWNzSXRlbSwKICAgICk6CiAgICAgICAgbGluZSA9IG1ha2VMaW5lQmV0d2VlblNoYXBlcyhzb3VyY2VfZ3JhcGhpY3NfaXRlbSwgdGFyZ2V0X2dyYXBoaWNzX2l0ZW0pCiAgICAgICAgbGVuZ3RoID0gbGluZS5sZW5ndGgoKQogICAgICAgIGlmIGxlbmd0aCA+IDA6CiAgICAgICAgICAgIG9mZnNldCA9IG1pbig4LCBsZW5ndGggLyAyKQogICAgICAgICAgICBsaW5lID0gUUxpbmVGKAogICAgICAgICAgICAgICAgbGluZS5wb2ludEF0KG9mZnNldCAvIGxlbmd0aCksCiAgICAgICAgICAgICAgICBsaW5lLnBvaW50QXQoKGxlbmd0aCAtIG9mZnNldCkgLyBsZW5ndGgpLAogICAgICAgICAgICApCgogICAgICAgIHNlbGYuc2V0TGluZShsaW5lKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABPgAAAAAAACw8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1376,
					2,
					"left_delete",
					null,
					"AgAAACw8AAAAAAAALDwAAAAAAAABAAAACig8AAAAAAAAKDwAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtPAAAAAAAAC08AAAAAAAAAAAAAAAA8L8"
				],
				[
					1378,
					1,
					"left_delete",
					null,
					"AQAAACc8AAAAAAAAJzwAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoPAAAAAAAACg8AAAAAAAAAAAAAAAA8L8"
				],
				[
					1389,
					1,
					"cut",
					null,
					"AQAAAJ0CAAAAAAAAnQIAAAAAAAAyAAAAZnJvbSBweWxpdmUudXRpbHMuZ2VvIGltcG9ydCBtYWtlTGluZUJldHdlZW5TaGFwZXM",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAgAAAAAAAJ0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1391,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAgAAAAAAAJ0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1395,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAgAAAAAAAJ0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": "\ndraft."
					},
					"CQAAAMEsAAAAAAAAwiwAAAAAAAAAAAAAwiwAAAAAAADKLAAAAAAAAAAAAADKLAAAAAAAAM4sAAAAAAAAAAAAAM4sAAAAAAAAzywAAAAAAAAAAAAAzywAAAAAAADQLAAAAAAAAAAAAADQLAAAAAAAANEsAAAAAAAAAAAAANEsAAAAAAAA0iwAAAAAAAAAAAAA0iwAAAAAAADTLAAAAAAAAAAAAADTLAAAAAAAANQsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBLAAAAAAAAMEsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1403,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BAAAANQsAAAAAAAA1SwAAAAAAAAAAAAA1SwAAAAAAADWLAAAAAAAAAAAAADWLAAAAAAAANcsAAAAAAAAAAAAANcsAAAAAAAA2CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADULAAAAAAAANQsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1404,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANgsAAAAAAAA2iwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYLAAAAAAAANgsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1405,
					1,
					"insert",
					{
						"characters": "self,"
					},
					"BQAAANksAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADbLAAAAAAAAAAAAADbLAAAAAAAANwsAAAAAAAAAAAAANwsAAAAAAAA3SwAAAAAAAAAAAAA3SwAAAAAAADeLAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZLAAAAAAAANksAAAAAAAAAAAAAAAA8L8"
				],
				[
					1406,
					1,
					"insert",
					{
						"characters": " inlet"
					},
					"BgAAAN4sAAAAAAAA3ywAAAAAAAAAAAAA3ywAAAAAAADgLAAAAAAAAAAAAADgLAAAAAAAAOEsAAAAAAAAAAAAAOEsAAAAAAAA4iwAAAAAAAAAAAAA4iwAAAAAAADjLAAAAAAAAAAAAADjLAAAAAAAAOQsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeLAAAAAAAAN4sAAAAAAAAAAAAAAAA8L8"
				],
				[
					1411,
					2,
					"left_delete",
					null,
					"AgAAAOYsAAAAAAAA5iwAAAAAAAA9AAAAICAgICAgICAgICAgZHJhZnQuc2V0TGluZShtYWtlTGluZUJldHdlZW5TaGFwZXMoc2VsZiwgaW5sZXQpKeUsAAAAAAAA5SwAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjLQAAAAAAAOYsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1415,
					1,
					"left_delete",
					null,
					"AQAAAA4tAAAAAAAADi0AAAAAAAAWAAAAbWFrZUxpbmVCZXR3ZWVuU2hhcGVzKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOLQAAAAAAACQtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1418,
					1,
					"left_delete",
					null,
					"AQAAACUtAAAAAAAAJS0AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmLQAAAAAAACYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BQAAAAYtAAAAAAAABy0AAAAAAAAAAAAABy0AAAAAAAAHLQAAAAAAAAcAAABzZXRMaW5lBy0AAAAAAAAILQAAAAAAAAAAAAAILQAAAAAAAAktAAAAAAAAAAAAAAktAAAAAAAACi0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGLQAAAAAAAA0tAAAAAAAAAAAAAAAA8L8"
				],
				[
					1428,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKLQAAAAAAAAotAAAAAAAAAAAAAAAA8L8"
				],
				[
					1432,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASLAAAAAAAABIsAAAAAAAAAAAAAAAA8L8"
				],
				[
					1442,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BQAAAPsxAAAAAAAA/DEAAAAAAAAAAAAA/DEAAAAAAAD8MQAAAAAAAB0AAABzZXRMaW5lKG1ha2VMaW5lQmV0d2VlblNoYXBlc/wxAAAAAAAA/TEAAAAAAAAAAAAA/TEAAAAAAAD+MQAAAAAAAAAAAAD+MQAAAAAAAP8xAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYMgAAAAAAAPsxAAAAAAAAAAAAAAAA8L8"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": "move"
					},
					"BQAAAC8yAAAAAAAAMDIAAAAAAAAAAAAAMDIAAAAAAAAwMgAAAAAAAB0AAABzZXRMaW5lKG1ha2VMaW5lQmV0d2VlblNoYXBlczAyAAAAAAAAMTIAAAAAAAAAAAAAMTIAAAAAAAAyMgAAAAAAAAAAAAAyMgAAAAAAADMyAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMMgAAAAAAAC8yAAAAAAAAAAAAAAAA8L8"
				],
				[
					1451,
					1,
					"left_delete",
					null,
					"AQAAAA0yAAAAAAAADTIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOMgAAAAAAAA4yAAAAAAAAAAAAAAAA8L8"
				],
				[
					1454,
					1,
					"right_delete",
					null,
					"AQAAAEoyAAAAAAAASjIAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKMgAAAAAAAEoyAAAAAAAAAAAAAAAA8L8"
				],
				[
					1464,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACMwAAAAAAAAUzAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "pylive/QtLiveApp/live_script_with_exec.py",
			"settings":
			{
				"buffer_size": 7723,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAGISAAAAAAAAYxIAAAAAAAAAAAAAYxIAAAAAAABkEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhIAAAAAAABiEgAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGQSAAAAAAAAZRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBIAAAAAAABkEgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAGoSAAAAAAAAaxIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahIAAAAAAABqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAJ4SAAAAAAAAohIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhIAAAAAAACeEgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAGkSAAAAAAAAaRIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAahIAAAAAAABqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAGsSAAAAAAAAaxIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAbBIAAAAAAABsEgAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIcSAAAAAAAAiBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxIAAAAAAACHEgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAiBIAAAAAAACIEgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "script_examples_to_run_live/rounded_link_item.py",
			"settings":
			{
				"buffer_size": 2637,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					540,
					2,
					"left_delete",
					null,
					"AgAAAJUCAAAAAAAAlQIAAAAAAAAPAAAALSBRUG9pbnRGKHIsIHIplAIAAAAAAACUAgAAAAAAAAEAAAAg",
					"AQAAAAAAAAABAAAApAIAAAAAAACVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					543,
					1,
					"insert",
					{
						"characters": "*2"
					},
					"AgAAAKMCAAAAAAAApAIAAAAAAAAAAAAApAIAAAAAAAClAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"insert",
					{
						"characters": "*2"
					},
					"AgAAAKgCAAAAAAAAqQIAAAAAAAAAAAAAqQIAAAAAAACqAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAIAAAAAAACoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdQoAAAAAAABxCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RihyKjIsIHIqMikpCiAgICAgICAgcGF0aC5hcmNUbyhyZWN0LCBtYXRoLmRlZ3JlZXMoYTIpICsgOTAsIC1tYXRoLmRlZ3JlZXMoYTIgLSBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAKICAAAAAAAAowIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogIAAAAAAACiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdgoAAAAAAAB2CgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcyhhMikgKyA5MCwgLW1hdGguZGVncmVlcyhhMiAtIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					4,
					"left_delete",
					null,
					"BAAAAKcCAAAAAAAApwIAAAAAAAABAAAAMqYCAAAAAAAApgIAAAAAAAABAAAAIKUCAAAAAAAApQIAAAAAAAABAAAAKqQCAAAAAAAApAIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAqAIAAAAAAACoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcgoAAAAAAAByCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDkwLCAtbWF0aC5kZWdyZWVzKGEyIC0gYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					564,
					1,
					"left_delete",
					null,
					"AQAAAO8CAAAAAAAA7wIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					565,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					567,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcgoAAAAAAAByCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDkwLCAtbWF0aC5kZWdyZWVzKGEyICsgYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					572,
					1,
					"insert",
					{
						"characters": "+90"
					},
					"AwAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AIAAAAAAAD0AgAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdwoAAAAAAAB1CgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDkwLCAtbWF0aC5kZWdyZWVzKGEyICsgYTEpKzkwKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					577,
					1,
					"left_delete",
					null,
					"AQAAAPcCAAAAAAAA9wIAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA+AIAAAAAAAD4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdgoAAAAAAAB2CgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDkwLCAtbWF0aC5kZWdyZWVzKGEyICsgYTEpICsgMCkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA9wIAAAAAAAD3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"left_delete",
					null,
					"AQAAANoCAAAAAAAA2gIAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAA2wIAAAAAAADbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdQoAAAAAAAB1CgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDAsIC1tYXRoLmRlZ3JlZXMoYTIgKyBhMSkgKyAwKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"left_delete",
					null,
					"AQAAAN0CAAAAAAAA3QIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA3gIAAAAAAADeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAdAoAAAAAAAB0CgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgbWF0aC5kZWdyZWVzKGEyKSArIDAsIG1hdGguZGVncmVlcyhhMiArIGExKSArIDApCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAA3QIAAAAAAADdAgAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"left_delete",
					null,
					"AQAAAMcCAAAAAAAAxwIAAAAAAAATAAAAbWF0aC5kZWdyZWVzKGEyKSArIA",
					"AQAAAAAAAAABAAAA2gIAAAAAAADHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					599,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYQoAAAAAAABhCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgMCwgbWF0aC5kZWdyZWVzKGEyICsgYTEpICsgMCkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAxwIAAAAAAADHAgAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"right_delete",
					null,
					"AQAAAOICAAAAAAAA4gIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA4gIAAAAAAADiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					3,
					"left_delete",
					null,
					"AwAAAOECAAAAAAAA4QIAAAAAAAABAAAAIOACAAAAAAAA4AIAAAAAAAABAAAAK98CAAAAAAAA3wIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA4gIAAAAAAADiAgAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAXQoAAAAAAABdCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSBtYXRoLmF0YW4yKEMueSgpIC0gQi55KCksIEMueCgpIC0gQi54KCkpCiAgICAgICAgcmVjdCA9IFFSZWN0RihCLCBCICsgUVBvaW50RigtciwgciAqIDIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgMCwgbWF0aC5kZWdyZWVzKGEyICsgYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA3wIAAAAAAADfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAFQCAAAAAAAAVQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAIAAAAAAABUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAXgoAAAAAAABeCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYoLXIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAVQIAAAAAAABVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"left_delete",
					null,
					"AQAAAKgCAAAAAAAAqAIAAAAAAAAEAAAAICogMg",
					"AQAAAAAAAAABAAAArAIAAAAAAACoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					618,
					1,
					"left_delete",
					null,
					"AQAAAKMCAAAAAAAAowIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAWQoAAAAAAABZCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociwgcikpCiAgICAgICAgcGF0aC5hcmNUbyhyZWN0LCAwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAKMCAAAAAAAApAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowIAAAAAAACjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAWgoAAAAAAABaCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYoLXIsIHIpKQogICAgICAgIHBhdGguYXJjVG8ocmVjdCwgMCwgbWF0aC5kZWdyZWVzKGEyICsgYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAApAIAAAAAAACkAgAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AgAAAJsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACcAgAAAAAAAA4AAABRUG9pbnRGKC1yLCByKQ",
					"AQAAAAAAAAABAAAAqQIAAAAAAACbAgAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"left_delete",
					null,
					"AQAAAJkCAAAAAAAAmQIAAAAAAAABAAAAKw",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					635,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAJkCAAAAAAAAmgIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQIAAAAAAACZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					638,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAATQoAAAAAAABNCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiAtIEEpCiAgICAgICAgcGF0aC5hcmNUbyhyZWN0LCAwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAmgIAAAAAAACaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					4,
					"left_delete",
					null,
					"BAAAAJsCAAAAAAAAmwIAAAAAAAABAAAAQZoCAAAAAAAAmgIAAAAAAAABAAAAIJkCAAAAAAAAmQIAAAAAAAABAAAALZgCAAAAAAAAmAIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAnAIAAAAAAACcAgAAAAAAAAAAAAAAAPC/"
				],
				[
					642,
					1,
					"insert",
					{
						"characters": "+QPoin"
					},
					"BgAAAJgCAAAAAAAAmQIAAAAAAAAAAAAAmQIAAAAAAACaAgAAAAAAAAAAAACaAgAAAAAAAJsCAAAAAAAAAAAAAJsCAAAAAAAAnAIAAAAAAAAAAAAAnAIAAAAAAACdAgAAAAAAAAAAAACdAgAAAAAAAJ4CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAIAAAAAAACYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					643,
					1,
					"insert",
					{
						"characters": "tF"
					},
					"AgAAAJ4CAAAAAAAAnwIAAAAAAAAAAAAAnwIAAAAAAACgAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngIAAAAAAACeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKACAAAAAAAAogIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAIAAAAAAACgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": "r*2,"
					},
					"BAAAAKECAAAAAAAAogIAAAAAAAAAAAAAogIAAAAAAACjAgAAAAAAAAAAAACjAgAAAAAAAKQCAAAAAAAAAAAAAKQCAAAAAAAApQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQIAAAAAAAChAgAAAAAAAAAAAAAAAPC/"
				],
				[
					648,
					1,
					"insert",
					{
						"characters": " r*2"
					},
					"BAAAAKUCAAAAAAAApgIAAAAAAAAAAAAApgIAAAAAAACnAgAAAAAAAAAAAACnAgAAAAAAAKgCAAAAAAAAAAAAAKgCAAAAAAAAqQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQIAAAAAAAClAgAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYQoAAAAAAABbCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQitRUG9pbnRGKHIqMiwgcioyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAqQIAAAAAAACpAgAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"left_delete",
					null,
					"AQAAAMsCAAAAAAAAywIAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					658,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYgoAAAAAAABiCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDEwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					2,
					"left_delete",
					null,
					"AgAAAMwCAAAAAAAAzAIAAAAAAAABAAAAMMsCAAAAAAAAywIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					662,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYQoAAAAAAABhCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAM4CAAAAAAAAzwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgIAAAAAAADOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYgoAAAAAAABiCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsIC1tYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					668,
					1,
					"left_delete",
					null,
					"AQAAAM4CAAAAAAAAzgIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					670,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYQoAAAAAAABhCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAzgIAAAAAAADOAgAAAAAAAAAAAAAAAPC/"
				],
				[
					672,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					674,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYgoAAAAAAABiCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDEwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"left_delete",
					null,
					"AQAAAMsCAAAAAAAAywIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYgoAAAAAAABiCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDIwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"left_delete",
					null,
					"AQAAAMsCAAAAAAAAywIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					682,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAYgoAAAAAAABiCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDMwLCBtYXRoLmRlZ3JlZXMoYTIgKyBhMSkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"left_delete",
					null,
					"AQAAAMsCAAAAAAAAywIAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAMsCAAAAAAAAzAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					686,
					2,
					"left_delete",
					null,
					"AgAAAMwCAAAAAAAAzAIAAAAAAAABAAAAMMsCAAAAAAAAywIAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAzQIAAAAAAADNAgAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": ",ath.degrees"
					},
					"DAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAADNAgAAAAAAAM4CAAAAAAAAAAAAAM4CAAAAAAAAzwIAAAAAAAAAAAAAzwIAAAAAAADQAgAAAAAAAAAAAADQAgAAAAAAANECAAAAAAAAAAAAANECAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADTAgAAAAAAAAAAAADTAgAAAAAAANQCAAAAAAAAAAAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADWAgAAAAAAAAAAAADWAgAAAAAAANcCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANcCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wIAAAAAAADXAgAAAAAAAAAAAAAAAPC/"
				],
				[
					692,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAMwCAAAAAAAAzQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"left_delete",
					null,
					"AQAAAMsCAAAAAAAAywIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcAoAAAAAAABwCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygxMCksIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"left_delete",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAbwoAAAAAAABvCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygwKSwgbWF0aC5kZWdyZWVzKGEyICsgYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					705,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcAoAAAAAAABwCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygxMCksIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"left_delete",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcAoAAAAAAABwCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygyMCksIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADZAgAAAAAAAAIAAAAyMA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					720,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAbwoAAAAAAABvCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygwKSwgbWF0aC5kZWdyZWVzKGEyICsgYTEpKQogICAgcGF0aC5saW5lVG8ocG9pbnRzWy0xXSkKCiAgICAjIENsb3NlIHRoZSBwYXRoCiAgICByZXR1cm4gcGF0aAoKCmNsYXNzIFJvdW5kZWRMaW5rKFFHcmFwaGljc0l0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNvdXJjZSwgdGFyZ2V0KToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNvdXJjZS5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgdGFyZ2V0Ll9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICBzZWxmLnNvdXJjZSA9IHNvdXJjZQogICAgICAgIHNlbGYudGFyZ2V0ID0gdGFyZ2V0CgogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigpCiAgICAgICAgc2VsZi5tb3ZlKCkKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpOgogICAgICAgIG0gPSA1MAogICAgICAgIHJldHVybiBzZWxmLnBvbHlnb24uYm91bmRpbmdSZWN0KCkuYWRqdXN0ZWQoLW0sIC1tLCBtLCBtKQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICByb3VuZGVkX3BhdGggPSBmaWxsZXRfcG9seWdvbihzZWxmLnBvbHlnb24sIHI9MzApCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQ29sb3IoImxpZ2h0Ymx1ZSIpLCA1KSkKICAgICAgICBwYWludGVyLmRyYXdQYXRoKHJvdW5kZWRfcGF0aCkKCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUVBlbihRQnJ1c2goInJlZCIpLCAyLCBRdC5QZW5TdHlsZS5EYXNoTGluZSkpCiAgICAgICAgZGVidWdfcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgZGVidWdfcGF0aC5hZGRQb2x5Z29uKHNlbGYucG9seWdvbikKICAgICAgICBwYWludGVyLmRyYXdQYXRoKGRlYnVnX3BhdGgpCgogICAgZGVmIG1vdmUoc2VsZik6CiAgICAgICAgQSA9IHNlbGYuc291cmNlLnBvcygpICsgc2VsZi5zb3VyY2UuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBCID0gc2VsZi50YXJnZXQucG9zKCkgKyBzZWxmLnRhcmdldC5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIHNlbGYucG9seWdvbiA9IFFQb2x5Z29uRigKICAgICAgICAgICAgW0EsIFFQb2ludEYoQS54KCkgKyA1MCwgQS55KCkpLCBRUG9pbnRGKEIueCgpIC0gNTAsIEIueSgpKSwgQl0KICAgICAgICApCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYudXBkYXRlKCkKCgpjbGFzcyBOb2RlKFFHcmFwaGljc0VsbGlwc2VJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKDAsIDAsIDI1LCAyNSkKICAgICAgICBzZWxmLl9saW5rcyA9IFtdCiAgICAgICAgc2VsZi5zZXRCcnVzaChRQ29sb3IoIm9yYW5nZSIpKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1Jc01vdmFibGUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbVNlbmRzU2NlbmVQb3NpdGlvbkNoYW5nZXMpCgogICAgZGVmIGl0ZW1DaGFuZ2Uoc2VsZiwgY2hhbmdlLCB2YWx1ZSk6CiAgICAgICAgaWYgY2hhbmdlID09IFFHcmFwaGljc0l0ZW0uSXRlbVNjZW5lUG9zaXRpb25IYXNDaGFuZ2VkOgogICAgICAgICAgICBwcmludCgiY2hhbmdlZCIsIHNlbGYuX2xpbmtzKQogICAgICAgICAgICBmb3IgbGluayBpbiBzZWxmLl9saW5rczoKICAgICAgICAgICAgICAgIGxpbmsubW92ZSgpCiAgICAgICAgcmV0dXJuIHN1cGVyKCkuaXRlbUNoYW5nZShjaGFuZ2UsIHZhbHVlKQoKCnNjZW5lLmNsZWFyKCkKbjEgPSBOb2RlKCkKbjEuc2V0UG9zKC0xMzEsIC00OCkKc2NlbmUuYWRkSXRlbShuMSkKbjIgPSBOb2RlKCkKbjIuc2V0UG9zKDEyMCwgMTg3KQpzY2VuZS5hZGRJdGVtKG4yKQpsaW5rID0gUm91bmRlZExpbmsobjEsIG4yKQpzY2VuZS5hZGRJdGVtKGxpbmspCmxpbmsubW92ZSgpCg",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					722,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					724,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcAoAAAAAAABwCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygxMCksIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					725,
					1,
					"left_delete",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					726,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAcAoAAAAAAABwCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygyMCksIG1hdGguZGVncmVlcyhhMiArIGExKSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					742,
					1,
					"insert",
					{
						"characters": "90"
					},
					"AwAAAOoCAAAAAAAA6wIAAAAAAAAAAAAA6wIAAAAAAADrAgAAAAAAAAcAAABhMiArIGEx6wIAAAAAAADsAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAADqAgAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAawoAAAAAAABrCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygyMCksIG1hdGguZGVncmVlcyg5MCkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"left_delete",
					null,
					"AQAAANgCAAAAAAAA2AIAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AIAAAAAAADYAgAAAAAAAAAAAAAAAPC/"
				],
				[
					751,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAawoAAAAAAABrCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIG1hdGguZGVncmVlcygwMCksIG1hdGguZGVncmVlcyg5MCkpCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAA2QIAAAAAAADZAgAAAAAAAAAAAAAAAPC/"
				],
				[
					757,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADMAgAAAAAAACIAAABtYXRoLmRlZ3JlZXMoMDApLCBtYXRoLmRlZ3JlZXMoOTAp",
					"AQAAAAAAAAABAAAA7QIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					759,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAASgoAAAAAAABKCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDApCiAgICBwYXRoLmxpbmVUbyhwb2ludHNbLTFdKQoKICAgICMgQ2xvc2UgdGhlIHBhdGgKICAgIHJldHVybiBwYXRoCgoKY2xhc3MgUm91bmRlZExpbmsoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgc291cmNlLCB0YXJnZXQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PU5vbmUpCiAgICAgICAgc291cmNlLl9saW5rcy5hcHBlbmQoc2VsZikKICAgICAgICB0YXJnZXQuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHNlbGYuc291cmNlID0gc291cmNlCiAgICAgICAgc2VsZi50YXJnZXQgPSB0YXJnZXQKCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKCkKICAgICAgICBzZWxmLm1vdmUoKQoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZik6CiAgICAgICAgbSA9IDUwCiAgICAgICAgcmV0dXJuIHNlbGYucG9seWdvbi5ib3VuZGluZ1JlY3QoKS5hZGp1c3RlZCgtbSwgLW0sIG0sIG0pCgogICAgZGVmIHBhaW50KHNlbGYsIHBhaW50ZXIsIG9wdGlvbiwgd2lkZ2V0PU5vbmUpOgogICAgICAgIHJvdW5kZWRfcGF0aCA9IGZpbGxldF9wb2x5Z29uKHNlbGYucG9seWdvbiwgcj0zMCkKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFDb2xvcigibGlnaHRibHVlIiksIDUpKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgocm91bmRlZF9wYXRoKQoKICAgICAgICBwYWludGVyLnNldFBlbihRUGVuKFFCcnVzaCgicmVkIiksIDIsIFF0LlBlblN0eWxlLkRhc2hMaW5lKSkKICAgICAgICBkZWJ1Z19wYXRoID0gUVBhaW50ZXJQYXRoKCkKICAgICAgICBkZWJ1Z19wYXRoLmFkZFBvbHlnb24oc2VsZi5wb2x5Z29uKQogICAgICAgIHBhaW50ZXIuZHJhd1BhdGgoZGVidWdfcGF0aCkKCiAgICBkZWYgbW92ZShzZWxmKToKICAgICAgICBBID0gc2VsZi5zb3VyY2UucG9zKCkgKyBzZWxmLnNvdXJjZS5ib3VuZGluZ1JlY3QoKS5jZW50ZXIoKQogICAgICAgIEIgPSBzZWxmLnRhcmdldC5wb3MoKSArIHNlbGYudGFyZ2V0LmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgc2VsZi5wb2x5Z29uID0gUVBvbHlnb25GKAogICAgICAgICAgICBbQSwgUVBvaW50RihBLngoKSArIDUwLCBBLnkoKSksIFFQb2ludEYoQi54KCkgLSA1MCwgQi55KCkpLCBCXQogICAgICAgICkKICAgICAgICBzZWxmLnByZXBhcmVHZW9tZXRyeUNoYW5nZSgpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGUoUUdyYXBoaWNzRWxsaXBzZUl0ZW0pOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oMCwgMCwgMjUsIDI1KQogICAgICAgIHNlbGYuX2xpbmtzID0gW10KICAgICAgICBzZWxmLnNldEJydXNoKFFDb2xvcigib3JhbmdlIikpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uSXRlbUlzTW92YWJsZSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcykKCiAgICBkZWYgaXRlbUNoYW5nZShzZWxmLCBjaGFuZ2UsIHZhbHVlKToKICAgICAgICBpZiBjaGFuZ2UgPT0gUUdyYXBoaWNzSXRlbS5JdGVtU2NlbmVQb3NpdGlvbkhhc0NoYW5nZWQ6CiAgICAgICAgICAgIHByaW50KCJjaGFuZ2VkIiwgc2VsZi5fbGlua3MpCiAgICAgICAgICAgIGZvciBsaW5rIGluIHNlbGYuX2xpbmtzOgogICAgICAgICAgICAgICAgbGluay5tb3ZlKCkKICAgICAgICByZXR1cm4gc3VwZXIoKS5pdGVtQ2hhbmdlKGNoYW5nZSwgdmFsdWUpCgoKc2NlbmUuY2xlYXIoKQpuMSA9IE5vZGUoKQpuMS5zZXRQb3MoLTEzMSwgLTQ4KQpzY2VuZS5hZGRJdGVtKG4xKQpuMiA9IE5vZGUoKQpuMi5zZXRQb3MoMTIwLCAxODcpCnNjZW5lLmFkZEl0ZW0objIpCmxpbmsgPSBSb3VuZGVkTGluayhuMSwgbjIpCnNjZW5lLmFkZEl0ZW0obGluaykKbGluay5tb3ZlKCkK",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					760,
					1,
					"insert",
					{
						"characters": ",1"
					},
					"AgAAAMwCAAAAAAAAzQIAAAAAAAAAAAAAzQIAAAAAAADOAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAIAAAAAAADMAgAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAATQoAAAAAAABMCgAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUuUXRMaXZlQXBwIGltcG9ydCBkaXNwbGF5Cgp2aWV3ID0gUUdyYXBoaWNzVmlldygpCnNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQp2aWV3LnNldFNjZW5lKHNjZW5lKQpkaXNwbGF5KHZpZXcpCnByaW50KCJzZXR1cCIpCgojICUldXBkYXRlCmltcG9ydCBtYXRoCgoKZGVmIGZpbGxldF9wb2x5Z29uKHBvbHlnb246IFFQb2x5Z29uRiwgcjogZmxvYXQpIC0+IFFQYWludGVyUGF0aDoKICAgIHBvaW50cyA9IFtwb2x5Z29uLmF0KGkpIGZvciBpIGluIHJhbmdlKHBvbHlnb24uc2l6ZSgpKV0KICAgICMgU3RhcnQgdGhlIHBhdGgKICAgIHBhdGggPSBRUGFpbnRlclBhdGgoKQogICAgcGF0aC5tb3ZlVG8ocG9pbnRzWzBdKQogICAgZm9yIEEsIEIsIEMgaW4gemlwKHBvaW50cywgcG9pbnRzWzE6XSwgcG9pbnRzWzI6XSk6CiAgICAgICAgYTEgPSBtYXRoLmF0YW4yKEIueSgpIC0gQS55KCksIEIueCgpIC0gQS54KCkpCiAgICAgICAgYTIgPSAtbWF0aC5hdGFuMihDLnkoKSAtIEIueSgpLCBDLngoKSAtIEIueCgpKQogICAgICAgIHJlY3QgPSBRUmVjdEYoQiwgQiArIFFQb2ludEYociAqIDIsIHIgKiAyKSkKICAgICAgICBwYXRoLmFyY1RvKHJlY3QsIDAsMSkKICAgIHBhdGgubGluZVRvKHBvaW50c1stMV0pCgogICAgIyBDbG9zZSB0aGUgcGF0aAogICAgcmV0dXJuIHBhdGgKCgpjbGFzcyBSb3VuZGVkTGluayhRR3JhcGhpY3NJdGVtKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBzb3VyY2UsIHRhcmdldCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9Tm9uZSkKICAgICAgICBzb3VyY2UuX2xpbmtzLmFwcGVuZChzZWxmKQogICAgICAgIHRhcmdldC5fbGlua3MuYXBwZW5kKHNlbGYpCiAgICAgICAgc2VsZi5zb3VyY2UgPSBzb3VyY2UKICAgICAgICBzZWxmLnRhcmdldCA9IHRhcmdldAoKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoKQogICAgICAgIHNlbGYubW92ZSgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKToKICAgICAgICBtID0gNTAKICAgICAgICByZXR1cm4gc2VsZi5wb2x5Z29uLmJvdW5kaW5nUmVjdCgpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgcGFpbnQoc2VsZiwgcGFpbnRlciwgb3B0aW9uLCB3aWRnZXQ9Tm9uZSk6CiAgICAgICAgcm91bmRlZF9wYXRoID0gZmlsbGV0X3BvbHlnb24oc2VsZi5wb2x5Z29uLCByPTMwKQogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUNvbG9yKCJsaWdodGJsdWUiKSwgNSkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChyb3VuZGVkX3BhdGgpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKFFQZW4oUUJydXNoKCJyZWQiKSwgMiwgUXQuUGVuU3R5bGUuRGFzaExpbmUpKQogICAgICAgIGRlYnVnX3BhdGggPSBRUGFpbnRlclBhdGgoKQogICAgICAgIGRlYnVnX3BhdGguYWRkUG9seWdvbihzZWxmLnBvbHlnb24pCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChkZWJ1Z19wYXRoKQoKICAgIGRlZiBtb3ZlKHNlbGYpOgogICAgICAgIEEgPSBzZWxmLnNvdXJjZS5wb3MoKSArIHNlbGYuc291cmNlLmJvdW5kaW5nUmVjdCgpLmNlbnRlcigpCiAgICAgICAgQiA9IHNlbGYudGFyZ2V0LnBvcygpICsgc2VsZi50YXJnZXQuYm91bmRpbmdSZWN0KCkuY2VudGVyKCkKICAgICAgICBzZWxmLnBvbHlnb24gPSBRUG9seWdvbkYoCiAgICAgICAgICAgIFtBLCBRUG9pbnRGKEEueCgpICsgNTAsIEEueSgpKSwgUVBvaW50RihCLngoKSAtIDUwLCBCLnkoKSksIEJdCiAgICAgICAgKQogICAgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgoKY2xhc3MgTm9kZShRR3JhcGhpY3NFbGxpcHNlSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygwLCAwLCAyNSwgMjUpCiAgICAgICAgc2VsZi5fbGlua3MgPSBbXQogICAgICAgIHNlbGYuc2V0QnJ1c2goUUNvbG9yKCJvcmFuZ2UiKSkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5JdGVtSXNNb3ZhYmxlKQogICAgICAgIHNlbGYuc2V0RmxhZyhRR3JhcGhpY3NJdGVtLkl0ZW1TZW5kc1NjZW5lUG9zaXRpb25DaGFuZ2VzKQoKICAgIGRlZiBpdGVtQ2hhbmdlKHNlbGYsIGNoYW5nZSwgdmFsdWUpOgogICAgICAgIGlmIGNoYW5nZSA9PSBRR3JhcGhpY3NJdGVtLkl0ZW1TY2VuZVBvc2l0aW9uSGFzQ2hhbmdlZDoKICAgICAgICAgICAgcHJpbnQoImNoYW5nZWQiLCBzZWxmLl9saW5rcykKICAgICAgICAgICAgZm9yIGxpbmsgaW4gc2VsZi5fbGlua3M6CiAgICAgICAgICAgICAgICBsaW5rLm1vdmUoKQogICAgICAgIHJldHVybiBzdXBlcigpLml0ZW1DaGFuZ2UoY2hhbmdlLCB2YWx1ZSkKCgpzY2VuZS5jbGVhcigpCm4xID0gTm9kZSgpCm4xLnNldFBvcygtMTMxLCAtNDgpCnNjZW5lLmFkZEl0ZW0objEpCm4yID0gTm9kZSgpCm4yLnNldFBvcygxMjAsIDE4NykKc2NlbmUuYWRkSXRlbShuMikKbGluayA9IFJvdW5kZWRMaW5rKG4xLCBuMikKc2NlbmUuYWRkSXRlbShsaW5rKQpsaW5rLm1vdmUoKQo",
					"AQAAAAAAAAABAAAAzgIAAAAAAADOAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "pylive/NetworkXGraphEditor/nx_graph_model.py",
			"settings":
			{
				"buffer_size": 4437,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFALAAAAAAAAUQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQCwAAAAAAAFALAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAFELAAAAAAAAUgsAAAAAAAAAAAAAUgsAAAAAAABTCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABRCwAAAAAAAFELAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ":Hash"
					},
					"BQAAAFMLAAAAAAAAVAsAAAAAAAAAAAAAVAsAAAAAAABVCwAAAAAAAAAAAABVCwAAAAAAAFYLAAAAAAAAAAAAAFYLAAAAAAAAVwsAAAAAAAAAAAAAVwsAAAAAAABYCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTCwAAAAAAAFMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert_completion",
					{
						"completion": "lsp_select_completion {\"index\":0,\"session_name\":\"LSP-pyright\"}",
						"format": "command",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Hashable"
					},
					"AgAAAFQLAAAAAAAAVAsAAAAAAAAEAAAASGFzaFQLAAAAAAAAXAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYCwAAAAAAAFgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "|None"
					},
					"BQAAAFwLAAAAAAAAXQsAAAAAAAAAAAAAXQsAAAAAAABeCwAAAAAAAAAAAABeCwAAAAAAAF8LAAAAAAAAAAAAAF8LAAAAAAAAYAsAAAAAAAAAAAAAYAsAAAAAAABhCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcCwAAAAAAAFwLAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMYLAAAAAAAAyAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGCwAAAAAAAMYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAMcLAAAAAAAAyAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHCwAAAAAAAMcLAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAehEAAAAAAABhEQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKaW1wb3J0IG5ldHdvcmt4IGFzIG54Cgpmcm9tIHB5bGl2ZS51dGlscy5nZW8gaW1wb3J0IGludGVyc2VjdF9yYXlfd2l0aF9yZWN0YW5nbGUKCgpjbGFzcyBOWEdyYXBoTW9kZWwoUU9iamVjdCk6CiAgICBub2Rlc0FkZGVkOiBTaWduYWwgPSBTaWduYWwobGlzdCkgICMgTGlzdFtIYXNoYWJsZV0KICAgIG5vZGVzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpICAjIExpc3RbSGFzaGFibGVdCiAgICBub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgZGljdAogICAgKSAgIyBkaWN0W0hhc2hhYmxlLCBkaWN0W3N0ciwgQW55XV0KICAgIG5vZGVzUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpCgogICAgZWRnZXNBZGRlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzUHJvcGVydGllc0NoYW5nZWQ6IFNpZ25hbCA9IFNpZ25hbCgKICAgICAgICBkaWN0CiAgICApICAjIGRpY3RbVHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV0sIGRpY3Rbc3RyLCBBbnldXQogICAgZWRnZXNSZW1vdmVkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgbGlzdAogICAgKSAgIyBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBHOiBueC5NdWx0aURpR3JhcGggPSBueC5NdWx0aURpR3JhcGgoKSwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLkcgPSBHCgogICAgICAgIGZvciBuIGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgbm9kZSA9IHNlbGYuYWRkTm9kZShuYW1lPW4pCgogICAgICAgIGZvciBlIGluIHNlbGYuRy5lZGdlczoKICAgICAgICAgICAgdSwgdiwgayA9IGUKCiAgICAgICAgICAgIHNlbGYuYWRkRWRnZSh1LCB2LCBrKQoKICAgIGRlZiBwYXRjaChzZWxmLCBHOiBueC5NdWx0aURpR3JhcGgpOgogICAgICAgIC4uLgogICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IoIk5vdCB5ZXQgaW1wbGVtZW50ZWQiKQoKICAgIGRlZiBfX2RlbF9fKHNlbGYpOgogICAgICAgIGRlbCBzZWxmLkcKICAgICAgICAjIHNlbGYubm9kZXNBZGRlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNBYm91dFRvQmVSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5ub2Rlc1Byb3BlcnR5Q2hhbmdlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0FkZGVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZGlzY29ubmVjdCgpCiAgICAgICAgIyBzZWxmLmVkZ2VzUHJvcGVydHlDaGFuZ2VkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc1JlbW92ZWQuZGlzY29ubmVjdCgpCgogICAgZGVmIG5vZGVzKHNlbGYpIC0+IExpc3RbSGFzaGFibGVdOgogICAgICAgIHJldHVybiBbbiBmb3IgbiBpbiBzZWxmLkcubm9kZXNdCgogICAgZGVmIGFkZE5vZGUoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpIC0+IE5vbmU6CiAgICAgICAgIyBwcmludCgiYWRkIG5vZGU6ICd7bn0nIikKICAgICAgICBzZWxmLkcuYWRkX25vZGUobiwgKipwcm9wcykKICAgICAgICBzZWxmLm5vZGVzQWRkZWQuZW1pdChbbl0pCiAgICAgICAgc2VsZi5ub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoe246IHByb3BzfSkKCiAgICBkZWYgc2V0Tm9kZVByb3BlcnRpZXMoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpOgogICAgICAgICMgY2hhbmdlIGd1YXJkIFRPRE86IGZpbmQgcmVtb3ZlZCBwcm9wcwogICAgICAgIGNoYW5nZSA9IHt9CiAgICAgICAgZm9yIHByb3AsIHZhbHVlIGluIHByb3BzLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIHByb3Agbm90IGluIHNlbGYuRy5ub2Rlc1tuXSBvciB2YWx1ZSAhPSBzZWxmLkcubm9kZXNbbl1bcHJvcF06CiAgICAgICAgICAgICAgICBjaGFuZ2VbcHJvcF0gPSB2YWx1ZQogICAgICAgIG54LnNldF9ub2RlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7bjogY2hhbmdlfSkKICAgICAgICBzZWxmLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuZW1pdCh7bjogY2hhbmdlfSkKCiAgICBkZWYgaGFzTm9kZVByb3BlcnR5KHNlbGYsIG46SGFzaGFibGUsIG5hbWUsIC8pLT5ib29sOgogICAgICAgIHJldHVybiBuYW1lIGluIHNlbGYuRy5ub2Rlc1tuXQoKICAgIGRlZiBnZXROb2RlUHJvcGVydHkoc2VsZiwgbjogSGFzaGFibGUsIG5hbWUsIC8pIC0+IG9iamVjdDoKICAgICAgICByZXR1cm4gc2VsZi5HLm5vZGVzW25dW25hbWVdCgogICAgZGVmIGdldE5vZGVQcm9wZXJ0aWVzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3N0cl06CiAgICAgICAgcmV0dXJuIFtrZXkgZm9yIGtleSBpbiBzZWxmLkcubm9kZXNbbl0ua2V5cygpXQoKICAgIGRlZiByZW1vdmVOb2RlKHNlbGYsIG46IEhhc2hhYmxlKToKICAgICAgICBzZWxmLm5vZGVzQWJvdXRUb0JlUmVtb3ZlZC5lbWl0KFtuXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX25vZGUobikKICAgICAgICBzZWxmLm5vZGVzUmVtb3ZlZC5lbWl0KFtuXSkKCiAgICBkZWYgZWRnZXMoc2VsZiwgbjpIYXNoYWJsZXxOb25lKSAtPiBsaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXToKICAgICAgICByZXR1cm4gWyh1LCB2LCBrKSBmb3IgdSwgdiwgayBpbiBzZWxmLkcuZWRnZXMobildCgogICAgZGVmIGluRWRnZXMoc2VsZiwgbjogSGFzaGFibGUpIC0+IGxpc3RbdHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV1dOgogICAgICAgICIiInJldHJ1biBpbmNvbWluZyBlZGdlcyB0byB0aGUgbm9kZSIiIgogICAgICAgIHJldHVybiBbKHUsIHYsIGspIGZvciB1LCB2LCBrIGluIHNlbGYuRy5pbl9lZGdlcyhuLCBrZXlzPVRydWUpXQoKICAgIGRlZiBvdXRFZGdlcygKICAgICAgICBzZWxmLCBuOiBIYXNoYWJsZQogICAgKSAtPiBsaXN0W3R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXToKICAgICAgICAiIiJyZXRydW4gaW5jb21pbmcgZWRnZXMgdG8gdGhlIG5vZGUiIiIKICAgICAgICByZXR1cm4gWyh1LCB2LCBrKSBmb3IgdSwgdiwgayBpbiBzZWxmLkcub3V0X2VkZ2VzKG4sIGtleXM9VHJ1ZSldCgogICAgZGVmIGFkZEVkZ2UoCiAgICAgICAgc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSB8IE5vbmUgPSBOb25lLCAvLCAqKnByb3BzCiAgICApIC0+IE5vbmU6CiAgICAgICAgaWYgdSBub3QgaW4gc2VsZi5HLm5vZGVzOgogICAgICAgICAgICBzZWxmLmFkZE5vZGUodSkKICAgICAgICBpZiB2IG5vdCBpbiBzZWxmLkcubm9kZXM6CiAgICAgICAgICAgIHNlbGYuYWRkTm9kZSh2KQoKICAgICAgICBzZWxmLkcuYWRkX2VkZ2UodSwgdiwgaywgKipwcm9wcykKICAgICAgICBzZWxmLmVkZ2VzQWRkZWQuZW1pdChbKHUsIHYsIGspXSkKCiAgICBkZWYgcmVtb3ZlRWRnZShzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlKToKICAgICAgICBzZWxmLmVkZ2VzQWJvdXRUb0JlUmVtb3ZlZC5lbWl0KFsodSwgdiwgayldKQogICAgICAgIHNlbGYuRy5yZW1vdmVfZWRnZSh1LCB2LCBrKQogICAgICAgIHNlbGYuZWRnZXNSZW1vdmVkLmVtaXQoWyh1LCB2LCBrKV0pCgogICAgZGVmIHNldEVkZ2VQcm9wZXJ0aWVzKAogICAgICAgIHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUsIC8sICoqcHJvcHMKICAgICk6CiAgICAgICAgbnguc2V0X2VkZ2VfYXR0cmlidXRlcyhzZWxmLkcsIHsodSwgdiwgayk6IHByb3BzfSkKICAgICAgICBzZWxmLmVkZ2VzUHJvcGVydGllc0NoYW5nZWQuZW1pdChbKHUsIHYsIGspXSwgbGlzdChwcm9wcy5rZXlzKCkpKQoKICAgIGRlZiBnZXRFZGdlUHJvcGVydHkoc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSwgcHJvcCwgLyk6CiAgICAgICAgcmV0dXJuIHNlbGYuRy5lZGdlc1t1LCB2LCBrXVtwcm9wXQoKICAgIGRlZiBpc0VkZ2VBbGxvd2VkKHNlbGYsIHU6SGFzaGFibGUsIHY6SGFzaGFibGUsIGs6SGFzaGFibGUpLT5ib29sOgogICAgICAgIGlmIHUgPT0gdjoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADICwAAAAAAAMgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "=None"
					},
					"BQAAAHALAAAAAAAAcQsAAAAAAAAAAAAAcQsAAAAAAAByCwAAAAAAAAAAAAByCwAAAAAAAHMLAAAAAAAAAAAAAHMLAAAAAAAAdAsAAAAAAAAAAAAAdAsAAAAAAAB1CwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwCwAAAAAAAHALAAAAAAAAAAAAAADAbUA"
				],
				[
					65,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAgREAAAAAAAB/EQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKaW1wb3J0IG5ldHdvcmt4IGFzIG54Cgpmcm9tIHB5bGl2ZS51dGlscy5nZW8gaW1wb3J0IGludGVyc2VjdF9yYXlfd2l0aF9yZWN0YW5nbGUKCgpjbGFzcyBOWEdyYXBoTW9kZWwoUU9iamVjdCk6CiAgICBub2Rlc0FkZGVkOiBTaWduYWwgPSBTaWduYWwobGlzdCkgICMgTGlzdFtIYXNoYWJsZV0KICAgIG5vZGVzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpICAjIExpc3RbSGFzaGFibGVdCiAgICBub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgZGljdAogICAgKSAgIyBkaWN0W0hhc2hhYmxlLCBkaWN0W3N0ciwgQW55XV0KICAgIG5vZGVzUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpCgogICAgZWRnZXNBZGRlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzUHJvcGVydGllc0NoYW5nZWQ6IFNpZ25hbCA9IFNpZ25hbCgKICAgICAgICBkaWN0CiAgICApICAjIGRpY3RbVHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV0sIGRpY3Rbc3RyLCBBbnldXQogICAgZWRnZXNSZW1vdmVkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgbGlzdAogICAgKSAgIyBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBHOiBueC5NdWx0aURpR3JhcGggPSBueC5NdWx0aURpR3JhcGgoKSwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLkcgPSBHCgogICAgICAgIGZvciBuIGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgbm9kZSA9IHNlbGYuYWRkTm9kZShuYW1lPW4pCgogICAgICAgIGZvciBlIGluIHNlbGYuRy5lZGdlczoKICAgICAgICAgICAgdSwgdiwgayA9IGUKCiAgICAgICAgICAgIHNlbGYuYWRkRWRnZSh1LCB2LCBrKQoKICAgIGRlZiBwYXRjaChzZWxmLCBHOiBueC5NdWx0aURpR3JhcGgpOgogICAgICAgIC4uLgogICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IoIk5vdCB5ZXQgaW1wbGVtZW50ZWQiKQoKICAgIGRlZiBfX2RlbF9fKHNlbGYpOgogICAgICAgIGRlbCBzZWxmLkcKICAgICAgICAjIHNlbGYubm9kZXNBZGRlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNBYm91dFRvQmVSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5ub2Rlc1Byb3BlcnR5Q2hhbmdlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0FkZGVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZGlzY29ubmVjdCgpCiAgICAgICAgIyBzZWxmLmVkZ2VzUHJvcGVydHlDaGFuZ2VkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc1JlbW92ZWQuZGlzY29ubmVjdCgpCgogICAgZGVmIG5vZGVzKHNlbGYpIC0+IExpc3RbSGFzaGFibGVdOgogICAgICAgIHJldHVybiBbbiBmb3IgbiBpbiBzZWxmLkcubm9kZXNdCgogICAgZGVmIGFkZE5vZGUoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpIC0+IE5vbmU6CiAgICAgICAgIyBwcmludCgiYWRkIG5vZGU6ICd7bn0nIikKICAgICAgICBzZWxmLkcuYWRkX25vZGUobiwgKipwcm9wcykKICAgICAgICBzZWxmLm5vZGVzQWRkZWQuZW1pdChbbl0pCiAgICAgICAgc2VsZi5ub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoe246IHByb3BzfSkKCiAgICBkZWYgc2V0Tm9kZVByb3BlcnRpZXMoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpOgogICAgICAgICMgY2hhbmdlIGd1YXJkIFRPRE86IGZpbmQgcmVtb3ZlZCBwcm9wcwogICAgICAgIGNoYW5nZSA9IHt9CiAgICAgICAgZm9yIHByb3AsIHZhbHVlIGluIHByb3BzLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIHByb3Agbm90IGluIHNlbGYuRy5ub2Rlc1tuXSBvciB2YWx1ZSAhPSBzZWxmLkcubm9kZXNbbl1bcHJvcF06CiAgICAgICAgICAgICAgICBjaGFuZ2VbcHJvcF0gPSB2YWx1ZQogICAgICAgIG54LnNldF9ub2RlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7bjogY2hhbmdlfSkKICAgICAgICBzZWxmLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuZW1pdCh7bjogY2hhbmdlfSkKCiAgICBkZWYgaGFzTm9kZVByb3BlcnR5KHNlbGYsIG46IEhhc2hhYmxlLCBuYW1lLCAvKSAtPiBib29sOgogICAgICAgIHJldHVybiBuYW1lIGluIHNlbGYuRy5ub2Rlc1tuXQoKICAgIGRlZiBnZXROb2RlUHJvcGVydHkoc2VsZiwgbjogSGFzaGFibGUsIG5hbWUsIC8pIC0+IG9iamVjdDoKICAgICAgICByZXR1cm4gc2VsZi5HLm5vZGVzW25dW25hbWVdCgogICAgZGVmIGdldE5vZGVQcm9wZXJ0aWVzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3N0cl06CiAgICAgICAgcmV0dXJuIFtrZXkgZm9yIGtleSBpbiBzZWxmLkcubm9kZXNbbl0ua2V5cygpXQoKICAgIGRlZiByZW1vdmVOb2RlKHNlbGYsIG46IEhhc2hhYmxlKToKICAgICAgICBzZWxmLm5vZGVzQWJvdXRUb0JlUmVtb3ZlZC5lbWl0KFtuXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX25vZGUobikKICAgICAgICBzZWxmLm5vZGVzUmVtb3ZlZC5lbWl0KFtuXSkKCiAgICBkZWYgZWRnZXMoCiAgICAgICAgc2VsZiwgbjogSGFzaGFibGUgfCBOb25lPU5vbmUKICAgICkgLT4gbGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV06CiAgICAgICAgcmV0dXJuIFsodSwgdiwgaykgZm9yIHUsIHYsIGsgaW4gc2VsZi5HLmVkZ2VzKG4pXQoKICAgIGRlZiBpbkVkZ2VzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXToKICAgICAgICAiIiJyZXRydW4gaW5jb21pbmcgZWRnZXMgdG8gdGhlIG5vZGUiIiIKICAgICAgICByZXR1cm4gWyh1LCB2LCBrKSBmb3IgdSwgdiwgayBpbiBzZWxmLkcuaW5fZWRnZXMobiwga2V5cz1UcnVlKV0KCiAgICBkZWYgb3V0RWRnZXMoCiAgICAgICAgc2VsZiwgbjogSGFzaGFibGUKICAgICkgLT4gbGlzdFt0dXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV06CiAgICAgICAgIiIicmV0cnVuIGluY29taW5nIGVkZ2VzIHRvIHRoZSBub2RlIiIiCiAgICAgICAgcmV0dXJuIFsodSwgdiwgaykgZm9yIHUsIHYsIGsgaW4gc2VsZi5HLm91dF9lZGdlcyhuLCBrZXlzPVRydWUpXQoKICAgIGRlZiBhZGRFZGdlKAogICAgICAgIHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUgfCBOb25lID0gTm9uZSwgLywgKipwcm9wcwogICAgKSAtPiBOb25lOgogICAgICAgIGlmIHUgbm90IGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgc2VsZi5hZGROb2RlKHUpCiAgICAgICAgaWYgdiBub3QgaW4gc2VsZi5HLm5vZGVzOgogICAgICAgICAgICBzZWxmLmFkZE5vZGUodikKCiAgICAgICAgc2VsZi5HLmFkZF9lZGdlKHUsIHYsIGssICoqcHJvcHMpCiAgICAgICAgc2VsZi5lZGdlc0FkZGVkLmVtaXQoWyh1LCB2LCBrKV0pCgogICAgZGVmIHJlbW92ZUVkZ2Uoc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSk6CiAgICAgICAgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZW1pdChbKHUsIHYsIGspXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX2VkZ2UodSwgdiwgaykKICAgICAgICBzZWxmLmVkZ2VzUmVtb3ZlZC5lbWl0KFsodSwgdiwgayldKQoKICAgIGRlZiBzZXRFZGdlUHJvcGVydGllcygKICAgICAgICBzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlLCAvLCAqKnByb3BzCiAgICApOgogICAgICAgIG54LnNldF9lZGdlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7KHUsIHYsIGspOiBwcm9wc30pCiAgICAgICAgc2VsZi5lZGdlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoWyh1LCB2LCBrKV0sIGxpc3QocHJvcHMua2V5cygpKSkKCiAgICBkZWYgZ2V0RWRnZVByb3BlcnR5KHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUsIHByb3AsIC8pOgogICAgICAgIHJldHVybiBzZWxmLkcuZWRnZXNbdSwgdiwga11bcHJvcF0KCiAgICBkZWYgaXNFZGdlQWxsb3dlZChzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlKSAtPiBib29sOgogICAgICAgIGlmIHUgPT0gdjoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1CwAAAAAAAHULAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjCwAAAAAAAOMLAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " keys=T"
					},
					"BwAAAOQLAAAAAAAA5QsAAAAAAAAAAAAA5QsAAAAAAADmCwAAAAAAAAAAAADmCwAAAAAAAOcLAAAAAAAAAAAAAOcLAAAAAAAA6AsAAAAAAAAAAAAA6AsAAAAAAADpCwAAAAAAAAAAAADpCwAAAAAAAOoLAAAAAAAAAAAAAOoLAAAAAAAA6wsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkCwAAAAAAAOQLAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "rue"
					},
					"AwAAAOsLAAAAAAAA7AsAAAAAAAAAAAAA7AsAAAAAAADtCwAAAAAAAAAAAADtCwAAAAAAAO4LAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrCwAAAAAAAOsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAjBEAAAAAAACMEQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKaW1wb3J0IG5ldHdvcmt4IGFzIG54Cgpmcm9tIHB5bGl2ZS51dGlscy5nZW8gaW1wb3J0IGludGVyc2VjdF9yYXlfd2l0aF9yZWN0YW5nbGUKCgpjbGFzcyBOWEdyYXBoTW9kZWwoUU9iamVjdCk6CiAgICBub2Rlc0FkZGVkOiBTaWduYWwgPSBTaWduYWwobGlzdCkgICMgTGlzdFtIYXNoYWJsZV0KICAgIG5vZGVzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpICAjIExpc3RbSGFzaGFibGVdCiAgICBub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgZGljdAogICAgKSAgIyBkaWN0W0hhc2hhYmxlLCBkaWN0W3N0ciwgQW55XV0KICAgIG5vZGVzUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpCgogICAgZWRnZXNBZGRlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzUHJvcGVydGllc0NoYW5nZWQ6IFNpZ25hbCA9IFNpZ25hbCgKICAgICAgICBkaWN0CiAgICApICAjIGRpY3RbVHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV0sIGRpY3Rbc3RyLCBBbnldXQogICAgZWRnZXNSZW1vdmVkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgbGlzdAogICAgKSAgIyBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBHOiBueC5NdWx0aURpR3JhcGggPSBueC5NdWx0aURpR3JhcGgoKSwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLkcgPSBHCgogICAgICAgIGZvciBuIGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgbm9kZSA9IHNlbGYuYWRkTm9kZShuYW1lPW4pCgogICAgICAgIGZvciBlIGluIHNlbGYuRy5lZGdlczoKICAgICAgICAgICAgdSwgdiwgayA9IGUKCiAgICAgICAgICAgIHNlbGYuYWRkRWRnZSh1LCB2LCBrKQoKICAgIGRlZiBwYXRjaChzZWxmLCBHOiBueC5NdWx0aURpR3JhcGgpOgogICAgICAgIC4uLgogICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IoIk5vdCB5ZXQgaW1wbGVtZW50ZWQiKQoKICAgIGRlZiBfX2RlbF9fKHNlbGYpOgogICAgICAgIGRlbCBzZWxmLkcKICAgICAgICAjIHNlbGYubm9kZXNBZGRlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNBYm91dFRvQmVSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5ub2Rlc1Byb3BlcnR5Q2hhbmdlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0FkZGVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZGlzY29ubmVjdCgpCiAgICAgICAgIyBzZWxmLmVkZ2VzUHJvcGVydHlDaGFuZ2VkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc1JlbW92ZWQuZGlzY29ubmVjdCgpCgogICAgZGVmIG5vZGVzKHNlbGYpIC0+IExpc3RbSGFzaGFibGVdOgogICAgICAgIHJldHVybiBbbiBmb3IgbiBpbiBzZWxmLkcubm9kZXNdCgogICAgZGVmIGFkZE5vZGUoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpIC0+IE5vbmU6CiAgICAgICAgIyBwcmludCgiYWRkIG5vZGU6ICd7bn0nIikKICAgICAgICBzZWxmLkcuYWRkX25vZGUobiwgKipwcm9wcykKICAgICAgICBzZWxmLm5vZGVzQWRkZWQuZW1pdChbbl0pCiAgICAgICAgc2VsZi5ub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoe246IHByb3BzfSkKCiAgICBkZWYgc2V0Tm9kZVByb3BlcnRpZXMoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpOgogICAgICAgICMgY2hhbmdlIGd1YXJkIFRPRE86IGZpbmQgcmVtb3ZlZCBwcm9wcwogICAgICAgIGNoYW5nZSA9IHt9CiAgICAgICAgZm9yIHByb3AsIHZhbHVlIGluIHByb3BzLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIHByb3Agbm90IGluIHNlbGYuRy5ub2Rlc1tuXSBvciB2YWx1ZSAhPSBzZWxmLkcubm9kZXNbbl1bcHJvcF06CiAgICAgICAgICAgICAgICBjaGFuZ2VbcHJvcF0gPSB2YWx1ZQogICAgICAgIG54LnNldF9ub2RlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7bjogY2hhbmdlfSkKICAgICAgICBzZWxmLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuZW1pdCh7bjogY2hhbmdlfSkKCiAgICBkZWYgaGFzTm9kZVByb3BlcnR5KHNlbGYsIG46IEhhc2hhYmxlLCBuYW1lLCAvKSAtPiBib29sOgogICAgICAgIHJldHVybiBuYW1lIGluIHNlbGYuRy5ub2Rlc1tuXQoKICAgIGRlZiBnZXROb2RlUHJvcGVydHkoc2VsZiwgbjogSGFzaGFibGUsIG5hbWUsIC8pIC0+IG9iamVjdDoKICAgICAgICByZXR1cm4gc2VsZi5HLm5vZGVzW25dW25hbWVdCgogICAgZGVmIGdldE5vZGVQcm9wZXJ0aWVzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3N0cl06CiAgICAgICAgcmV0dXJuIFtrZXkgZm9yIGtleSBpbiBzZWxmLkcubm9kZXNbbl0ua2V5cygpXQoKICAgIGRlZiByZW1vdmVOb2RlKHNlbGYsIG46IEhhc2hhYmxlKToKICAgICAgICBzZWxmLm5vZGVzQWJvdXRUb0JlUmVtb3ZlZC5lbWl0KFtuXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX25vZGUobikKICAgICAgICBzZWxmLm5vZGVzUmVtb3ZlZC5lbWl0KFtuXSkKCiAgICBkZWYgZWRnZXMoCiAgICAgICAgc2VsZiwgbjogSGFzaGFibGUgfCBOb25lID0gTm9uZQogICAgKSAtPiBsaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXToKICAgICAgICByZXR1cm4gWyh1LCB2LCBrKSBmb3IgdSwgdiwgayBpbiBzZWxmLkcuZWRnZXMobiwga2V5cz1UcnVlKV0KCiAgICBkZWYgaW5FZGdlcyhzZWxmLCBuOiBIYXNoYWJsZSkgLT4gbGlzdFt0dXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV06CiAgICAgICAgIiIicmV0cnVuIGluY29taW5nIGVkZ2VzIHRvIHRoZSBub2RlIiIiCiAgICAgICAgcmV0dXJuIFsodSwgdiwgaykgZm9yIHUsIHYsIGsgaW4gc2VsZi5HLmluX2VkZ2VzKG4sIGtleXM9VHJ1ZSldCgogICAgZGVmIG91dEVkZ2VzKAogICAgICAgIHNlbGYsIG46IEhhc2hhYmxlCiAgICApIC0+IGxpc3RbdHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV1dOgogICAgICAgICIiInJldHJ1biBpbmNvbWluZyBlZGdlcyB0byB0aGUgbm9kZSIiIgogICAgICAgIHJldHVybiBbKHUsIHYsIGspIGZvciB1LCB2LCBrIGluIHNlbGYuRy5vdXRfZWRnZXMobiwga2V5cz1UcnVlKV0KCiAgICBkZWYgYWRkRWRnZSgKICAgICAgICBzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlIHwgTm9uZSA9IE5vbmUsIC8sICoqcHJvcHMKICAgICkgLT4gTm9uZToKICAgICAgICBpZiB1IG5vdCBpbiBzZWxmLkcubm9kZXM6CiAgICAgICAgICAgIHNlbGYuYWRkTm9kZSh1KQogICAgICAgIGlmIHYgbm90IGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgc2VsZi5hZGROb2RlKHYpCgogICAgICAgIHNlbGYuRy5hZGRfZWRnZSh1LCB2LCBrLCAqKnByb3BzKQogICAgICAgIHNlbGYuZWRnZXNBZGRlZC5lbWl0KFsodSwgdiwgayldKQoKICAgIGRlZiByZW1vdmVFZGdlKHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUpOgogICAgICAgIHNlbGYuZWRnZXNBYm91dFRvQmVSZW1vdmVkLmVtaXQoWyh1LCB2LCBrKV0pCiAgICAgICAgc2VsZi5HLnJlbW92ZV9lZGdlKHUsIHYsIGspCiAgICAgICAgc2VsZi5lZGdlc1JlbW92ZWQuZW1pdChbKHUsIHYsIGspXSkKCiAgICBkZWYgc2V0RWRnZVByb3BlcnRpZXMoCiAgICAgICAgc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSwgLywgKipwcm9wcwogICAgKToKICAgICAgICBueC5zZXRfZWRnZV9hdHRyaWJ1dGVzKHNlbGYuRywgeyh1LCB2LCBrKTogcHJvcHN9KQogICAgICAgIHNlbGYuZWRnZXNQcm9wZXJ0aWVzQ2hhbmdlZC5lbWl0KFsodSwgdiwgayldLCBsaXN0KHByb3BzLmtleXMoKSkpCgogICAgZGVmIGdldEVkZ2VQcm9wZXJ0eShzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlLCBwcm9wLCAvKToKICAgICAgICByZXR1cm4gc2VsZi5HLmVkZ2VzW3UsIHYsIGtdW3Byb3BdCgogICAgZGVmIGlzRWRnZUFsbG93ZWQoc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSkgLT4gYm9vbDoKICAgICAgICBpZiB1ID09IHY6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIHJldHVybiBUcnVlCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuCwAAAAAAAO4LAAAAAAAAAAAAAAAA8L8"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BQAAAE8LAAAAAAAAUAsAAAAAAAAAAAAAUAsAAAAAAABQCwAAAAAAAC0AAAAKICAgICAgICBzZWxmLCBuOiBIYXNoYWJsZSB8IE5vbmUgPSBOb25lCiAgICBQCwAAAAAAAFELAAAAAAAAAAAAAFELAAAAAAAAUgsAAAAAAAAAAAAAUgsAAAAAAABTCwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8CwAAAAAAAE8LAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"right_delete",
					null,
					"AQAAALgLAAAAAAAAuAsAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4CwAAAAAAALgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAALgLAAAAAAAAuQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4CwAAAAAAALgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"left_delete",
					null,
					"AQAAALoLAAAAAAAAugsAAAAAAAAMAAAALCBrZXlzPVRydWUp",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6CwAAAAAAAMYLAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAALsLAAAAAAAAvAsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7CwAAAAAAALsLAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAALkLAAAAAAAAuQsAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6CwAAAAAAALoLAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAALgLAAAAAAAAuAsAAAAAAAABAAAAW7gLAAAAAAAAuAsAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5CwAAAAAAALkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"right_delete",
					null,
					"AQAAALgLAAAAAAAAuAsAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4CwAAAAAAALgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAALgLAAAAAAAAuQsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4CwAAAAAAALgLAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAVREAAAAAAABVEQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0R3VpIGltcG9ydCAqCmZyb20gUHlTaWRlNi5RdENvcmUgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKaW1wb3J0IG5ldHdvcmt4IGFzIG54Cgpmcm9tIHB5bGl2ZS51dGlscy5nZW8gaW1wb3J0IGludGVyc2VjdF9yYXlfd2l0aF9yZWN0YW5nbGUKCgpjbGFzcyBOWEdyYXBoTW9kZWwoUU9iamVjdCk6CiAgICBub2Rlc0FkZGVkOiBTaWduYWwgPSBTaWduYWwobGlzdCkgICMgTGlzdFtIYXNoYWJsZV0KICAgIG5vZGVzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpICAjIExpc3RbSGFzaGFibGVdCiAgICBub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgZGljdAogICAgKSAgIyBkaWN0W0hhc2hhYmxlLCBkaWN0W3N0ciwgQW55XV0KICAgIG5vZGVzUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKGxpc3QpCgogICAgZWRnZXNBZGRlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzQWJvdXRUb0JlUmVtb3ZlZDogU2lnbmFsID0gU2lnbmFsKAogICAgICAgIGxpc3QKICAgICkgICMgTGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV0KICAgIGVkZ2VzUHJvcGVydGllc0NoYW5nZWQ6IFNpZ25hbCA9IFNpZ25hbCgKICAgICAgICBkaWN0CiAgICApICAjIGRpY3RbVHVwbGVbSGFzaGFibGUsIEhhc2hhYmxlLCBIYXNoYWJsZV0sIGRpY3Rbc3RyLCBBbnldXQogICAgZWRnZXNSZW1vdmVkOiBTaWduYWwgPSBTaWduYWwoCiAgICAgICAgbGlzdAogICAgKSAgIyBMaXN0W1R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXQoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBHOiBueC5NdWx0aURpR3JhcGggPSBueC5NdWx0aURpR3JhcGgoKSwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLkcgPSBHCgogICAgICAgIGZvciBuIGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgbm9kZSA9IHNlbGYuYWRkTm9kZShuYW1lPW4pCgogICAgICAgIGZvciBlIGluIHNlbGYuRy5lZGdlczoKICAgICAgICAgICAgdSwgdiwgayA9IGUKCiAgICAgICAgICAgIHNlbGYuYWRkRWRnZSh1LCB2LCBrKQoKICAgIGRlZiBwYXRjaChzZWxmLCBHOiBueC5NdWx0aURpR3JhcGgpOgogICAgICAgIC4uLgogICAgICAgIHJhaXNlIE5vdEltcGxlbWVudGVkRXJyb3IoIk5vdCB5ZXQgaW1wbGVtZW50ZWQiKQoKICAgIGRlZiBfX2RlbF9fKHNlbGYpOgogICAgICAgIGRlbCBzZWxmLkcKICAgICAgICAjIHNlbGYubm9kZXNBZGRlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNBYm91dFRvQmVSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5ub2Rlc1Byb3BlcnR5Q2hhbmdlZC5kaXNjb25uZWN0KCkKICAgICAgICAjIHNlbGYubm9kZXNSZW1vdmVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0FkZGVkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZGlzY29ubmVjdCgpCiAgICAgICAgIyBzZWxmLmVkZ2VzUHJvcGVydHlDaGFuZ2VkLmRpc2Nvbm5lY3QoKQogICAgICAgICMgc2VsZi5lZGdlc1JlbW92ZWQuZGlzY29ubmVjdCgpCgogICAgZGVmIG5vZGVzKHNlbGYpIC0+IExpc3RbSGFzaGFibGVdOgogICAgICAgIHJldHVybiBbbiBmb3IgbiBpbiBzZWxmLkcubm9kZXNdCgogICAgZGVmIGFkZE5vZGUoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpIC0+IE5vbmU6CiAgICAgICAgIyBwcmludCgiYWRkIG5vZGU6ICd7bn0nIikKICAgICAgICBzZWxmLkcuYWRkX25vZGUobiwgKipwcm9wcykKICAgICAgICBzZWxmLm5vZGVzQWRkZWQuZW1pdChbbl0pCiAgICAgICAgc2VsZi5ub2Rlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoe246IHByb3BzfSkKCiAgICBkZWYgc2V0Tm9kZVByb3BlcnRpZXMoc2VsZiwgbjogSGFzaGFibGUsIC8sICoqcHJvcHMpOgogICAgICAgICMgY2hhbmdlIGd1YXJkIFRPRE86IGZpbmQgcmVtb3ZlZCBwcm9wcwogICAgICAgIGNoYW5nZSA9IHt9CiAgICAgICAgZm9yIHByb3AsIHZhbHVlIGluIHByb3BzLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIHByb3Agbm90IGluIHNlbGYuRy5ub2Rlc1tuXSBvciB2YWx1ZSAhPSBzZWxmLkcubm9kZXNbbl1bcHJvcF06CiAgICAgICAgICAgICAgICBjaGFuZ2VbcHJvcF0gPSB2YWx1ZQogICAgICAgIG54LnNldF9ub2RlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7bjogY2hhbmdlfSkKICAgICAgICBzZWxmLm5vZGVzUHJvcGVydGllc0NoYW5nZWQuZW1pdCh7bjogY2hhbmdlfSkKCiAgICBkZWYgaGFzTm9kZVByb3BlcnR5KHNlbGYsIG46IEhhc2hhYmxlLCBuYW1lLCAvKSAtPiBib29sOgogICAgICAgIHJldHVybiBuYW1lIGluIHNlbGYuRy5ub2Rlc1tuXQoKICAgIGRlZiBnZXROb2RlUHJvcGVydHkoc2VsZiwgbjogSGFzaGFibGUsIG5hbWUsIC8pIC0+IG9iamVjdDoKICAgICAgICByZXR1cm4gc2VsZi5HLm5vZGVzW25dW25hbWVdCgogICAgZGVmIGdldE5vZGVQcm9wZXJ0aWVzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3N0cl06CiAgICAgICAgcmV0dXJuIFtrZXkgZm9yIGtleSBpbiBzZWxmLkcubm9kZXNbbl0ua2V5cygpXQoKICAgIGRlZiByZW1vdmVOb2RlKHNlbGYsIG46IEhhc2hhYmxlKToKICAgICAgICBzZWxmLm5vZGVzQWJvdXRUb0JlUmVtb3ZlZC5lbWl0KFtuXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX25vZGUobikKICAgICAgICBzZWxmLm5vZGVzUmVtb3ZlZC5lbWl0KFtuXSkKCiAgICBkZWYgZWRnZXMoc2VsZikgLT4gbGlzdFtUdXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV06CiAgICAgICAgcmV0dXJuIFsodSwgdiwgaykgZm9yIHUsIHYsIGsgaW4gc2VsZi5HLmVkZ2VzXQoKICAgIGRlZiBpbkVkZ2VzKHNlbGYsIG46IEhhc2hhYmxlKSAtPiBsaXN0W3R1cGxlW0hhc2hhYmxlLCBIYXNoYWJsZSwgSGFzaGFibGVdXToKICAgICAgICAiIiJyZXRydW4gaW5jb21pbmcgZWRnZXMgdG8gdGhlIG5vZGUiIiIKICAgICAgICByZXR1cm4gWyh1LCB2LCBrKSBmb3IgdSwgdiwgayBpbiBzZWxmLkcuaW5fZWRnZXMobiwga2V5cz1UcnVlKV0KCiAgICBkZWYgb3V0RWRnZXMoCiAgICAgICAgc2VsZiwgbjogSGFzaGFibGUKICAgICkgLT4gbGlzdFt0dXBsZVtIYXNoYWJsZSwgSGFzaGFibGUsIEhhc2hhYmxlXV06CiAgICAgICAgIiIicmV0cnVuIGluY29taW5nIGVkZ2VzIHRvIHRoZSBub2RlIiIiCiAgICAgICAgcmV0dXJuIFsodSwgdiwgaykgZm9yIHUsIHYsIGsgaW4gc2VsZi5HLm91dF9lZGdlcyhuLCBrZXlzPVRydWUpXQoKICAgIGRlZiBhZGRFZGdlKAogICAgICAgIHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUgfCBOb25lID0gTm9uZSwgLywgKipwcm9wcwogICAgKSAtPiBOb25lOgogICAgICAgIGlmIHUgbm90IGluIHNlbGYuRy5ub2RlczoKICAgICAgICAgICAgc2VsZi5hZGROb2RlKHUpCiAgICAgICAgaWYgdiBub3QgaW4gc2VsZi5HLm5vZGVzOgogICAgICAgICAgICBzZWxmLmFkZE5vZGUodikKCiAgICAgICAgc2VsZi5HLmFkZF9lZGdlKHUsIHYsIGssICoqcHJvcHMpCiAgICAgICAgc2VsZi5lZGdlc0FkZGVkLmVtaXQoWyh1LCB2LCBrKV0pCgogICAgZGVmIHJlbW92ZUVkZ2Uoc2VsZiwgdTogSGFzaGFibGUsIHY6IEhhc2hhYmxlLCBrOiBIYXNoYWJsZSk6CiAgICAgICAgc2VsZi5lZGdlc0Fib3V0VG9CZVJlbW92ZWQuZW1pdChbKHUsIHYsIGspXSkKICAgICAgICBzZWxmLkcucmVtb3ZlX2VkZ2UodSwgdiwgaykKICAgICAgICBzZWxmLmVkZ2VzUmVtb3ZlZC5lbWl0KFsodSwgdiwgayldKQoKICAgIGRlZiBzZXRFZGdlUHJvcGVydGllcygKICAgICAgICBzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlLCAvLCAqKnByb3BzCiAgICApOgogICAgICAgIG54LnNldF9lZGdlX2F0dHJpYnV0ZXMoc2VsZi5HLCB7KHUsIHYsIGspOiBwcm9wc30pCiAgICAgICAgc2VsZi5lZGdlc1Byb3BlcnRpZXNDaGFuZ2VkLmVtaXQoWyh1LCB2LCBrKV0sIGxpc3QocHJvcHMua2V5cygpKSkKCiAgICBkZWYgZ2V0RWRnZVByb3BlcnR5KHNlbGYsIHU6IEhhc2hhYmxlLCB2OiBIYXNoYWJsZSwgazogSGFzaGFibGUsIHByb3AsIC8pOgogICAgICAgIHJldHVybiBzZWxmLkcuZWRnZXNbdSwgdiwga11bcHJvcF0KCiAgICBkZWYgaXNFZGdlQWxsb3dlZChzZWxmLCB1OiBIYXNoYWJsZSwgdjogSGFzaGFibGUsIGs6IEhhc2hhYmxlKSAtPiBib29sOgogICAgICAgIGlmIHUgPT0gdjoKICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgcmV0dXJuIFRydWUK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5CwAAAAAAALkLAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "pylive/NetworkXGraphEditor/nx_graph_shapes.py",
			"settings":
			{
				"buffer_size": 13664,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					123,
					1,
					"insert",
					{
						"characters": "there"
					},
					"BQAAAIUiAAAAAAAAhiIAAAAAAAAAAAAAhiIAAAAAAACHIgAAAAAAAAAAAACHIgAAAAAAAIgiAAAAAAAAAAAAAIgiAAAAAAAAiSIAAAAAAAAAAAAAiSIAAAAAAACKIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhSIAAAAAAACFIgAAAAAAAAAAAAAAEHVA"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAAIoiAAAAAAAAiyIAAAAAAAAAAAAAiyIAAAAAAACMIgAAAAAAAAAAAACMIgAAAAAAAI0iAAAAAAAAAAAAAI0iAAAAAAAAjiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiiIAAAAAAACKIgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " several"
					},
					"CAAAAI4iAAAAAAAAjyIAAAAAAAAAAAAAjyIAAAAAAACQIgAAAAAAAAAAAACQIgAAAAAAAJEiAAAAAAAAAAAAAJEiAAAAAAAAkiIAAAAAAAAAAAAAkiIAAAAAAACTIgAAAAAAAAAAAACTIgAAAAAAAJQiAAAAAAAAAAAAAJQiAAAAAAAAlSIAAAAAAAAAAAAAlSIAAAAAAACWIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjiIAAAAAAACOIgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " ways"
					},
					"BQAAAJYiAAAAAAAAlyIAAAAAAAAAAAAAlyIAAAAAAACYIgAAAAAAAAAAAACYIgAAAAAAAJkiAAAAAAAAAAAAAJkiAAAAAAAAmiIAAAAAAAAAAAAAmiIAAAAAAACbIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliIAAAAAAACWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAJsiAAAAAAAAnCIAAAAAAAAAAAAAnCIAAAAAAACdIgAAAAAAAAAAAACdIgAAAAAAAJ4iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyIAAAAAAACbIgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " update"
					},
					"BwAAAJ4iAAAAAAAAnyIAAAAAAAAAAAAAnyIAAAAAAACgIgAAAAAAAAAAAACgIgAAAAAAAKEiAAAAAAAAAAAAAKEiAAAAAAAAoiIAAAAAAAAAAAAAoiIAAAAAAACjIgAAAAAAAAAAAACjIgAAAAAAAKQiAAAAAAAAAAAAAKQiAAAAAAAApSIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAniIAAAAAAACeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAKUiAAAAAAAApiIAAAAAAAAAAAAApiIAAAAAAACnIgAAAAAAAAAAAACnIgAAAAAAAKgiAAAAAAAAAAAAAKgiAAAAAAAAqSIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApSIAAAAAAAClIgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " link"
					},
					"BQAAAKkiAAAAAAAAqiIAAAAAAAAAAAAAqiIAAAAAAACrIgAAAAAAAAAAAACrIgAAAAAAAKwiAAAAAAAAAAAAAKwiAAAAAAAArSIAAAAAAAAAAAAArSIAAAAAAACuIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqSIAAAAAAACpIgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": " position"
					},
					"CQAAAK4iAAAAAAAAryIAAAAAAAAAAAAAryIAAAAAAACwIgAAAAAAAAAAAACwIgAAAAAAALEiAAAAAAAAAAAAALEiAAAAAAAAsiIAAAAAAAAAAAAAsiIAAAAAAACzIgAAAAAAAAAAAACzIgAAAAAAALQiAAAAAAAAAAAAALQiAAAAAAAAtSIAAAAAAAAAAAAAtSIAAAAAAAC2IgAAAAAAAAAAAAC2IgAAAAAAALciAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAriIAAAAAAACuIgAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " eg:"
					},
					"BAAAALciAAAAAAAAuCIAAAAAAAAAAAAAuCIAAAAAAAC5IgAAAAAAAAAAAAC5IgAAAAAAALoiAAAAAAAAAAAAALoiAAAAAAAAuyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtyIAAAAAAAC3IgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": " subcla"
					},
					"BwAAALsiAAAAAAAAvCIAAAAAAAAAAAAAvCIAAAAAAAC9IgAAAAAAAAAAAAC9IgAAAAAAAL4iAAAAAAAAAAAAAL4iAAAAAAAAvyIAAAAAAAAAAAAAvyIAAAAAAADAIgAAAAAAAAAAAADAIgAAAAAAAMEiAAAAAAAAAAAAAMEiAAAAAAAAwiIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuyIAAAAAAAC7IgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "ssing"
					},
					"BQAAAMIiAAAAAAAAwyIAAAAAAAAAAAAAwyIAAAAAAADEIgAAAAAAAAAAAADEIgAAAAAAAMUiAAAAAAAAAAAAAMUiAAAAAAAAxiIAAAAAAAAAAAAAxiIAAAAAAADHIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwiIAAAAAAADCIgAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAMciAAAAAAAAyCIAAAAAAAAAAAAAyCIAAAAAAADJIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxyIAAAAAAADHIgAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " QGraphicsIte"
					},
					"DQAAAMkiAAAAAAAAyiIAAAAAAAAAAAAAyiIAAAAAAADLIgAAAAAAAAAAAADLIgAAAAAAAMwiAAAAAAAAAAAAAMwiAAAAAAAAzSIAAAAAAAAAAAAAzSIAAAAAAADOIgAAAAAAAAAAAADOIgAAAAAAAM8iAAAAAAAAAAAAAM8iAAAAAAAA0CIAAAAAAAAAAAAA0CIAAAAAAADRIgAAAAAAAAAAAADRIgAAAAAAANIiAAAAAAAAAAAAANIiAAAAAAAA0yIAAAAAAAAAAAAA0yIAAAAAAADUIgAAAAAAAAAAAADUIgAAAAAAANUiAAAAAAAAAAAAANUiAAAAAAAA1iIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAySIAAAAAAADJIgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAANYiAAAAAAAA1yIAAAAAAAAAAAAA1yIAAAAAAADYIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1iIAAAAAAADWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AwAAANgiAAAAAAAA2SIAAAAAAAAAAAAA2SIAAAAAAADhIgAAAAAAAAAAAADhIgAAAAAAAOIiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2CIAAAAAAADYIgAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": " storing"
					},
					"CAAAAOIiAAAAAAAA4yIAAAAAAAAAAAAA4yIAAAAAAADkIgAAAAAAAAAAAADkIgAAAAAAAOUiAAAAAAAAAAAAAOUiAAAAAAAA5iIAAAAAAAAAAAAA5iIAAAAAAADnIgAAAAAAAAAAAADnIgAAAAAAAOgiAAAAAAAAAAAAAOgiAAAAAAAA6SIAAAAAAAAAAAAA6SIAAAAAAADqIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4iIAAAAAAADiIgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": " connected"
					},
					"CgAAAOoiAAAAAAAA6yIAAAAAAAAAAAAA6yIAAAAAAADsIgAAAAAAAAAAAADsIgAAAAAAAO0iAAAAAAAAAAAAAO0iAAAAAAAA7iIAAAAAAAAAAAAA7iIAAAAAAADvIgAAAAAAAAAAAADvIgAAAAAAAPAiAAAAAAAAAAAAAPAiAAAAAAAA8SIAAAAAAAAAAAAA8SIAAAAAAADyIgAAAAAAAAAAAADyIgAAAAAAAPMiAAAAAAAAAAAAAPMiAAAAAAAA9CIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6iIAAAAAAADqIgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " edges"
					},
					"BgAAAPQiAAAAAAAA9SIAAAAAAAAAAAAA9SIAAAAAAAD2IgAAAAAAAAAAAAD2IgAAAAAAAPciAAAAAAAAAAAAAPciAAAAAAAA+CIAAAAAAAAAAAAA+CIAAAAAAAD5IgAAAAAAAAAAAAD5IgAAAAAAAPoiAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9CIAAAAAAAD0IgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					5,
					"left_delete",
					null,
					"BQAAAPkiAAAAAAAA+SIAAAAAAAABAAAAc/giAAAAAAAA+CIAAAAAAAABAAAAZfciAAAAAAAA9yIAAAAAAAABAAAAZ/YiAAAAAAAA9iIAAAAAAAABAAAAZPUiAAAAAAAA9SIAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAA+iIAAAAAAAD6IgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "link,"
					},
					"BQAAAPUiAAAAAAAA9iIAAAAAAAAAAAAA9iIAAAAAAAD3IgAAAAAAAAAAAAD3IgAAAAAAAPgiAAAAAAAAAAAAAPgiAAAAAAAA+SIAAAAAAAAAAAAA+SIAAAAAAAD6IgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9SIAAAAAAAD1IgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAPoiAAAAAAAA+yIAAAAAAAAAAAAA+yIAAAAAAAD8IgAAAAAAAAAAAAD8IgAAAAAAAP0iAAAAAAAAAAAAAP0iAAAAAAAA/iIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+iIAAAAAAAD6IgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " update"
					},
					"BwAAAP4iAAAAAAAA/yIAAAAAAAAAAAAA/yIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAEjAAAAAAAAAAAAAAEjAAAAAAAAAiMAAAAAAAAAAAAAAiMAAAAAAAADIwAAAAAAAAAAAAADIwAAAAAAAAQjAAAAAAAAAAAAAAQjAAAAAAAABSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/iIAAAAAAAD+IgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAAUjAAAAAAAABiMAAAAAAAAAAAAABiMAAAAAAAAHIwAAAAAAAAAAAAAHIwAAAAAAAAgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABSMAAAAAAAAFIwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " itemChange"
					},
					"CwAAAAgjAAAAAAAACSMAAAAAAAAAAAAACSMAAAAAAAAKIwAAAAAAAAAAAAAKIwAAAAAAAAsjAAAAAAAAAAAAAAsjAAAAAAAADCMAAAAAAAAAAAAADCMAAAAAAAANIwAAAAAAAAAAAAANIwAAAAAAAA4jAAAAAAAAAAAAAA4jAAAAAAAADyMAAAAAAAAAAAAADyMAAAAAAAAQIwAAAAAAAAAAAAAQIwAAAAAAABEjAAAAAAAAAAAAABEjAAAAAAAAEiMAAAAAAAAAAAAAEiMAAAAAAAATIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACCMAAAAAAAAIIwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABMjAAAAAAAAFCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEyMAAAAAAAATIwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAABQjAAAAAAAAFSMAAAAAAAAAAAAAFSMAAAAAAAAWIwAAAAAAAAAAAAAWIwAAAAAAABcjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCMAAAAAAAAUIwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": " by"
					},
					"AwAAABcjAAAAAAAAGCMAAAAAAAAAAAAAGCMAAAAAAAAZIwAAAAAAAAAAAAAZIwAAAAAAABojAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFyMAAAAAAAAXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": " subcla"
					},
					"BwAAABojAAAAAAAAGyMAAAAAAAAAAAAAGyMAAAAAAAAcIwAAAAAAAAAAAAAcIwAAAAAAAB0jAAAAAAAAAAAAAB0jAAAAAAAAHiMAAAAAAAAAAAAAHiMAAAAAAAAfIwAAAAAAAAAAAAAfIwAAAAAAACAjAAAAAAAAAAAAACAjAAAAAAAAISMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGiMAAAAAAAAaIwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					6,
					"left_delete",
					null,
					"BgAAACAjAAAAAAAAICMAAAAAAAABAAAAYR8jAAAAAAAAHyMAAAAAAAABAAAAbB4jAAAAAAAAHiMAAAAAAAABAAAAYx0jAAAAAAAAHSMAAAAAAAABAAAAYhwjAAAAAAAAHCMAAAAAAAABAAAAdRsjAAAAAAAAGyMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAISMAAAAAAAAhIwAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "using"
					},
					"BQAAABsjAAAAAAAAHCMAAAAAAAAAAAAAHCMAAAAAAAAdIwAAAAAAAAAAAAAdIwAAAAAAAB4jAAAAAAAAAAAAAB4jAAAAAAAAHyMAAAAAAAAAAAAAHyMAAAAAAAAgIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGyMAAAAAAAAbIwAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " QGraphicsW"
					},
					"CwAAACAjAAAAAAAAISMAAAAAAAAAAAAAISMAAAAAAAAiIwAAAAAAAAAAAAAiIwAAAAAAACMjAAAAAAAAAAAAACMjAAAAAAAAJCMAAAAAAAAAAAAAJCMAAAAAAAAlIwAAAAAAAAAAAAAlIwAAAAAAACYjAAAAAAAAAAAAACYjAAAAAAAAJyMAAAAAAAAAAAAAJyMAAAAAAAAoIwAAAAAAAAAAAAAoIwAAAAAAACkjAAAAAAAAAAAAACkjAAAAAAAAKiMAAAAAAAAAAAAAKiMAAAAAAAArIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAICMAAAAAAAAgIwAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "idgets,"
					},
					"BwAAACsjAAAAAAAALCMAAAAAAAAAAAAALCMAAAAAAAAtIwAAAAAAAAAAAAAtIwAAAAAAAC4jAAAAAAAAAAAAAC4jAAAAAAAALyMAAAAAAAAAAAAALyMAAAAAAAAwIwAAAAAAAAAAAAAwIwAAAAAAADEjAAAAAAAAAAAAADEjAAAAAAAAMiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyMAAAAAAAArIwAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAADIjAAAAAAAAMyMAAAAAAAAAAAAAMyMAAAAAAAA0IwAAAAAAAAAAAAA0IwAAAAAAADUjAAAAAAAAAAAAADUjAAAAAAAANiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMiMAAAAAAAAyIwAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " connect"
					},
					"CAAAADYjAAAAAAAANyMAAAAAAAAAAAAANyMAAAAAAAA4IwAAAAAAAAAAAAA4IwAAAAAAADkjAAAAAAAAAAAAADkjAAAAAAAAOiMAAAAAAAAAAAAAOiMAAAAAAAA7IwAAAAAAAAAAAAA7IwAAAAAAADwjAAAAAAAAAAAAADwjAAAAAAAAPSMAAAAAAAAAAAAAPSMAAAAAAAA+IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANiMAAAAAAAA2IwAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AwAAAD4jAAAAAAAAPyMAAAAAAAAAAAAAPyMAAAAAAABHIwAAAAAAAAAAAABHIwAAAAAAAEgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPiMAAAAAAAA+IwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAEgjAAAAAAAASSMAAAAAAAAAAAAASSMAAAAAAABKIwAAAAAAAAAAAABKIwAAAAAAAEsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASCMAAAAAAABIIwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAEsjAAAAAAAATCMAAAAAAAAAAAAATCMAAAAAAABNIwAAAAAAAAAAAABNIwAAAAAAAE4jAAAAAAAAAAAAAE4jAAAAAAAATyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASyMAAAAAAABLIwAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": " geome"
					},
					"BgAAAE8jAAAAAAAAUCMAAAAAAAAAAAAAUCMAAAAAAABRIwAAAAAAAAAAAABRIwAAAAAAAFIjAAAAAAAAAAAAAFIjAAAAAAAAUyMAAAAAAAAAAAAAUyMAAAAAAABUIwAAAAAAAAAAAABUIwAAAAAAAFUjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATyMAAAAAAABPIwAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "tryChange"
					},
					"CQAAAFUjAAAAAAAAViMAAAAAAAAAAAAAViMAAAAAAABXIwAAAAAAAAAAAABXIwAAAAAAAFgjAAAAAAAAAAAAAFgjAAAAAAAAWSMAAAAAAAAAAAAAWSMAAAAAAABaIwAAAAAAAAAAAABaIwAAAAAAAFsjAAAAAAAAAAAAAFsjAAAAAAAAXCMAAAAAAAAAAAAAXCMAAAAAAABdIwAAAAAAAAAAAABdIwAAAAAAAF4jAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVSMAAAAAAABVIwAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": " signal,"
					},
					"CAAAAF4jAAAAAAAAXyMAAAAAAAAAAAAAXyMAAAAAAABgIwAAAAAAAAAAAABgIwAAAAAAAGEjAAAAAAAAAAAAAGEjAAAAAAAAYiMAAAAAAAAAAAAAYiMAAAAAAABjIwAAAAAAAAAAAABjIwAAAAAAAGQjAAAAAAAAAAAAAGQjAAAAAAAAZSMAAAAAAAAAAAAAZSMAAAAAAABmIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXiMAAAAAAABeIwAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGYjAAAAAAAAZyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZiMAAAAAAABmIwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGcjAAAAAAAAaSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZyMAAAAAAABnIwAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "thi"
					},
					"AwAAAGgjAAAAAAAAaSMAAAAAAAAAAAAAaSMAAAAAAABqIwAAAAAAAAAAAABqIwAAAAAAAGsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCMAAAAAAABoIwAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAGsjAAAAAAAAbCMAAAAAAAAAAAAAbCMAAAAAAABtIwAAAAAAAAAAAABtIwAAAAAAAG4jAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAayMAAAAAAABrIwAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAG4jAAAAAAAAbyMAAAAAAAAAAAAAbyMAAAAAAABwIwAAAAAAAAAAAABwIwAAAAAAAHEjAAAAAAAAAAAAAHEjAAAAAAAAciMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbiMAAAAAAABuIwAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": " scene"
					},
					"BgAAAHIjAAAAAAAAcyMAAAAAAAAAAAAAcyMAAAAAAAB0IwAAAAAAAAAAAAB0IwAAAAAAAHUjAAAAAAAAAAAAAHUjAAAAAAAAdiMAAAAAAAAAAAAAdiMAAAAAAAB3IwAAAAAAAAAAAAB3IwAAAAAAAHgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAciMAAAAAAAByIwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " position"
					},
					"CQAAAHgjAAAAAAAAeSMAAAAAAAAAAAAAeSMAAAAAAAB6IwAAAAAAAAAAAAB6IwAAAAAAAHsjAAAAAAAAAAAAAHsjAAAAAAAAfCMAAAAAAAAAAAAAfCMAAAAAAAB9IwAAAAAAAAAAAAB9IwAAAAAAAH4jAAAAAAAAAAAAAH4jAAAAAAAAfyMAAAAAAAAAAAAAfyMAAAAAAACAIwAAAAAAAAAAAACAIwAAAAAAAIEjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeCMAAAAAAAB4IwAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "pay"
					},
					"AwAAAGgjAAAAAAAAaSMAAAAAAAAAAAAAaSMAAAAAAABqIwAAAAAAAAAAAABqIwAAAAAAAGsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCMAAAAAAABoIwAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " attention"
					},
					"CgAAAGsjAAAAAAAAbCMAAAAAAAAAAAAAbCMAAAAAAABtIwAAAAAAAAAAAABtIwAAAAAAAG4jAAAAAAAAAAAAAG4jAAAAAAAAbyMAAAAAAAAAAAAAbyMAAAAAAABwIwAAAAAAAAAAAABwIwAAAAAAAHEjAAAAAAAAAAAAAHEjAAAAAAAAciMAAAAAAAAAAAAAciMAAAAAAABzIwAAAAAAAAAAAABzIwAAAAAAAHQjAAAAAAAAAAAAAHQjAAAAAAAAdSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAayMAAAAAAABrIwAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAHUjAAAAAAAAdiMAAAAAAAAAAAAAdiMAAAAAAAB3IwAAAAAAAAAAAAB3IwAAAAAAAHgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdSMAAAAAAAB1IwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHgjAAAAAAAAeSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeCMAAAAAAAB4IwAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHwjAAAAAAAAfSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfCMAAAAAAAB8IwAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAIQjAAAAAAAAhSMAAAAAAAAAAAAAhSMAAAAAAACGIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhCMAAAAAAACEIwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AgAAAIEjAAAAAAAAgiMAAAAAAAAAAAAAgiMAAAAAAACCIwAAAAAAAAsAAABub3QgYSBzY2VuZQ",
					"AQAAAAAAAAABAAAAgSMAAAAAAACMIwAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": " local"
					},
					"BgAAAIIjAAAAAAAAgyMAAAAAAAAAAAAAgyMAAAAAAACEIwAAAAAAAAAAAACEIwAAAAAAAIUjAAAAAAAAAAAAAIUjAAAAAAAAhiMAAAAAAAAAAAAAhiMAAAAAAACHIwAAAAAAAAAAAACHIwAAAAAAAIgjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgiMAAAAAAACCIwAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AwAAAJIjAAAAAAAAkyMAAAAAAAAAAAAAkyMAAAAAAACbIwAAAAAAAAAAAACbIwAAAAAAAJwjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkiMAAAAAAACSIwAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJwjAAAAAAAAnSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnCMAAAAAAACcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "with"
					},
					"BAAAAJ0jAAAAAAAAniMAAAAAAAAAAAAAniMAAAAAAACfIwAAAAAAAAAAAACfIwAAAAAAAKAjAAAAAAAAAAAAAKAjAAAAAAAAoSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnSMAAAAAAACdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAKEjAAAAAAAAoiMAAAAAAAAAAAAAoiMAAAAAAACjIwAAAAAAAAAAAACjIwAAAAAAAKQjAAAAAAAAAAAAAKQjAAAAAAAApSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoSMAAAAAAAChIwAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": " netwo"
					},
					"BgAAAKUjAAAAAAAApiMAAAAAAAAAAAAApiMAAAAAAACnIwAAAAAAAAAAAACnIwAAAAAAAKgjAAAAAAAAAAAAAKgjAAAAAAAAqSMAAAAAAAAAAAAAqSMAAAAAAACqIwAAAAAAAAAAAACqIwAAAAAAAKsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApSMAAAAAAAClIwAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "rk"
					},
					"AgAAAKsjAAAAAAAArCMAAAAAAAAAAAAArCMAAAAAAACtIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqyMAAAAAAACrIwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					16,
					"left_delete",
					null,
					"EAAAAKwjAAAAAAAArCMAAAAAAAABAAAAa6sjAAAAAAAAqyMAAAAAAAABAAAAcqojAAAAAAAAqiMAAAAAAAABAAAAb6kjAAAAAAAAqSMAAAAAAAABAAAAd6gjAAAAAAAAqCMAAAAAAAABAAAAdKcjAAAAAAAApyMAAAAAAAABAAAAZaYjAAAAAAAApiMAAAAAAAABAAAAbqUjAAAAAAAApSMAAAAAAAABAAAAIKQjAAAAAAAApCMAAAAAAAABAAAAZaMjAAAAAAAAoyMAAAAAAAABAAAAaKIjAAAAAAAAoiMAAAAAAAABAAAAdKEjAAAAAAAAoSMAAAAAAAABAAAAIKAjAAAAAAAAoCMAAAAAAAABAAAAaJ8jAAAAAAAAnyMAAAAAAAABAAAAdJ4jAAAAAAAAniMAAAAAAAABAAAAaZ0jAAAAAAAAnSMAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAArSMAAAAAAACtIwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAJ0jAAAAAAAAniMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnSMAAAAAAACdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " would"
					},
					"BgAAAJ4jAAAAAAAAnyMAAAAAAAAAAAAAnyMAAAAAAACgIwAAAAAAAAAAAACgIwAAAAAAAKEjAAAAAAAAAAAAAKEjAAAAAAAAoiMAAAAAAAAAAAAAoiMAAAAAAACjIwAAAAAAAAAAAACjIwAAAAAAAKQjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAniMAAAAAAACeIwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " recommend"
					},
					"CgAAAKQjAAAAAAAApSMAAAAAAAAAAAAApSMAAAAAAACmIwAAAAAAAAAAAACmIwAAAAAAAKcjAAAAAAAAAAAAAKcjAAAAAAAAqCMAAAAAAAAAAAAAqCMAAAAAAACpIwAAAAAAAAAAAACpIwAAAAAAAKojAAAAAAAAAAAAAKojAAAAAAAAqyMAAAAAAAAAAAAAqyMAAAAAAACsIwAAAAAAAAAAAACsIwAAAAAAAK0jAAAAAAAAAAAAAK0jAAAAAAAAriMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApCMAAAAAAACkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAK4jAAAAAAAAryMAAAAAAAAAAAAAryMAAAAAAACwIwAAAAAAAAAAAACwIwAAAAAAALEjAAAAAAAAAAAAALEjAAAAAAAAsiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAriMAAAAAAACuIwAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " firs"
					},
					"BQAAALIjAAAAAAAAsyMAAAAAAAAAAAAAsyMAAAAAAAC0IwAAAAAAAAAAAAC0IwAAAAAAALUjAAAAAAAAAAAAALUjAAAAAAAAtiMAAAAAAAAAAAAAtiMAAAAAAAC3IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsiMAAAAAAACyIwAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAALcjAAAAAAAAuCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtyMAAAAAAAC3IwAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " approach."
					},
					"CgAAALgjAAAAAAAAuSMAAAAAAAAAAAAAuSMAAAAAAAC6IwAAAAAAAAAAAAC6IwAAAAAAALsjAAAAAAAAAAAAALsjAAAAAAAAvCMAAAAAAAAAAAAAvCMAAAAAAAC9IwAAAAAAAAAAAAC9IwAAAAAAAL4jAAAAAAAAAAAAAL4jAAAAAAAAvyMAAAAAAAAAAAAAvyMAAAAAAADAIwAAAAAAAAAAAADAIwAAAAAAAMEjAAAAAAAAAAAAAMEjAAAAAAAAwiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuCMAAAAAAAC4IwAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"left_delete",
					null,
					"AQAAAJ0jAAAAAAAAnSMAAAAAAAAlAAAAaSB3b3VsZCByZWNvbW1lbmQgdGhlIGZpcnN0IGFwcHJvYWNoLg",
					"AQAAAAAAAAABAAAAwiMAAAAAAACdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": " globall"
					},
					"CAAAAIEhAAAAAAAAgiEAAAAAAAAAAAAAgiEAAAAAAACDIQAAAAAAAAAAAACDIQAAAAAAAIQhAAAAAAAAAAAAAIQhAAAAAAAAhSEAAAAAAAAAAAAAhSEAAAAAAACGIQAAAAAAAAAAAACGIQAAAAAAAIchAAAAAAAAAAAAAIchAAAAAAAAiCEAAAAAAAAAAAAAiCEAAAAAAACJIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgSEAAAAAAACBIQAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					7,
					"left_delete",
					null,
					"BwAAAIghAAAAAAAAiCEAAAAAAAABAAAAbIchAAAAAAAAhyEAAAAAAAABAAAAbIYhAAAAAAAAhiEAAAAAAAABAAAAYYUhAAAAAAAAhSEAAAAAAAABAAAAYoQhAAAAAAAAhCEAAAAAAAABAAAAb4MhAAAAAAAAgyEAAAAAAAABAAAAbIIhAAAAAAAAgiEAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAiSEAAAAAAACJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"insert",
					{
						"characters": "without"
					},
					"BwAAAIIhAAAAAAAAgyEAAAAAAAAAAAAAgyEAAAAAAACEIQAAAAAAAAAAAACEIQAAAAAAAIUhAAAAAAAAAAAAAIUhAAAAAAAAhiEAAAAAAAAAAAAAhiEAAAAAAACHIQAAAAAAAAAAAACHIQAAAAAAAIghAAAAAAAAAAAAAIghAAAAAAAAiSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgiEAAAAAAACCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					1,
					"insert",
					{
						"characters": " subclassin"
					},
					"CwAAAIkhAAAAAAAAiiEAAAAAAAAAAAAAiiEAAAAAAACLIQAAAAAAAAAAAACLIQAAAAAAAIwhAAAAAAAAAAAAAIwhAAAAAAAAjSEAAAAAAAAAAAAAjSEAAAAAAACOIQAAAAAAAAAAAACOIQAAAAAAAI8hAAAAAAAAAAAAAI8hAAAAAAAAkCEAAAAAAAAAAAAAkCEAAAAAAACRIQAAAAAAAAAAAACRIQAAAAAAAJIhAAAAAAAAAAAAAJIhAAAAAAAAkyEAAAAAAAAAAAAAkyEAAAAAAACUIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiSEAAAAAAACJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAJQhAAAAAAAAlSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlCEAAAAAAACUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAJUhAAAAAAAAliEAAAAAAAAAAAAAliEAAAAAAACXIQAAAAAAAAAAAACXIQAAAAAAAJghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSEAAAAAAACVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					22,
					"left_delete",
					null,
					"FgAAAJchAAAAAAAAlyEAAAAAAAABAAAAdJYhAAAAAAAAliEAAAAAAAABAAAAaZUhAAAAAAAAlSEAAAAAAAABAAAAIJQhAAAAAAAAlCEAAAAAAAABAAAAZ5MhAAAAAAAAkyEAAAAAAAABAAAAbpIhAAAAAAAAkiEAAAAAAAABAAAAaZEhAAAAAAAAkSEAAAAAAAABAAAAc5AhAAAAAAAAkCEAAAAAAAABAAAAc48hAAAAAAAAjyEAAAAAAAABAAAAYY4hAAAAAAAAjiEAAAAAAAABAAAAbI0hAAAAAAAAjSEAAAAAAAABAAAAY4whAAAAAAAAjCEAAAAAAAABAAAAYoshAAAAAAAAiyEAAAAAAAABAAAAdYohAAAAAAAAiiEAAAAAAAABAAAAc4khAAAAAAAAiSEAAAAAAAABAAAAIIghAAAAAAAAiCEAAAAAAAABAAAAdIchAAAAAAAAhyEAAAAAAAABAAAAdYYhAAAAAAAAhiEAAAAAAAABAAAAb4UhAAAAAAAAhSEAAAAAAAABAAAAaIQhAAAAAAAAhCEAAAAAAAABAAAAdIMhAAAAAAAAgyEAAAAAAAABAAAAaYIhAAAAAAAAgiEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAmCEAAAAAAACYIQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "from"
					},
					"BAAAAIIhAAAAAAAAgyEAAAAAAAAAAAAAgyEAAAAAAACEIQAAAAAAAAAAAACEIQAAAAAAAIUhAAAAAAAAAAAAAIUhAAAAAAAAhiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgiEAAAAAAACCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAIYhAAAAAAAAhyEAAAAAAAAAAAAAhyEAAAAAAACIIQAAAAAAAAAAAACIIQAAAAAAAIkhAAAAAAAAAAAAAIkhAAAAAAAAiiEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiEAAAAAAACGIQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					9,
					"left_delete",
					null,
					"CQAAAIkhAAAAAAAAiSEAAAAAAAABAAAAZYghAAAAAAAAiCEAAAAAAAABAAAAaIchAAAAAAAAhyEAAAAAAAABAAAAdIYhAAAAAAAAhiEAAAAAAAABAAAAIIUhAAAAAAAAhSEAAAAAAAABAAAAbYQhAAAAAAAAhCEAAAAAAAABAAAAb4MhAAAAAAAAgyEAAAAAAAABAAAAcoIhAAAAAAAAgiEAAAAAAAABAAAAZoEhAAAAAAAAgSEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAiiEAAAAAAACKIQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"left_delete",
					null,
					"AQAAAGYhAAAAAAAAZiEAAAAAAAABAAAAUg",
					"AQAAAAAAAAABAAAAZyEAAAAAAABnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAGYhAAAAAAAAZyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZiEAAAAAAABmIQAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYhAAAAAAAAVyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViEAAAAAAABWIQAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "nice"
					},
					"BAAAAFchAAAAAAAAWCEAAAAAAAAAAAAAWCEAAAAAAABZIQAAAAAAAAAAAABZIQAAAAAAAFohAAAAAAAAAAAAAFohAAAAAAAAWyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVyEAAAAAAABXIQAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"left_delete",
					null,
					"AQAAAIYhAAAAAAAAhiEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAhyEAAAAAAACHIQAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIYhAAAAAAAAhyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiEAAAAAAACGIQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AgAAADsiAAAAAAAAPCIAAAAAAAAAAAAAPCIAAAAAAAA8IgAAAAAAAAwAAAB0aGVyZWZvcmUsIHQ",
					"AQAAAAAAAAABAAAARyIAAAAAAAA7IgAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": " geometry"
					},
					"CQAAAFYiAAAAAAAAVyIAAAAAAAAAAAAAVyIAAAAAAABYIgAAAAAAAAAAAABYIgAAAAAAAFkiAAAAAAAAAAAAAFkiAAAAAAAAWiIAAAAAAAAAAAAAWiIAAAAAAABbIgAAAAAAAAAAAABbIgAAAAAAAFwiAAAAAAAAAAAAAFwiAAAAAAAAXSIAAAAAAAAAAAAAXSIAAAAAAABeIgAAAAAAAAAAAABeIgAAAAAAAF8iAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViIAAAAAAABWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAACghAAAAAAAAKSEAAAAAAAAAAAAAKSEAAAAAAAAtIQAAAAAAAAAAAAAtIQAAAAAAADEhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKCEAAAAAAAAoIQAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAADEhAAAAAAAAMyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMSEAAAAAAAAxIQAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "\"moves"
					},
					"BgAAADMhAAAAAAAANCEAAAAAAAAAAAAANCEAAAAAAAA1IQAAAAAAAAAAAAA1IQAAAAAAADYhAAAAAAAAAAAAADYhAAAAAAAANyEAAAAAAAAAAAAANyEAAAAAAAA4IQAAAAAAAAAAAAA4IQAAAAAAADkhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyEAAAAAAAAzIQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAADkhAAAAAAAAOiEAAAAAAAAAAAAAOiEAAAAAAAA7IQAAAAAAAAAAAAA7IQAAAAAAADwhAAAAAAAAAAAAADwhAAAAAAAAPSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOSEAAAAAAAA5IQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": " link"
					},
					"BQAAAD0hAAAAAAAAPiEAAAAAAAAAAAAAPiEAAAAAAAA/IQAAAAAAAAAAAAA/IQAAAAAAAEAhAAAAAAAAAAAAAEAhAAAAAAAAQSEAAAAAAAAAAAAAQSEAAAAAAABCIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPSEAAAAAAAA9IQAAAAAAAAAAAAAAAPC/"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAEIhAAAAAAAAQyEAAAAAAAAAAAAAQyEAAAAAAABEIQAAAAAAAAAAAABEIQAAAAAAAEUhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiEAAAAAAABCIQAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAEUhAAAAAAAARiEAAAAAAAAAAAAARiEAAAAAAABHIQAAAAAAAAAAAABHIQAAAAAAAEghAAAAAAAAAAAAAEghAAAAAAAASSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARSEAAAAAAABFIQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": " source"
					},
					"BwAAAEkhAAAAAAAASiEAAAAAAAAAAAAASiEAAAAAAABLIQAAAAAAAAAAAABLIQAAAAAAAEwhAAAAAAAAAAAAAEwhAAAAAAAATSEAAAAAAAAAAAAATSEAAAAAAABOIQAAAAAAAAAAAABOIQAAAAAAAE8hAAAAAAAAAAAAAE8hAAAAAAAAUCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASSEAAAAAAABJIQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAFAhAAAAAAAAUSEAAAAAAAAAAAAAUSEAAAAAAABSIQAAAAAAAAAAAABSIQAAAAAAAFMhAAAAAAAAAAAAAFMhAAAAAAAAVCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUCEAAAAAAABQIQAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": " target"
					},
					"BwAAAFQhAAAAAAAAVSEAAAAAAAAAAAAAVSEAAAAAAABWIQAAAAAAAAAAAABWIQAAAAAAAFchAAAAAAAAAAAAAFchAAAAAAAAWCEAAAAAAAAAAAAAWCEAAAAAAABZIQAAAAAAAAAAAABZIQAAAAAAAFohAAAAAAAAAAAAAFohAAAAAAAAWyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVCEAAAAAAABUIQAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": " t"
					},
					"AgAAAFshAAAAAAAAXCEAAAAAAAAAAAAAXCEAAAAAAABdIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWyEAAAAAAABbIQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"left_delete",
					null,
					"AQAAAFwhAAAAAAAAXCEAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAXSEAAAAAAABdIQAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "items\"\"\""
					},
					"CAAAAFwhAAAAAAAAXSEAAAAAAAAAAAAAXSEAAAAAAABeIQAAAAAAAAAAAABeIQAAAAAAAF8hAAAAAAAAAAAAAF8hAAAAAAAAYCEAAAAAAAAAAAAAYCEAAAAAAABhIQAAAAAAAAAAAABhIQAAAAAAAGIhAAAAAAAAAAAAAGIhAAAAAAAAYyEAAAAAAAAAAAAAYyEAAAAAAABkIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCEAAAAAAABcIQAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAZCEAAAAAAABkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGQhAAAAAAAAZSEAAAAAAAAAAAAAZSEAAAAAAABtIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCEAAAAAAABkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAAbSEAAAAAAABtIQAAAAAAAAAAAAAAAPC/"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAADQhAAAAAAAANCEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAANSEAAAAAAAA1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "M"
					},
					"AQAAADQhAAAAAAAANSEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANCEAAAAAAAA0IQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANsjAAAAAAAA3CMAAAAAAAAAAAAA3CMAAAAAAADkIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2yMAAAAAAADbIwAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"black",
					{
						"use_selection": false
					},
					"AQAAAAAAAAAAAAAAHTUAAAAAAAAlNQAAIyMjIyMjIyMjIyMjIyMjIyMjCiMgR1JBUEhJQ1MgSVRFTVMgIwojIyMjIyMjIyMjIyMjIyMjIyMKCiMgUUdyYXBoaWNzSXRlbSBzaGFwZXMuIHB1cmVseSB2aXN1YWwsIGJ1dCBpbnRlcmFjdGl2ZS4KIyB0aGVzIGFyZSB0aGUgc3VwZXJjbGFzcyBvZiB0aGUgTW9kZWxWaWV3IFdpZGdldHMgZm9yIHRoZSBOWEdyYXBoU2NlbmUKIyB0aGVyIGFyZSBubyBzdXBwb3NlZCB0byBpbnRlcmFjdCB3aXRoIHRoZSBtb2RlbCBpbiBhbnkgd2F5CiMgcmVzcG9uc2libGUgdG8gcGFpbnQgdWkgaXRlbXMsCiMgYW5kIGNhbiByZWFjdCB0byBtb3VzZSBvciBrZXlib2FyZCBldmVudCwgc3RyaWN0bHkgaW4gYSB2b3N1YWwgd2F5LgojIGluIE1WQyB0aGVzZSB3b3VsZCBiZSB0aGUgdmlld3MuCiMgaW4gUVQgTW9kZWxWaWV3IHRlcm1pbm9sb2d5IHRoZXNlIGFyZSBzZWxmIGNvbnRhaW5lZCB3aWRnZXRzLAojIHRoYXQgY2FuIGJlIHVzZWQgYnkgdGhlICdWaWV3cycKCgpmcm9tIHR5cGluZyBpbXBvcnQgKgpmcm9tIFB5U2lkZTYuUXRHdWkgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0Q29yZSBpbXBvcnQgKgpmcm9tIFB5U2lkZTYuUXRXaWRnZXRzIGltcG9ydCAqCgpmcm9tIHB5bGl2ZS5RdEdyYXBoRWRpdG9yLnFncmFwaGljc19hcnJvd19pdGVtIGltcG9ydCAoCiAgICBtYWtlQXJyb3dTaGFwZSwKKQpmcm9tIHB5bGl2ZS51dGlscy5nZW8gaW1wb3J0IG1ha2VMaW5lQmV0d2VlblNoYXBlcwoKCmNsYXNzIEFic3RyYWN0U2hhcGUoUUdyYXBoaWNzSXRlbSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18ocGFyZW50PXBhcmVudCkKICAgICAgICBzZWxmLnNldEZsYWcoUUdyYXBoaWNzSXRlbS5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUpCiAgICAgICAgc2VsZi5zZXRBY2NlcHRIb3ZlckV2ZW50cyhUcnVlKQogICAgICAgIHNlbGYuX2lzSGlnaGxpZ2h0ZWQgPSBGYWxzZQogICAgICAgIHNlbGYuX2hvdmVyTW91c2VQb3M6IFFQb2ludEYgfCBOb25lID0gTm9uZQoKICAgIGRlZiBzZXRIaWdobGlnaHRlZChzZWxmLCB2YWx1ZSk6CiAgICAgICAgc2VsZi5faXNIaWdobGlnaHRlZCA9IHZhbHVlCiAgICAgICAgc2VsZi51cGRhdGUoKQoKICAgIGRlZiBpc0hpZ2hsaWdodGVkKHNlbGYpOgogICAgICAgIHJldHVybiBzZWxmLl9pc0hpZ2hsaWdodGVkCgogICAgZGVmIGhvdmVyRW50ZXJFdmVudChzZWxmLCBldmVudDogUUdyYXBoaWNzU2NlbmVIb3ZlckV2ZW50KToKICAgICAgICBzZWxmLnNldEhpZ2hsaWdodGVkKFRydWUpCgogICAgZGVmIGhvdmVyTW92ZUV2ZW50KHNlbGYsIGV2ZW50OiBRR3JhcGhpY3NTY2VuZUhvdmVyRXZlbnQpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5faG92ZXJNb3VzZVBvcyA9IGV2ZW50LnBvcygpCiAgICAgICAgc2VsZi51cGRhdGUoKQoKICAgIGRlZiBob3ZlckxlYXZlRXZlbnQoc2VsZiwgZXZlbnQ6IFFHcmFwaGljc1NjZW5lSG92ZXJFdmVudCk6CiAgICAgICAgc2VsZi5zZXRIaWdobGlnaHRlZChGYWxzZSkKCiAgICBkZWYgZm9udChzZWxmKToKICAgICAgICBpZiBmb250IDo9IGdldGF0dHIoc2VsZiwgIl9mb250IiwgTm9uZSk6CiAgICAgICAgICAgIHJldHVybiBmb250CiAgICAgICAgZWxpZiBwYXJlbnRXaWRnZXQgOj0gc2VsZi5wYXJlbnRXaWRnZXQoKToKICAgICAgICAgICAgcmV0dXJuIHBhcmVudFdpZGdldC5mb250KCkKICAgICAgICBlbGlmIHNjZW5lIDo9IHNlbGYuc2NlbmUoKToKICAgICAgICAgICAgcmV0dXJuIHNjZW5lLmZvbnQoKQogICAgICAgIGVsaWYgYXBwIDo9IFFBcHBsaWNhdGlvbi5pbnN0YW5jZSgpOgogICAgICAgICAgICBpZiBpc2luc3RhbmNlKGFwcCwgUUd1aUFwcGxpY2F0aW9uKToKICAgICAgICAgICAgICAgIHJldHVybiBhcHAuZm9udCgpCgogICAgICAgIHJldHVybiBRRm9udCgpCgogICAgZGVmIHBhbGV0dGUoc2VsZikgLT4gUVBhbGV0dGU6CiAgICAgICAgaWYgcGFsZXR0ZSA6PSBnZXRhdHRyKHNlbGYsICJfcGFsZXR0ZSIsIE5vbmUpOgogICAgICAgICAgICByZXR1cm4gcGFsZXR0ZQogICAgICAgIGVsaWYgcGFyZW50V2lkZ2V0IDo9IHNlbGYucGFyZW50V2lkZ2V0KCk6CiAgICAgICAgICAgIHJldHVybiBwYXJlbnRXaWRnZXQucGFsZXR0ZSgpCiAgICAgICAgZWxpZiBzY2VuZSA6PSBzZWxmLnNjZW5lKCk6CiAgICAgICAgICAgIHJldHVybiBzY2VuZS5wYWxldHRlKCkKICAgICAgICBlbGlmIGFwcCA6PSBRQXBwbGljYXRpb24uaW5zdGFuY2UoKToKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZShhcHAsIFFHdWlBcHBsaWNhdGlvbik6CiAgICAgICAgICAgICAgICByZXR1cm4gYXBwLnBhbGV0dGUoKQoKICAgICAgICByZXR1cm4gUVBhbGV0dGUoKQoKICAgIGRlZiBicnVzaChzZWxmKToKICAgICAgICBiYXNlQ29sb3IgPSBzZWxmLnBhbGV0dGUoKS5iYXNlKCkuY29sb3IoKQogICAgICAgIGJhc2VDb2xvci5zZXRBbHBoYSgyNTUpCiAgICAgICAgYnJ1c2ggPSBRQnJ1c2goYmFzZUNvbG9yKQogICAgICAgIHJldHVybiBicnVzaAoKICAgIGRlZiBwZW4oc2VsZik6CiAgICAgICAgcGFsZXR0ZSA9IHNlbGYucGFsZXR0ZSgpCgogICAgICAgIHBlbiA9IFFQZW4ocGFsZXR0ZS50ZXh0KCkuY29sb3IoKSkKCiAgICAgICAgaWYgc2VsZi5pc1NlbGVjdGVkKCk6CiAgICAgICAgICAgIHBlbi5zZXRDb2xvcihwYWxldHRlLmhpZ2hsaWdodCgpLmNvbG9yKCkpICAjIENvbG9yIGZvciBzZWxlY3RlZAoKICAgICAgICBpZiBzZWxmLmlzSGlnaGxpZ2h0ZWQoKToKICAgICAgICAgICAgcGVuLnNldENvbG9yKHBhbGV0dGUuYWNjZW50KCkuY29sb3IoKSkgICMgQ29sb3IgZm9yIGhvdmVyCgogICAgICAgIHJldHVybiBwZW4KCgpjbGFzcyBWZXJ0ZXhTaGFwZShBYnN0cmFjdFNoYXBlKToKICAgICIiIkEgZ3JhcGggJ1ZlcnRleCcgZ3JhcGhpY3MgaXRlbS4gbm8gaW5sZXRzIG9yIG91dGxldHMuIiIiCgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsCiAgICAgICAgdGl0bGU6IHN0ciA9ICJOb2RlIiwKICAgICAgICBwYXJlbnQ6IFFHcmFwaGljc0l0ZW0gfCBOb25lID0gTm9uZSwKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQpCiAgICAgICAgIyBwcml2YXRlIHZhcmlhYmxlcwogICAgICAgIHNlbGYuX3RpdGxlOiBzdHIgPSB0aXRsZQogICAgICAgIHNlbGYuX2lzSGlnaGxpZ2h0ZWQ6IGJvb2wgPSBGYWxzZQoKICAgICAgICAjIEVuYWJsZSBzZWxlY3Rpb24gYW5kIG1vdmVtZW50CiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc1dpZGdldC5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc1NlbGVjdGFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc1dpZGdldC5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc01vdmFibGUsIFRydWUpCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc1dpZGdldC5HcmFwaGljc0l0ZW1GbGFnLkl0ZW1Jc0ZvY3VzYWJsZSwgVHJ1ZSkKICAgICAgICBzZWxmLnNldEZsYWcoCiAgICAgICAgICAgIFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtU2VuZHNTY2VuZVBvc2l0aW9uQ2hhbmdlcwogICAgICAgICkKICAgICAgICBzZWxmLnNldEFjY2VwdEhvdmVyRXZlbnRzKFRydWUpCgogICAgZGVmIF9fcmVwcl9fKHNlbGYpOgogICAgICAgIHJldHVybiBmIntzZWxmLl9fY2xhc3NfXy5fX25hbWVfX30oe3NlbGYuX3RpdGxlIXJ9KSIKCiAgICBkZWYgYnJ1c2goc2VsZik6CiAgICAgICAgYmFzZUNvbG9yID0gc2VsZi5wYWxldHRlKCkuYmFzZSgpLmNvbG9yKCkKICAgICAgICBiYXNlQ29sb3Iuc2V0QWxwaGEoMjAwKQogICAgICAgIGJydXNoID0gUUJydXNoKGJhc2VDb2xvcikKICAgICAgICByZXR1cm4gYnJ1c2gKCiAgICBAb3ZlcnJpZGUKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZikgLT4gUVJlY3RGOgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKHNlbGYuZm9udCgpKQoKICAgICAgICB0ZXh0X3dpZHRoID0gZm0uaG9yaXpvbnRhbEFkdmFuY2Uoc2VsZi5fdGl0bGUpCiAgICAgICAgdGV4dF9oZWlnaHQgPSBmbS5oZWlnaHQoKQogICAgICAgIHJldHVybiBRUmVjdEYoMCwgMCwgdGV4dF93aWR0aCArIDgsIHRleHRfaGVpZ2h0ICsgNCkKCiAgICBkZWYgcGFpbnQoCiAgICAgICAgc2VsZiwgcGFpbnRlcjogUVBhaW50ZXIsIG9wdGlvbjogUVN0eWxlT3B0aW9uR3JhcGhpY3NJdGVtLCB3aWRnZXQ9Tm9uZQogICAgKToKICAgICAgICBwYWludGVyLnNldEJydXNoKHNlbGYuYnJ1c2goKSkKICAgICAgICBwYWludGVyLnNldFBlbihzZWxmLnBlbigpKQogICAgICAgIHBhaW50ZXIuZHJhd1JvdW5kZWRSZWN0KHNlbGYuYm91bmRpbmdSZWN0KCksIDQsIDQpCgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKHNlbGYuZm9udCgpKQogICAgICAgIHBhaW50ZXIuZHJhd1RleHQoNCwgZm0uaGVpZ2h0KCkgLSAxLCBzZWxmLl90aXRsZSkKCiAgICBkZWYgdGl0bGUoc2VsZik6CiAgICAgICAgcmV0dXJuIHNlbGYuX3RpdGxlCgogICAgZGVmIHNldFRpdGxlKHNlbGYsIHRleHQ6IHN0cik6CiAgICAgICAgc2VsZi5fdGl0bGUgPSB0ZXh0CiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIExpbmtTaGFwZShBYnN0cmFjdFNoYXBlKToKICAgICIiIkdyYXBoaWNzIGl0ZW0gcmVwcmVzZW50aW5nIGFuIGVkZ2UgaW4gYSBncmFwaC4iIiIKCiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwgbGFiZWw6IHN0ciA9ICItbGluay0iLCBwYXJlbnQ6IFFHcmFwaGljc0l0ZW0gfCBOb25lID0gTm9uZQogICAgKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKHBhcmVudD1Ob25lKQogICAgICAgIHNlbGYuX2xhYmVsID0gbGFiZWwKCiAgICAgICAgIyBFbmFibGUgc2VsZWN0aW5nCiAgICAgICAgc2VsZi5zZXRGbGFnKFFHcmFwaGljc0l0ZW0uR3JhcGhpY3NJdGVtRmxhZy5JdGVtSXNTZWxlY3RhYmxlKQogICAgICAgIHNlbGYuc2V0QWNjZXB0SG92ZXJFdmVudHMoVHJ1ZSkKICAgICAgICAjIHNlbGYuc2V0WlZhbHVlKC0xKQoKICAgICAgICBzZWxmLl9saW5lOiBRTGluZUYgPSBRTGluZUYoKQoKICAgICMgZGVmIHNldExpbmUoc2VsZiwgbGluZTogUUxpbmVGKToKICAgICMgICAgIHNlbGYucHJlcGFyZUdlb21ldHJ5Q2hhbmdlKCkKICAgICMgICAgIHNlbGYuX2xpbmUgPSBsaW5lCiAgICAjICAgICBzZWxmLnVwZGF0ZSgpCgogICAgIyBkZWYgX2xpbmUoc2VsZikgLT4gUUxpbmVGOgogICAgIyAgICAgcmV0dXJuIHNlbGYuX2xpbmUKCiAgICBkZWYgX19yZXByX18oc2VsZik6CiAgICAgICAgcmV0dXJuIGYie3NlbGYuX19jbGFzc19fLl9fbmFtZV9ffSh7c2VsZi5fbGFiZWwhcn0pIgoKICAgIGRlZiBzZXRMYWJlbFRleHQoc2VsZiwgdGV4dDogc3RyKToKICAgICAgICBzZWxmLl9sYWJlbCA9IHRleHQKICAgICAgICBzZWxmLnVwZGF0ZSgpCgogICAgZGVmIGxhYmVsVGV4dChzZWxmKToKICAgICAgICByZXR1cm4gc2VsZi5fbGFiZWwKCiAgICBkZWYgcGVuKHNlbGYpOgogICAgICAgICIiIm92ZXJyaWRlIHRvIGluZGljYXRlIGVuZHBvaW50cyB1bmRlciBtb3VzZSIiIgogICAgICAgIHBhbGV0dGUgPSBzZWxmLnBhbGV0dGUoKQoKICAgICAgICBwZW4gPSBRUGVuKHBhbGV0dGUudGV4dCgpLmNvbG9yKCkpCgogICAgICAgIGlmIHNlbGYuaXNTZWxlY3RlZCgpOgogICAgICAgICAgICBwZW4uc2V0Q29sb3IocGFsZXR0ZS5oaWdobGlnaHQoKS5jb2xvcigpKSAgIyBDb2xvciBmb3Igc2VsZWN0ZWQKCiAgICAgICAgaWYgc2VsZi5pc0hpZ2hsaWdodGVkKCk6CiAgICAgICAgICAgIGlmIHNlbGYuX2hvdmVyTW91c2VQb3M6CiAgICAgICAgICAgICAgICBsaW5lYXJHcmFkID0gUUxpbmVhckdyYWRpZW50KHNlbGYuX2xpbmUucDEoKSwgc2VsZi5fbGluZS5wMigpKQogICAgICAgICAgICAgICAgZDEgPSBRTGluZUYoCiAgICAgICAgICAgICAgICAgICAgc2VsZi5tYXBGcm9tUGFyZW50KHNlbGYuX2xpbmUucDEoKSksIHNlbGYuX2hvdmVyTW91c2VQb3MKICAgICAgICAgICAgICAgICkubGVuZ3RoKCkKICAgICAgICAgICAgICAgIGQyID0gUUxpbmVGKAogICAgICAgICAgICAgICAgICAgIHNlbGYubWFwRnJvbVBhcmVudChzZWxmLl9saW5lLnAyKCkpLCBzZWxmLl9ob3Zlck1vdXNlUG9zCiAgICAgICAgICAgICAgICApLmxlbmd0aCgpCiAgICAgICAgICAgICAgICBpZiBkMSA8IGQyOgogICAgICAgICAgICAgICAgICAgIGxpbmVhckdyYWQuc2V0Q29sb3JBdCgwLjAsIHBhbGV0dGUuYWNjZW50KCkuY29sb3IoKSkKICAgICAgICAgICAgICAgICAgICBsaW5lYXJHcmFkLnNldENvbG9yQXQoMC41LCBwYWxldHRlLmFjY2VudCgpLmNvbG9yKCkpCiAgICAgICAgICAgICAgICAgICAgbGluZWFyR3JhZC5zZXRDb2xvckF0KDAuNTUsIHBhbGV0dGUudGV4dCgpLmNvbG9yKCkpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGxpbmVhckdyYWQuc2V0Q29sb3JBdCgwLjQ1LCBwYWxldHRlLnRleHQoKS5jb2xvcigpKQogICAgICAgICAgICAgICAgICAgIGxpbmVhckdyYWQuc2V0Q29sb3JBdCgwLjUsIHBhbGV0dGUuYWNjZW50KCkuY29sb3IoKSkKICAgICAgICAgICAgICAgICAgICBsaW5lYXJHcmFkLnNldENvbG9yQXQoMSwgcGFsZXR0ZS5hY2NlbnQoKS5jb2xvcigpKQogICAgICAgICAgICAgICAgcGVuLnNldEJydXNoKFFCcnVzaChsaW5lYXJHcmFkKSkgICMgQ29sb3IgZm9yIGhvdmVyCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBwZW4uc2V0QnJ1c2gocGFsZXR0ZS5hY2NlbnQoKS5jb2xvcigpKSAgIyBDb2xvciBmb3IgaG92ZXIKCiAgICAgICAgcmV0dXJuIHBlbgoKICAgIGRlZiBwYWludCgKICAgICAgICBzZWxmLCBwYWludGVyOiBRUGFpbnRlciwgb3B0aW9uOiBRU3R5bGVPcHRpb25HcmFwaGljc0l0ZW0sIHdpZGdldD1Ob25lCiAgICApOgogICAgICAgICMjIyBkcmF3IGFycm93IHNoYXBlCiAgICAgICAgYXJyb3dfc2hhcGUgPSBtYWtlQXJyb3dTaGFwZShzZWxmLl9saW5lLCBzZWxmLnBlbigpLndpZHRoRigpKQoKICAgICAgICAjIHVzZSB0aGUgcGVuIGFzIGJydXNoIHRvIGRyYXcgdGhlIGFycm93IHNoYXBlCiAgICAgICAgcGFpbnRlci5zZXRQZW4oUXQuUGVuU3R5bGUuTm9QZW4pCiAgICAgICAgcGFpbnRlci5zZXRCcnVzaChzZWxmLnBlbigpLmJydXNoKCkpCiAgICAgICAgcGFpbnRlci5kcmF3UGF0aChhcnJvd19zaGFwZSkKICAgICAgICBwYWludGVyLmRyYXdMaW5lKHNlbGYuX2xpbmUpCgogICAgICAgICMjIyBkcmF3IGxhYmVsCiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Moc2VsZi5mb250KCkpCgogICAgICAgIHBhaW50ZXIuc2V0UGVuKHNlbGYucGVuKCkpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dChzZWxmLl9saW5lLmNlbnRlcigpIC0gc2VsZi5wb3MoKSwgc2VsZi5fbGFiZWwpCgogICAgZGVmIHNoYXBlKHNlbGYpIC0+IFFQYWludGVyUGF0aDoKICAgICAgICAiIiJPdmVycmlkZSBzaGFwZSB0byBwcm92aWRlIGEgd2lkZXIgY2xpY2thYmxlIGFyZWEuIiIiCiAgICAgICAgcGF0aCA9IFFQYWludGVyUGF0aCgpCiAgICAgICAgcGF0aC5tb3ZlVG8oc2VsZi5fbGluZS5wMSgpKQogICAgICAgIHBhdGgubGluZVRvKHNlbGYuX2xpbmUucDIoKSkKICAgICAgICBzdHJva2VyID0gUVBhaW50ZXJQYXRoU3Ryb2tlcigpCiAgICAgICAgc3Ryb2tlci5zZXRXaWR0aCgxMCkKICAgICAgICBzdHJva2VyLnNldENhcFN0eWxlKFF0LlBlbkNhcFN0eWxlLlJvdW5kQ2FwKQogICAgICAgIHN0cm9rZXIuc2V0Sm9pblN0eWxlKFF0LlBlbkpvaW5TdHlsZS5Sb3VuZEpvaW4pCiAgICAgICAgcmV0dXJuIHN0cm9rZXIuY3JlYXRlU3Ryb2tlKHBhdGgpCgogICAgZGVmIGJvdW5kaW5nUmVjdChzZWxmKSAtPiBRUmVjdEY6CiAgICAgICAgZm0gPSBRRm9udE1ldHJpY3Moc2VsZi5mb250KCkpCgogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShzZWxmLl9sYWJlbCkKICAgICAgICB0ZXh0X2hlaWdodCA9IGZtLmhlaWdodCgpCgogICAgICAgIHNoYXBlX2Jib3ggPSBzZWxmLnNoYXBlKCkuYm91bmRpbmdSZWN0KCkKICAgICAgICB0ZXh0X2Jib3ggPSBRUmVjdEYoCiAgICAgICAgICAgIHNlbGYuX2xpbmUuY2VudGVyKCkgLSBzZWxmLnBvcygpIC0gUVBvaW50RigwLCB0ZXh0X2hlaWdodCksCiAgICAgICAgICAgIFFTaXplRih0ZXh0X3dpZHRoLCB0ZXh0X2hlaWdodCksCiAgICAgICAgKQoKICAgICAgICBtID0gc2VsZi5wZW4oKS53aWR0aEYoKQogICAgICAgIHJldHVybiBzaGFwZV9iYm94LnVuaXRlZCh0ZXh0X2Jib3gpLmFkanVzdGVkKC1tLCAtbSwgbSwgbSkKCiAgICBkZWYgbW92ZSgKICAgICAgICBzZWxmLAogICAgICAgIHNvdXJjZV9ncmFwaGljc19pdGVtOiBRR3JhcGhpY3NJdGVtIHwgUVBhaW50ZXJQYXRoIHwgUVJlY3RGIHwgUVBvaW50RiwKICAgICAgICB0YXJnZXRfZ3JhcGhpY3NfaXRlbTogUUdyYXBoaWNzSXRlbSB8IFFQYWludGVyUGF0aCB8IFFSZWN0RiB8IFFQb2ludEYsCiAgICApOgogICAgICAgICIiIk1vdmVzIHRoZSBsaW5rIHRvIHRoZSBzb3VyY2UgYW5kIHRhcmdldCBpdGVtcyIiIgoKICAgICAgICAjIGNvbW1lbnRzOgogICAgICAgICMgSSBjb3VsZG4gZmluZCBhIG5pY2Ugd2F5IHRvIGNhdGNoIFFHcmFwaGljc0l0ZW0gc2NlbmUgbW92ZW1lbnRzLAogICAgICAgICMgYW5kIGkgdGhpbmsgdGhlIGxpbmsgaXMgcmVzcG9uc2libGUgKGFuZCB0aGUgdGFyZ2V0IGl0ZW1zIGFyZSBub3QpCiAgICAgICAgIyB0byBtb3ZlIHRoZSBsaW5rIHRvIHRoZSBsaW5rZWQgc2hhcGVzLiAoVGhpcyB3YXkgc3VwcG9ydGluZyBhbGwgUUdyYXBoaWNzSXRlbXMuKQogICAgICAgICMgVG8gYWN0dWFsbHkgdXBkYXRlIHRoZSBsaW5rIGdlb21ldHJ5LCB5b3UgbXVzdCBjYWxsIHRoaXMgZnVuY3Rpb24uCiAgICAgICAgIyB0aGVyZSBhcmUgc2V2ZXJhbCB3YXlzIHRvIHVwZGF0ZSB0aGUgbGluayBwb3NpdGlvbiBlZzogc3ViY2xhc3NpbmcgYSBRR3JhcGhpY3NJdGVtLAogICAgICAgICMgc3RvcmluZyBjb25uZWN0ZWQgbGluaywgYW5kIHVwZGF0ZSBpbiBpdGVtQ2hhbmdlLiBvciBieSB1c2luZyBRR3JhcGhpY3NXaWRnZXRzLCBhbmQgY29ubmVjdAogICAgICAgICMgdG8gdGhlIGdlb21ldHJ5Q2hhbmdlIHNpZ25hbCwgKHBheSBhdHRlbnRpb24gYXMgdGhpcyBpcyBhIGxvY2FsIHBvc2l0aW9uKQogICAgICAgICMKICAgICAgICAKICAgICAgICBsaW5lID0gbWFrZUxpbmVCZXR3ZWVuU2hhcGVzKHNvdXJjZV9ncmFwaGljc19pdGVtLCB0YXJnZXRfZ3JhcGhpY3NfaXRlbSkKICAgICAgICBsZW5ndGggPSBsaW5lLmxlbmd0aCgpCiAgICAgICAgaWYgbGVuZ3RoID4gMDoKICAgICAgICAgICAgb2Zmc2V0ID0gbWluKDgsIGxlbmd0aCAvIDIpCiAgICAgICAgICAgIGxpbmUgPSBRTGluZUYoCiAgICAgICAgICAgICAgICBsaW5lLnBvaW50QXQob2Zmc2V0IC8gbGVuZ3RoKSwKICAgICAgICAgICAgICAgIGxpbmUucG9pbnRBdCgobGVuZ3RoIC0gb2Zmc2V0KSAvIGxlbmd0aCksCiAgICAgICAgICAgICkKCiAgICAgICAgc2VsZi5wcmVwYXJlR2VvbWV0cnlDaGFuZ2UoKQogICAgICAgIHNlbGYuX2xpbmUgPSBsaW5lCiAgICAgICAgc2VsZi51cGRhdGUoKQoKCmNsYXNzIE5vZGVTaGFwZShWZXJ0ZXhTaGFwZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgdGl0bGUsIGlubGV0cywgb3V0bGV0cywgcGFyZW50PU5vbmUpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18odGl0bGU9dGl0bGUsIHBhcmVudD1wYXJlbnQpCiAgICAgICAgc2VsZi5faW5sZXRzOiBsaXN0W1FHcmFwaGljc0l0ZW1dID0gW10KICAgICAgICBzZWxmLl9vdXRsZXRzOiBsaXN0W1FHcmFwaGljc0l0ZW1dID0gW10KICAgICAgICBzZWxmLnBvcnRzX21hcmdpbiA9IC01CgogICAgICAgIGZvciBpbmxldCBpbiBpbmxldHM6CiAgICAgICAgICAgIHNlbGYuX2FkZElubGV0KGlubGV0KQogICAgICAgIGZvciBvdXRsZXQgaW4gb3V0bGV0czoKICAgICAgICAgICAgc2VsZi5fYWRkT3V0bGV0KG91dGxldCkKCiAgICAgICAgc2VsZi5wb3J0c19tYXJnaW4gPSAtNDAKCiAgICBkZWYgYm91bmRpbmdSZWN0KHNlbGYpIC0+IFFSZWN0RjoKICAgICAgICByZXR1cm4gKAogICAgICAgICAgICBzdXBlcigpCiAgICAgICAgICAgIC5ib3VuZGluZ1JlY3QoKQogICAgICAgICAgICAudW5pdGVkKHNlbGYuY2hpbGRyZW5Cb3VuZGluZ1JlY3QoKSkKICAgICAgICAgICAgLmFkanVzdGVkKC00LCAwLCA0LCAyKQogICAgICAgICkKCiAgICBkZWYgX2FkZElubGV0KHNlbGYsIGlubGV0X3dpZGdldDogUUdyYXBoaWNzSXRlbSk6CiAgICAgICAgaW5sZXRfd2lkZ2V0LnNldFBhcmVudEl0ZW0oc2VsZikKICAgICAgICBzZWxmLl9pbmxldHMuYXBwZW5kKGlubGV0X3dpZGdldCkKICAgICAgICBzZWxmLmxheW91dFBvcnRzKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgogICAgZGVmIF9yZW1vdmVJbmxldChzZWxmLCBpbmxldF93aWRnZXQ6IFFHcmFwaGljc0l0ZW0pOgogICAgICAgIHNlbGYuX2lubGV0cy5yZW1vdmUoaW5sZXRfd2lkZ2V0KQogICAgICAgIGlmIHNjZW5lIDo9IGlubGV0X3dpZGdldC5zY2VuZSgpOgogICAgICAgICAgICBzY2VuZS5yZW1vdmVJdGVtKGlubGV0X3dpZGdldCkKICAgICAgICBzZWxmLmxheW91dFBvcnRzKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgogICAgZGVmIF9hZGRPdXRsZXQoc2VsZiwgb3V0bGV0X3dpZGdldDogUUdyYXBoaWNzSXRlbSk6CiAgICAgICAgb3V0bGV0X3dpZGdldC5zZXRQYXJlbnRJdGVtKHNlbGYpCiAgICAgICAgc2VsZi5fb3V0bGV0cy5hcHBlbmQob3V0bGV0X3dpZGdldCkKICAgICAgICBzZWxmLmxheW91dFBvcnRzKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgogICAgZGVmIF9yZW1vdmVPdXRsZXQoc2VsZiwgb3V0bGV0X3dpZGdldDogUUdyYXBoaWNzSXRlbSk6CiAgICAgICAgc2VsZi5fb3V0bGV0cy5yZW1vdmUob3V0bGV0X3dpZGdldCkKICAgICAgICBvdXRsZXRfd2lkZ2V0LnNldFBhcmVudEl0ZW0oc2VsZikKICAgICAgICBpZiBzY2VuZSA6PSBvdXRsZXRfd2lkZ2V0LnNjZW5lKCk6CiAgICAgICAgICAgIHNjZW5lLnJlbW92ZUl0ZW0ob3V0bGV0X3dpZGdldCkKICAgICAgICBzZWxmLmxheW91dFBvcnRzKCkKICAgICAgICBzZWxmLnVwZGF0ZSgpCgogICAgZGVmIGxheW91dFBvcnRzKHNlbGYpOgogICAgICAgIHkgPSAxNCAgIyBoZWFkZXIgaGVpZ2huCiAgICAgICAgZm9yIGlubGV0X3dpZGdldCBpbiBzZWxmLl9pbmxldHM6CiAgICAgICAgICAgIGlubGV0X3dpZGdldC5zZXRQb3MoNCwgeSkKICAgICAgICAgICAgeSArPSBpbmxldF93aWRnZXQuYm91bmRpbmdSZWN0KCkuaGVpZ2h0KCkKCiAgICAgICAgZm9yIG91dGxldF93aWRnZXQgaW4gc2VsZi5fb3V0bGV0czoKICAgICAgICAgICAgb3V0bGV0X3dpZGdldC5zZXRQb3MoNCwgeSkKICAgICAgICAgICAgeSArPSBvdXRsZXRfd2lkZ2V0LmJvdW5kaW5nUmVjdCgpLmhlaWdodCgpCgoKY2xhc3MgUG9ydFNoYXBlKEFic3RyYWN0U2hhcGUpOgogICAgZGVmIF9faW5pdF9fKAogICAgICAgIHNlbGYsCiAgICAgICAgbGFiZWw6IHN0ciwKICAgICAgICBwYXJlbnQ6IFFHcmFwaGljc0l0ZW0gfCBOb25lID0gTm9uZSwKICAgICk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhwYXJlbnQ9cGFyZW50KQogICAgICAgIHNlbGYuX2xhYmVsID0gbGFiZWwKCiAgICBkZWYgbGFiZWwoc2VsZikgLT4gc3RyOgogICAgICAgIHJldHVybiBzZWxmLl9sYWJlbAoKICAgIGRlZiBzZXRMYWJlbChzZWxmLCB0ZXh0OiBzdHIpOgogICAgICAgIHNlbGYuX2xhYmVsID0gdGV4dAoKICAgIGRlZiBib3VuZGluZ1JlY3Qoc2VsZikgLT4gUVJlY3RGOgogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKHNlbGYuZm9udCgpKQoKICAgICAgICBlbGxpcHNlX2Jib3ggPSBRUmVjdEYoMCwgMCwgMTAsIDEwKQogICAgICAgIHRleHRfd2lkdGggPSBmbS5ob3Jpem9udGFsQWR2YW5jZShzZWxmLl9sYWJlbCkKICAgICAgICB0ZXh0X2hlaWdodCA9IGZtLmhlaWdodCgpCgogICAgICAgIHRleHRfcG9zID0gUVBvaW50RigxMiwgMCkKICAgICAgICB0ZXh0X2Jib3ggPSBRUmVjdEYodGV4dF9wb3MsIFFTaXplRih0ZXh0X3dpZHRoLCB0ZXh0X2hlaWdodCkpCiAgICAgICAgcmV0dXJuIGVsbGlwc2VfYmJveC51bml0ZWQodGV4dF9iYm94KQoKICAgIGRlZiBwYWludChzZWxmLCBwYWludGVyLCBvcHRpb24sIHdpZGdldD1Ob25lKToKICAgICAgICAjIyMgZHJhdyBsYWJlbAogICAgICAgIGZtID0gUUZvbnRNZXRyaWNzKHNlbGYuZm9udCgpKQoKICAgICAgICBwYWludGVyLnNldEJydXNoKHNlbGYuYnJ1c2goKSkKICAgICAgICBwYWludGVyLnNldFBlbihzZWxmLnBlbigpKQogICAgICAgIHBhaW50ZXIuZHJhd0VsbGlwc2UoUVJlY3RGKDIsIDcsIDYsIDYpKQoKICAgICAgICB0ZXh0X2hlaWdodCA9IGZtLmhlaWdodCgpCiAgICAgICAgdGV4dF9wb3MgPSBRUG9pbnRGKDEyLCB0ZXh0X2hlaWdodCAtIDIpCiAgICAgICAgcGFpbnRlci5kcmF3VGV4dCh0ZXh0X3Bvcywgc2VsZi5fbGFiZWwpCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIGltcG9ydCBzeXMKCiAgICBhcHAgPSBRQXBwbGljYXRpb24oc3lzLmFyZ3YpCgogICAgZ3JhcGh2aWV3ID0gUUdyYXBoaWNzVmlldygpCiAgICBncmFwaHZpZXcuc2V0V2luZG93VGl0bGUoIkhyYXBoaWNzSXRlbSBmb3IgTm9kZUVkaXRvciIpCiAgICBncmFwaHZpZXcuc2V0UmVuZGVySGludChRUGFpbnRlci5SZW5kZXJIaW50LkFudGlhbGlhc2luZywgVHJ1ZSkKICAgIGdyYXBodmlldy5zZXRSZW5kZXJIaW50KFFQYWludGVyLlJlbmRlckhpbnQuVGV4dEFudGlhbGlhc2luZywgVHJ1ZSkKICAgIGdyYXBodmlldy5zZXRSZW5kZXJIaW50KFFQYWludGVyLlJlbmRlckhpbnQuU21vb3RoUGl4bWFwVHJhbnNmb3JtLCBUcnVlKQoKICAgICMgY3JlYXRlIGdyYXBoIHNjZW5lCiAgICBncmFwaHNjZW5lID0gUUdyYXBoaWNzU2NlbmUoKQogICAgZ3JhcGhzY2VuZS5zZXRTY2VuZVJlY3QoUVJlY3RGKC00MDAsIC00MDAsIDgwMCwgODAwKSkKICAgIGdyYXBodmlldy5zZXRTY2VuZShncmFwaHNjZW5lKQoKICAgICMjIGNyZWF0ZSBncmFwaGljcwogICAgdmVydGV4X2l0ZW1fMSA9IFZlcnRleFNoYXBlKCJHcmFwaGljc1ZlcnRleEl0ZW0xIikKICAgIGdyYXBoc2NlbmUuYWRkSXRlbSh2ZXJ0ZXhfaXRlbV8xKQogICAgdmVydGV4X2l0ZW1fMS5zZXRQb3MoMCwgLTE1MCkKCiAgICBub2RlX2l0ZW1fMSA9IE5vZGVTaGFwZSgKICAgICAgICAiR3JhcGhpY3NOb2RlSXRlbTEiLAogICAgICAgIGlubGV0cz1bUG9ydFNoYXBlKCJHcmFwaGljc1BvcnRJdGVtbSIpXSwKICAgICAgICBvdXRsZXRzPVtQb3J0U2hhcGUoIkdyYXBoaWNzUG9ydEl0ZW0iKV0sCiAgICApCiAgICBncmFwaHNjZW5lLmFkZEl0ZW0obm9kZV9pdGVtXzEpCiAgICBub2RlX2l0ZW1fMS5zZXRQb3MoMCwgLTEyMCkKCiAgICBsaW5rX2l0ZW1fMSA9IExpbmtTaGFwZSgibGluazEiKQogICAgbGlua19pdGVtXzEubW92ZShRUG9pbnRGKDAsIC01MCksIFFQb2ludEYoMTAwLCAtMjApKQogICAgZ3JhcGhzY2VuZS5hZGRJdGVtKGxpbmtfaXRlbV8xKQoKICAgIGdyYXBodmlldy5zaG93KCkKICAgIGFwcC5leGVjKCkK",
					"AQAAAAAAAAABAAAA5CMAAAAAAADkIwAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					2,
					"left_delete",
					null,
					"AgAAANIjAAAAAAAA0iMAAAAAAAAJAAAAICAgICAgICAj0SMAAAAAAADRIwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAA2yMAAAAAAADSIwAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAApyEAAAAAAACnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					1,
					"cut",
					null,
					"AQAAAGEhAAAAAAAAYSEAAAAAAAADAAAAIiIi",
					"AQAAAAAAAAABAAAAZCEAAAAAAABhIQAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAM4jAAAAAAAAzyMAAAAAAAAAAAAAzyMAAAAAAADXIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAziMAAAAAAADOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"left_delete",
					null,
					"AQAAANMjAAAAAAAA0yMAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA1yMAAAAAAADXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANMjAAAAAAAA1yMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0yMAAAAAAADTIwAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"paste",
					null,
					"AQAAANcjAAAAAAAA2iMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1yMAAAAAAADXIwAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"left_delete",
					null,
					"CAAAAIMjAAAAAAAAgyMAAAAAAAACAAAAIyAdIwAAAAAAAB0jAAAAAAAAAgAAACMgvyIAAAAAAAC/IgAAAAAAAAIAAAAjIHIiAAAAAAAAciIAAAAAAAACAAAAIyAXIgAAAAAAABciAAAAAAAAAgAAACMgyiEAAAAAAADKIQAAAAAAAAIAAAAjIH8hAAAAAAAAfyEAAAAAAAACAAAAIyBrIQAAAAAAAGshAAAAAAAAAgAAACMg",
					"AQAAAAAAAAAIAAAAayEAAAAAAABtIQAAAAAAAAAAAAAAAPC/fyEAAAAAAACBIQAAAAAAAAAAAAAAAPC/yiEAAAAAAADMIQAAAAAAAAAAAAAAAPC/FyIAAAAAAAAZIgAAAAAAAAAAAAAAAPC/ciIAAAAAAAB0IgAAAAAAAAAAAAAAAPC/vyIAAAAAAADBIgAAAAAAAAAAAAAAAPC/HSMAAAAAAAAfIwAAAAAAAAAAAAAAAPC/gyMAAAAAAACFIwAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUhAAAAAAAAliEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSEAAAAAAACVIQAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJYhAAAAAAAAmCEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliEAAAAAAACWIQAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "ther"
					},
					"BAAAAJchAAAAAAAAmCEAAAAAAAAAAAAAmCEAAAAAAACZIQAAAAAAAAAAAACZIQAAAAAAAJohAAAAAAAAAAAAAJohAAAAAAAAmyEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlyEAAAAAAACXIQAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAJshAAAAAAAAnCEAAAAAAAAAAAAAnCEAAAAAAACdIQAAAAAAAAAAAACdIQAAAAAAAJ4hAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmyEAAAAAAACbIQAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": " probalby"
					},
					"CQAAAJ4hAAAAAAAAnyEAAAAAAAAAAAAAnyEAAAAAAACgIQAAAAAAAAAAAACgIQAAAAAAAKEhAAAAAAAAAAAAAKEhAAAAAAAAoiEAAAAAAAAAAAAAoiEAAAAAAACjIQAAAAAAAAAAAACjIQAAAAAAAKQhAAAAAAAAAAAAAKQhAAAAAAAApSEAAAAAAAAAAAAApSEAAAAAAACmIQAAAAAAAAAAAACmIQAAAAAAAKchAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAniEAAAAAAACeIQAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"insert",
					{
						"characters": " no"
					},
					"AwAAAKchAAAAAAAAqCEAAAAAAAAAAAAAqCEAAAAAAACpIQAAAAAAAAAAAACpIQAAAAAAAKohAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApyEAAAAAAACnIQAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": " nive"
					},
					"BQAAAKohAAAAAAAAqyEAAAAAAAAAAAAAqyEAAAAAAACsIQAAAAAAAAAAAACsIQAAAAAAAK0hAAAAAAAAAAAAAK0hAAAAAAAAriEAAAAAAAAAAAAAriEAAAAAAACvIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqiEAAAAAAACqIQAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					2,
					"left_delete",
					null,
					"AgAAAK4hAAAAAAAAriEAAAAAAAABAAAAZa0hAAAAAAAArSEAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAryEAAAAAAACvIQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "ce"
					},
					"AgAAAK0hAAAAAAAAriEAAAAAAAAAAAAAriEAAAAAAACvIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArSEAAAAAAACtIQAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": " ways"
					},
					"BQAAAK8hAAAAAAAAsCEAAAAAAAAAAAAAsCEAAAAAAACxIQAAAAAAAAAAAACxIQAAAAAAALIhAAAAAAAAAAAAALIhAAAAAAAAsyEAAAAAAAAAAAAAsyEAAAAAAAC0IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAryEAAAAAAACvIQAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"left_delete",
					null,
					"AQAAALUhAAAAAAAAtSEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAtiEAAAAAAAC2IQAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALUhAAAAAAAAtiEAAAAAAAAAAAAAtiEAAAAAAAC+IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtSEAAAAAAAC1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					332,
					1,
					"left_delete",
					null,
					"AQAAALMhAAAAAAAAsyEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAtCEAAAAAAAC0IQAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"left_delete",
					null,
					"AQAAAOMhAAAAAAAA4yEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA5CEAAAAAAADkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAOMhAAAAAAAA5CEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4yEAAAAAAADjIQAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "I"
					},
					"AgAAAO0hAAAAAAAA7iEAAAAAAAAAAAAA7iEAAAAAAADuIQAAAAAAAAUAAABhbmQgaQ",
					"AQAAAAAAAAABAAAA8iEAAAAAAADtIQAAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": "Therefor"
					},
					"CAAAAI0iAAAAAAAAjiIAAAAAAAAAAAAAjiIAAAAAAACPIgAAAAAAAAAAAACPIgAAAAAAAJAiAAAAAAAAAAAAAJAiAAAAAAAAkSIAAAAAAAAAAAAAkSIAAAAAAACSIgAAAAAAAAAAAACSIgAAAAAAAJMiAAAAAAAAAAAAAJMiAAAAAAAAlCIAAAAAAAAAAAAAlCIAAAAAAACVIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjSIAAAAAAACNIgAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUiAAAAAAAAliIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSIAAAAAAACVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"right_delete",
					null,
					"AQAAAJYiAAAAAAAAliIAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAliIAAAAAAACWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAJYiAAAAAAAAlyIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAliIAAAAAAACWIgAAAAAAAAAAAAAAAPC/"
				],
				[
					355,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJUiAAAAAAAAliIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSIAAAAAAACVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAJUiAAAAAAAAliIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlSIAAAAAAACVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAAOMiAAAAAAAA4yIAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA5CIAAAAAAADkIgAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": "T"
					},
					"AQAAAOMiAAAAAAAA5CIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4yIAAAAAAADjIgAAAAAAAAAAAAAAAPC/"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "cath"
					},
					"BQAAAP0iAAAAAAAA/iIAAAAAAAAAAAAA/iIAAAAAAAD+IgAAAAAAAAYAAAB1cGRhdGX+IgAAAAAAAP8iAAAAAAAAAAAAAP8iAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAABIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/SIAAAAAAAADIwAAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": " items"
					},
					"BgAAAAEjAAAAAAAAAiMAAAAAAAAAAAAAAiMAAAAAAAADIwAAAAAAAAAAAAADIwAAAAAAAAQjAAAAAAAAAAAAAAQjAAAAAAAABSMAAAAAAAAAAAAABSMAAAAAAAAGIwAAAAAAAAAAAAAGIwAAAAAAAAcjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAASMAAAAAAAABIwAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": " mo"
					},
					"AwAAAAcjAAAAAAAACCMAAAAAAAAAAAAACCMAAAAAAAAJIwAAAAAAAAAAAAAJIwAAAAAAAAojAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAByMAAAAAAAAHIwAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": "ving"
					},
					"BAAAAAojAAAAAAAACyMAAAAAAAAAAAAACyMAAAAAAAAMIwAAAAAAAAAAAAAMIwAAAAAAAA0jAAAAAAAAAAAAAA0jAAAAAAAADiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACiMAAAAAAAAKIwAAAAAAAAAAAAAAAPC/"
				],
				[
					375,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAA4jAAAAAAAADyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADiMAAAAAAAAOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					378,
					1,
					"left_delete",
					null,
					"AQAAAA8jAAAAAAAADyMAAAAAAAATAAAAIHRoZSBsaW5rIHBvc2l0aW9uIA",
					"AQAAAAAAAAABAAAADyMAAAAAAAAiIwAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8jAAAAAAAAECMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyMAAAAAAAAPIwAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					2,
					"left_delete",
					null,
					"AgAAAA8jAAAAAAAADyMAAAAAAAABAAAAIA4jAAAAAAAADiMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAECMAAAAAAAAQIwAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA4jAAAAAAAADyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADiMAAAAAAAAOIwAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABAjAAAAAAAAESMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAECMAAAAAAAAQIwAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABIjAAAAAAAAEyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEiMAAAAAAAASIwAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"insert",
					{
						"characters": "the"
					},
					"BAAAAFIjAAAAAAAAUyMAAAAAAAAAAAAAUyMAAAAAAABTIwAAAAAAAAMAAABhbmRTIwAAAAAAAFQjAAAAAAAAAAAAAFQjAAAAAAAAVSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUiMAAAAAAABVIwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": " uis"
					},
					"BAAAAFUjAAAAAAAAViMAAAAAAAAAAAAAViMAAAAAAABXIwAAAAAAAAAAAABXIwAAAAAAAFgjAAAAAAAAAAAAAFgjAAAAAAAAWSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVSMAAAAAAABVIwAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					3,
					"left_delete",
					null,
					"AwAAAFgjAAAAAAAAWCMAAAAAAAABAAAAc1cjAAAAAAAAVyMAAAAAAAABAAAAaVYjAAAAAAAAViMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAWSMAAAAAAABZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "ise"
					},
					"AwAAAFYjAAAAAAAAVyMAAAAAAAAAAAAAVyMAAAAAAABYIwAAAAAAAAAAAABYIwAAAAAAAFkjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViMAAAAAAABWIwAAAAAAAAAAAAAAAPC/"
				],
				[
					400,
					1,
					"cut",
					null,
					"AQAAAGQjAAAAAAAAZCMAAAAAAAAKAAAAaXRlbUNoYW5nZQ",
					"AQAAAAAAAAABAAAAZCMAAAAAAABuIwAAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					1,
					"insert",
					{
						"characters": "use"
					},
					"BAAAAFYjAAAAAAAAVyMAAAAAAAAAAAAAVyMAAAAAAABXIwAAAAAAAAMAAABpc2VXIwAAAAAAAFgjAAAAAAAAAAAAAFgjAAAAAAAAWSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAViMAAAAAAABZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAFkjAAAAAAAAWiMAAAAAAAAAAAAAWiMAAAAAAABbIwAAAAAAAAAAAABbIwAAAAAAAFwjAAAAAAAAAAAAAFwjAAAAAAAAXSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWSMAAAAAAABZIwAAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					1,
					"insert",
					{
						"characters": " itemChange"
					},
					"CwAAAF0jAAAAAAAAXiMAAAAAAAAAAAAAXiMAAAAAAABfIwAAAAAAAAAAAABfIwAAAAAAAGAjAAAAAAAAAAAAAGAjAAAAAAAAYSMAAAAAAAAAAAAAYSMAAAAAAABiIwAAAAAAAAAAAABiIwAAAAAAAGMjAAAAAAAAAAAAAGMjAAAAAAAAZCMAAAAAAAAAAAAAZCMAAAAAAABlIwAAAAAAAAAAAABlIwAAAAAAAGYjAAAAAAAAAAAAAGYjAAAAAAAAZyMAAAAAAAAAAAAAZyMAAAAAAABoIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXSMAAAAAAABdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": " callback"
					},
					"CQAAAGgjAAAAAAAAaSMAAAAAAAAAAAAAaSMAAAAAAABqIwAAAAAAAAAAAABqIwAAAAAAAGsjAAAAAAAAAAAAAGsjAAAAAAAAbCMAAAAAAAAAAAAAbCMAAAAAAABtIwAAAAAAAAAAAABtIwAAAAAAAG4jAAAAAAAAAAAAAG4jAAAAAAAAbyMAAAAAAAAAAAAAbyMAAAAAAABwIwAAAAAAAAAAAABwIwAAAAAAAHEjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaCMAAAAAAABoIwAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"left_delete",
					null,
					"AQAAAHEjAAAAAAAAcSMAAAAAAAALAAAAIHVwZGF0ZSBpbiA",
					"AQAAAAAAAAABAAAAcSMAAAAAAAB8IwAAAAAAAAAAAAAAAPC/"
				],
				[
					415,
					1,
					"right_delete",
					null,
					"AQAAAHEjAAAAAAAAcSMAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAcSMAAAAAAABxIwAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAF4jAAAAAAAAXiMAAAAAAAAKAAAAaXRlbUNoYW5nZV4jAAAAAAAAaiMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXiMAAAAAAABoIwAAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHMjAAAAAAAAdCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcyMAAAAAAABzIwAAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"right_delete",
					null,
					"AQAAAHQjAAAAAAAAdCMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdCMAAAAAAAB0IwAAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": "O"
					},
					"AQAAAHQjAAAAAAAAdSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCMAAAAAAAB0IwAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"left_delete",
					null,
					"AQAAAHUjAAAAAAAAdSMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAdiMAAAAAAAB2IwAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHQjAAAAAAAAdSMAAAAAAAAAAAAAdSMAAAAAAAB9IwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdCMAAAAAAAB0IwAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA8jAAAAAAAAECMAAAAAAAAAAAAAECMAAAAAAAAYIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADyMAAAAAAAAPIwAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					2,
					"left_delete",
					null,
					"AgAAADsjAAAAAAAAOyMAAAAAAAAIAAAAICAgICAgICA6IwAAAAAAADojAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAQyMAAAAAAAA7IwAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADojAAAAAAAAOyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOiMAAAAAAAA6IwAAAAAAAAAAAAAAAPC/"
				],
				[
					439,
					1,
					"left_delete",
					null,
					"AQAAAFIjAAAAAAAAUiMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAUyMAAAAAAABTIwAAAAAAAAAAAAAAAPC/"
				],
				[
					440,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFIjAAAAAAAAUyMAAAAAAAAAAAAAUyMAAAAAAABbIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUiMAAAAAAABSIwAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAADkjAAAAAAAAOiMAAAAAAAAAAAAAOiMAAAAAAAA6IwAAAAAAAAIAAAAsIA",
					"AQAAAAAAAAABAAAAOyMAAAAAAAA5IwAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"AwAAADojAAAAAAAAOyMAAAAAAAAAAAAAOyMAAAAAAABDIwAAAAAAAAAAAABDIwAAAAAAAEQjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOiMAAAAAAAA6IwAAAAAAAAAAAAAAAPC/"
				],
				[
					447,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEQjAAAAAAAARSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARCMAAAAAAABEIwAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAGUjAAAAAAAAZiMAAAAAAAAAAAAAZiMAAAAAAABnIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSMAAAAAAABlIwAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAJIjAAAAAAAAkyMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkiMAAAAAAACSIwAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJMjAAAAAAAAlCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkyMAAAAAAACTIwAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAMYjAAAAAAAAxyMAAAAAAAAAAAAAxyMAAAAAAADIIwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxiMAAAAAAADGIwAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					2,
					"left_delete",
					null,
					"AgAAAF0jAAAAAAAAXSMAAAAAAAAKAAAAICAgICAgICAgIFwjAAAAAAAAXCMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAZyMAAAAAAABdIwAAAAAAAAAAAAAAAPC/"
				],
				[
					461,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFwjAAAAAAAAXSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCMAAAAAAABcIwAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAGAjAAAAAAAAYSMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCMAAAAAAABgIwAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"left_delete",
					null,
					"AQAAAIsjAAAAAAAAiyMAAAAAAAABAAAATw",
					"AQAAAAAAAAABAAAAjCMAAAAAAACMIwAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "o"
					},
					"AQAAAIsjAAAAAAAAjCMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiyMAAAAAAACLIwAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"left_delete",
					null,
					"AQAAAHMiAAAAAAAAcyIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAdCIAAAAAAAB0IgAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHMiAAAAAAAAdCIAAAAAAAAAAAAAdCIAAAAAAAB8IgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcyIAAAAAAABzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"left_delete",
					null,
					"AQAAAIwiAAAAAAAAjCIAAAAAAAAJAAAACiAgICAgICAg",
					"AQAAAAAAAAABAAAAlSIAAAAAAACMIgAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwiAAAAAAAAjSIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjCIAAAAAAACMIgAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"right_delete",
					null,
					"AQAAACsiAAAAAAAAKyIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAKyIAAAAAAAArIgAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"left_delete",
					null,
					"AQAAACsiAAAAAAAAKyIAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAKyIAAAAAAAAzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACsiAAAAAAAALCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyIAAAAAAAArIgAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"left_delete",
					null,
					"AQAAADMiAAAAAAAAMyIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAANCIAAAAAAAA0IgAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADMiAAAAAAAANCIAAAAAAAAAAAAANCIAAAAAAAA8IgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMyIAAAAAAAAzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					510,
					1,
					"right_delete",
					null,
					"AQAAAHMiAAAAAAAAcyIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAcyIAAAAAAABzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					515,
					1,
					"right_delete",
					null,
					"AQAAAHMiAAAAAAAAcyIAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAcyIAAAAAAAB7IgAAAAAAAAAAAAAAAPC/"
				],
				[
					516,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMiAAAAAAAAdCIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcyIAAAAAAABzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					519,
					1,
					"left_delete",
					null,
					"AQAAAIQiAAAAAAAAhCIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAhSIAAAAAAACFIgAAAAAAAAAAAAAAAPC/"
				],
				[
					520,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIQiAAAAAAAAhSIAAAAAAAAAAAAAhSIAAAAAAACNIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhCIAAAAAAACEIgAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"left_delete",
					null,
					"AQAAANAiAAAAAAAA0CIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0SIAAAAAAADRIgAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANAiAAAAAAAA0SIAAAAAAAAAAAAA0SIAAAAAAADZIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0CIAAAAAAADQIgAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOIiAAAAAAAA4yIAAAAAAAAAAAAA4yIAAAAAAADrIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4iIAAAAAAADiIgAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOQhAAAAAAAA5SEAAAAAAAAAAAAA5SEAAAAAAADtIQAAAAAAAAAAAADsIgAAAAAAAOwiAAAAAAAACAAAACAgICAgICAg",
					"AQAAAAAAAAABAAAA5CEAAAAAAADkIQAAAAAAAAAAAAAAAPC/"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHQhAAAAAAAAdSEAAAAAAAAAAAAAdSEAAAAAAAB9IQAAAAAAAAAAAADuIQAAAAAAAO4hAAAAAAAACAAAACAgICAgICAg",
					"AQAAAAAAAAABAAAAdCEAAAAAAAB0IQAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"black",
					{
						"use_selection": false
					},
					"",
					"AQAAAAAAAAABAAAApyEAAAAAAACnIQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debu",
				"Debugger: Open"
			],
			[
				"debug",
				"Debugger: Open"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pyrigth",
				"Preferences: LSP-pyright Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"terminu",
				"Terminus: Close All"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"REMOE",
				"Package Control: Remove Package"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			],
			[
				"packa",
				"View Package File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/src/pylive",
		"/C/dev/src/pylive/pylive",
		"/C/dev/src/pylive/script_examples_to_run_live"
	],
	"file_history":
	[
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/multidigraph.py",
		"/C/dev/src/pylive/pylive/QtTerminal/terminal_with_exec.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_graphics_items.py",
		"/C/dev/src/pylive/pylive/utils/geo.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_inspector_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_scene.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/qtpy_nodeeditor.py",
		"/C/dev/src/pylive/pylive/utils/diff.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/jedi_completer.py",
		"/C/dev/src/pylive/expreiments/ipython/embedded_qtconsole.py",
		"/C/dev/src/pylive/expreiments/display_builtin_icons.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_selection_model.py",
		"/C/dev/src/pylive/tests/test_diff.py",
		"/C/dev/src/pylive/pylive/utils/unique.py",
		"/C/dev/src/pylive/pylive/utils/sugiyama_layout.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/drawing/layout.py",
		"/C/dev/src/pylive/pylive.sublime-project",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/reportviews.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_scene_with_ports.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
		"/C/dev/src/pylive/expreiments/qstyle_draw_ptimitive_elements.py",
		"/C/dev/src/pylive/tests/test_python_graphmodel.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/infinite_graphicsview_optimized.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtCore.pyi",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/node_connection_tool.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/text_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/circle_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/pin_connection_tool.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/main.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/python_graph_model.py",
		"/C/Users/andris/Downloads/SideFX Houdini 20.5.278 x64 Win/readme.txt",
		"/C/Users/andris/Documents/Blender/Assets/blender_assets.cats.txt",
		"/C/dev/src/pylive/pyproject.toml",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphmodel_databased.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_databased.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NXGraphView.py",
		"/C/dev/src/pylive/expreiments/built-a-dependency-graph-of-a-python-codebase.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_skeleton.py",
		"/C/dev/src/pylive/script_examples_to_run_live/text_processing.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_graph_with_exec.py",
		"/C/dev/src/pylive/expreiments/run-script-in-terminal.py",
		"/C/Users/andris/AppData/Local/Sublime Text/Package Storage/LSP-pyright/18.15.0/language-server/node_modules/pyright/dist/typeshed-fallback/stdlib/pathlib.pyi",
		"/C/dev/src/pylive/expreiments/connect_to_ipython.py",
		"/C/dev/src/pylive/pylive/__main__.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_ipython.py",
		"/C/dev/src/pylive/expreiments/ipython/notbook_with_chatgpt.py",
		"/C/dev/src/pylive/tests/test_cells.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/cell_support.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/linter_widget.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_number_editor.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/script_edit.py",
		"/C/dev/src/pylive/TODOs.md",
		"/C/dev/src/pylive/script_examples_to_run_live/glcanvas_widget_with_moderngl.py",
		"/C/dev/src/pylive/pylive/QtTerminal/preview_widget.py",
		"/C/dev/src/pylive/pylive/render_engine/GLCanvasWidget_with_painting_signal.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_exec.py",
		"/C/dev/src/pylive/expreiments/file_textdocument_link.py",
		"/E/__ANDRIS__/ART/_Applications_/Cynthia Lopez 7000 - 2024/Cynthia Lopez 7000.xlsx",
		"/C/dev/src/pylive/expreiments/glcanvas.py",
		"/C/dev/src/pylive/pylive/render_engine/regl/regl.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_skeleton.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/glcanvas.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLWindow_with_qopengl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget_with_request_animation.py",
		"/C/dev/src/pylive/pylive/render_engine/utils/__init__.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/GLCanvasWidget-with_painting_signal.py",
		"/C/dev/src/pylive/pylive/render_engine/glwidget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/GLCanvasWindow.py",
		"/C/Users/andris/AppData/Local/Temp/2ea7c807-5541-48c5-9e23-9d4d4826a0ed_Microsoft Office 2021 Pro Plus.zip.0ed/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/Users/andris/Downloads/Microsoft Office 2021 Pro Plus (365 ) + Patch/Microsoft Office 2021 Pro Plus/Microsoft Office 2021 Pro Plus (365 + Patch/readme.txt",
		"/C/dev/src/pylive/expreiments/opengl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pygame_moderngl_boilerplate.py",
		"/C/dev/src/pylive/expreiments/opengl_outside_window.py",
		"/C/dev/src/pylive/pylive/render_engine/orbit_control.py",
		"/C/dev/src/pylive/pylive/render_engine/lookAt_standalone.vert",
		"/C/dev/src/pylive/pylive/logwindow.py",
		"/C/dev/src/pylive/pylive/render_engine/render_layers.py",
		"/C/dev/src/pylive/pylive/shaders/billboard.vert",
		"/C/dev/src/pylive/pylive/render_engine/resource_manager.py",
		"/C/dev/src/pylive/pylive/render_engine/examples/1 render layers.py",
		"/C/dev/src/pylive/pylive/QtLiveFramework/live_framework_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/unified_titlebar.py",
		"/C/dev/src/pylive/pylive/render_engine/camera.py",
		"/C/dev/src/pylive/pylive/shaders/default_vertex_shader.vert",
		"/C/dev/src/pylive/pylive/shaders/flat_fragment_shader.frag",
		"/C/dev/src/pylive/pylive/examples/livescript.py",
		"/C/dev/src/pylive/gloo/render_layers.py",
		"/C/dev/src/pylive/gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/camera.py",
		"/C/dev/src/pylive/my_gloo/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/orbit_control.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_window_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/rendering_with_qt.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/qpygletwidget.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_1.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget (Not Working).py",
		"/C/dev/src/pylive/expreiments/3d_rendering/vispy_and_pyside_2.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_canvas_with_moderngl.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/pyglet_on_QWidget.py",
		"/C/dev/src/pylive/expreiments/ipython/ipython_kernel.py",
		"/C/dev/src/pylive/expreiments/ipython/qtconsole_inprocess1.py",
		"/C/dev/src/pylive/expreiments/ipython/simple_console.py",
		"/C/dev/src/pylive/expreiments/simple_console.py",
		"/C/dev/src/pylive/expreiments/3d_rendering/gl_widget_gpt.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_qtconsole.py",
		"/C/dev/src/pylive/expreiments/live_framework.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter.py",
		"/C/dev/src/pylive/expreiments/ipython_kernel.py",
		"/C/dev/src/pylive/pylive/examples/livenotebook.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtGui.pyi",
		"/C/dev/src/pylive/expreiments/visualize_function_dependencies.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/pygments_syntax_highlighter_OLD.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/textedit_completer.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/WhitespaceHighlighter.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"link.move",
			"move(",
			"move",
			"move(",
			"edges[",
			"move(",
			"import",
			"outletGraphicsObject(",
			"NXGraphModel",
			"modified",
			"LinkW",
			"hoverMoveEvent",
			"ConnectionEvent",
			"NodeWidget",
			"EdgeWidget",
			"change",
			"})\n",
			"handleEdgesRe",
			"nodespropertyChanged.emit",
			"Nodewidget",
			"gradient",
			"makeArrowS",
			"EdgeWidget",
			"addEdge",
			"EdgeWidget",
			"targetChanged",
			"NodeWidget",
			"makeLine",
			"setAccepted",
			"accept",
			"ConnectionDropType",
			"connectionEnterEvent",
			"AlignmentFlag",
			"print(",
			"nodeAt",
			"AttributesTable",
			"setLabelT",
			"size",
			"unchanged",
			"current",
			"print",
			"destroy",
			"_is_connection_entered",
			"QPen",
			"d1 <",
			"d1 >",
			"d2 >",
			"d2>",
			"d1",
			"            \"",
			"CC_CustomBase",
			"CE_ShapedFrame",
			"connectionDrop",
			"connectionDio",
			"_target",
			"ConnectionDropType",
			"connectionDropEvent",
			"]\n",
			"QStyle.PE_PanelMenu    48  The panel for a menu.\n",
			"ConnectionEvent",
			".map",
			"QTransform",
			"makeLineBetweenShapes",
			"print",
			"arrow",
			"line_between",
			"drag",
			"self.loop",
			"PinConnectionTool",
			"eventFilter",
			"edge",
			"edge.target",
			"edge.source",
			"edge.target",
			"setMouseTool",
			"self.connectionTool",
			"node",
			"EdgeConnectionEvent",
			"parent",
			"(\n",
			"block",
			"signal",
			"connected",
			"_edges",
			"removeEdge",
			"setSourceOutlet",
			"sceneGeome",
			"EdgeW",
			"updatePo",
			"contextmenu",
			"dagscene",
			"infini",
			"mousedouble",
			"selectionmodel",
			"handleSelectionChanged",
			"graph(",
			"result_sc",
			"finishConnection",
			"disconnected",
			"onDis",
			"handleNodesProp",
			"runScript",
			"createNodeWidget",
			"cell_at_line",
			"def instance",
			"instance",
			"setAttribute(",
			"setAttribute",
			"get_context",
			"QOpenGLWindow",
			"import QOpenGLWindow",
			"Literal",
			"literal",
			"Searching",
			"Lityeral",
			"dtype",
			"\t\t'",
			"internal_format",
			"dtype",
			"mode",
			"varyings_capture_mode",
			"internal_format",
			"dtype",
			"internal_format",
			"dtype",
			"internal_format",
			"varyings_capture_mode",
			"self"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"LinkEvent",
			"VertexWidget",
			"LinkWidget",
			"ConnectionEvent",
			"interactive_edge_moving_pin",
			"interactive_edge_fixed_pin",
			"interactive_edge_moving_pin",
			"EdgeGraphicsItem",
			"InletGraphicsItem",
			"OutletGraphicsItem",
			"PinGraphicsItem",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"OutletRef",
			"InletRef",
			"EdgeRef",
			"NodeRef",
			"EdgeDataColumn",
			"OutletDataColumn",
			"InletDataColumn",
			"NodeDataColumn",
			"EdgeView",
			"InletView",
			"OutletView",
			"self._edgeTable",
			"self._outletTable",
			"self._inletTable",
			"self._nodeTable"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "pylive/NetworkXGraphEditor/nx_network_scene.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16231,
						"regions":
						{
						},
						"selection":
						[
							[
								12423,
								12423
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/NetworkXGraphEditor/nx_network_scene.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"wrap_width": 80
						},
						"translation.x": 0.0,
						"translation.y": 5068.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "pylive/QtLiveApp/live_script_with_exec.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7723,
						"regions":
						{
						},
						"selection":
						[
							[
								4744,
								4744
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1918.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "script_examples_to_run_live/rounded_link_item.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2637,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/script_examples_to_run_live/rounded_link_item.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 168.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "pylive/NetworkXGraphEditor/nx_graph_model.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4437,
						"regions":
						{
						},
						"selection":
						[
							[
								3001,
								3001
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_model.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 980.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "pylive/NetworkXGraphEditor/nx_graph_shapes.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13664,
						"regions":
						{
						},
						"selection":
						[
							[
								8720,
								8720
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_shapes.py",
							"rulers":
							[
								80
							],
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3444.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 240.0
	},
	"output.Debugger Console":
	{
		"height": 240.0
	},
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 412.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 300.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Python: Run File (CrossPlatform)",
	"project": "pylive.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"graph model",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nx graph mo",
				"pylive\\QtGraphEditor\\nx_graph_model.py"
			],
			[
				"icons",
				"expreiments\\display_builtin_icons.py"
			],
			[
				"nx graph",
				"pylive\\QtGraphEditor\\nx_graph_graphics_scene.py"
			],
			[
				"nxselection",
				"pylive\\QtGraphEditor\\nx_graph_selection_model.py"
			],
			[
				"nx graph graphics",
				"pylive\\QtGraphEditor\\nx_graph_graphics_scene.py"
			],
			[
				"nx graph grap",
				"pylive\\QtGraphEditor\\nx_graph_view.py"
			],
			[
				"nx gr",
				"pylive\\QtGraphEditor\\nx_graph_graphics_scene_with_ports.py"
			],
			[
				"nx",
				"pylive\\QtGraphEditor\\nx_graph_model.py"
			],
			[
				"arrowi",
				"pylive\\QtGraphEditor\\NetrowkXGraphEditor\\qgraphics_arrow_item.py"
			],
			[
				"link",
				"pylive\\QtGraphEditor\\NetrowkXGraphEditor\\link_graphics_items.py"
			],
			[
				"DagSc",
				"pylive\\QtGraphEditor\\dag_graph_graphics_scene.py"
			],
			[
				"nx graph s",
				"pylive\\QtGraphEditor\\nx_graph_selection_model.py"
			],
			[
				"dag graphics ",
				"pylive\\QtGraphEditor\\dag_graph_graphics_scene.py"
			],
			[
				"test py",
				"tests\\test_python_graphmodel.py"
			],
			[
				"python gr",
				"pylive\\examples\\python_function_graph\\python_graph_model.py"
			],
			[
				"main",
				"pylive\\examples\\python_function_graph\\main.py"
			],
			[
				"nxgraphmo",
				"pylive\\QtGraphEditor\\nx_graph_model.py"
			],
			[
				"standard",
				"pylive\\QtGraphEditor\\NetrowkXGraphditor\\standard_graph_delegate.py"
			],
			[
				"graphmodel",
				"pylive\\pylive\\QtGraphEditor\\graphmodel_databased.py"
			],
			[
				"graphview",
				"pylive\\pylive\\QtGraphEditor\\graphview_databased.py"
			],
			[
				"build-a",
				"pylive\\expreiments\\built-a-dependency-graph-of-a-python-codebase.py"
			],
			[
				"conne",
				"pylive\\expreiments\\connect_to_ipython.py"
			],
			[
				"number",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"lint",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"script_",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"scriptedit",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"cell_s",
				"pylive\\pylive\\QtScriptEditor\\cell_support.py"
			],
			[
				"live_framewo",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"link file",
				"pylive\\expreiments\\file_textdocument_link.py"
			],
			[
				"jedi",
				"pylive\\pylive\\QtScriptEditor\\components\\jedi_completer.py"
			],
			[
				"with_exec",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"framew",
				"pylive\\pylive\\QtLiveFramework\\live_framework_skeleton.py"
			],
			[
				"moderngl",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"modenr",
				"pylive\\expreiments\\3d_rendering\\pygame_moderngl_boilerplate.py"
			],
			[
				"regl",
				"pylive\\pylive\\render_engine\\regl\\regl.py"
			],
			[
				"logwind",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"resou",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"render",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"resource",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"modern",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"unifie",
				"pylive\\expreiments\\unified_titlebar.py"
			],
			[
				"camer",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"linter",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"Script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"camera",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"orbit",
				"pylive\\pylive\\render_engine\\orbit_control.py"
			],
			[
				"renderl",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"live",
				"pylive\\pylive\\examples\\livescript.py"
			],
			[
				"orbitcon",
				"pylive\\expreiments\\3d_rendering\\orbit_control.py"
			],
			[
				"script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"number editor",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"whitespace",
				"pylive\\pylive\\QtScriptEditor\\components\\WhitespaceHighlighter.py"
			],
			[
				"pygme",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"highlighte",
				"pylive\\pylive\\QtScriptEditor\\highlighters.py"
			],
			[
				"textedito",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_completer.py"
			],
			[
				"keywo",
				"pylive\\pylive\\QtScriptEditor\\components\\KeywordsCompleter.py"
			],
			[
				"scrip",
				"pylive\\pylive\\QtScriptEditor\\ScriptEdit.py"
			],
			[
				"logw",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"capture",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\capture.py"
			],
			[
				"preview",
				"pylive\\pylive\\preview_widget.py"
			],
			[
				"pan",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"panand",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"visu",
				"pylive\\pylive\\examples\\visual_coding.py"
			],
			[
				"log",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"livescript",
				"pylive\\pylive\\LiveScript.py"
			],
			[
				"mind",
				"pylive\\pylive\\QtGraphEditor\\mindmap_example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 59.3333333333,
		"last_filter": "setSelec",
		"selected_items":
		[
			[
				"setSelec",
				"setSelectionModel"
			],
			[
				"setSource",
				"setSourceOutlet"
			],
			[
				"circle",
				"CircleWidget"
			]
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 228.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
