{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"QLa",
				"QLayout"
			],
			[
				"cla",
				"classmethod"
			],
			[
				"isin",
				"isinstance"
			],
			[
				"Attr",
				"AttributeError"
			],
			[
				"Python",
				"PythonGraphModel"
			],
			[
				"sub",
				"subgraph"
			],
			[
				"Attribute",
				"AttributeError"
			],
			[
				"Multi",
				"MultiDiGraph"
			],
			[
				"Attri",
				"AttributeError"
			],
			[
				"input",
				"inputs"
			],
			[
				"add",
				"addSubgraph"
			],
			[
				"wri",
				"write_node"
			],
			[
				"print",
				"print_node"
			],
			[
				"ad",
				"adjustSize"
			],
			[
				"setText",
				"setPlainText"
			],
			[
				"node",
				"getNodeAttribute"
			],
			[
				"size",
				"sizeHint"
			],
			[
				"PythonGrap",
				"PythonGraphDelegate"
			],
			[
				"onNode",
				"onNodeAttributesChanged"
			],
			[
				"attr",
				"attributes"
			],
			[
				"update",
				"updateNodeEditor"
			],
			[
				"up",
				"updateNodeEditor"
			],
			[
				"create",
				"createNodeEditor"
			],
			[
				"NXN",
				"NXNetworkSceneDelegate"
			],
			[
				"View",
				"VScrollView"
			],
			[
				"write",
				"write_text"
			],
			[
				"proce",
				"process_text"
			],
			[
				"u",
				"updateNodeAttributes"
			],
			[
				"set",
				"setParameterValue"
			],
			[
				"para",
				"parameterValue"
			],
			[
				"nodeAttr",
				"nodeAttributesRemoved"
			],
			[
				"dele",
				"deleteNodeAttribute"
			],
			[
				"edge",
				"edgesAdded"
			],
			[
				"nodeA",
				"nodeAttributesChanged"
			],
			[
				"Py",
				"PythonGraphModel"
			],
			[
				"pytho",
				"python_graph_model"
			],
			[
				"select",
				"selectedNodes"
			],
			[
				"curren",
				"current_node_id"
			],
			[
				"setSt",
				"setStyleSheet"
			],
			[
				"setSi",
				"setFixedSize"
			],
			[
				"name_",
				"name_layout"
			],
			[
				"delete",
				"deleteNodeAttribute"
			],
			[
				"cli",
				"clicked"
			],
			[
				"remove",
				"remove_btn"
			],
			[
				"signa",
				"signalsBlocked"
			],
			[
				"block",
				"signalsBlocked"
			],
			[
				"curre",
				"current_node_id"
			],
			[
				"upd",
				"updateAttributeEditor"
			],
			[
				"node_",
				"node_attributes"
			],
			[
				"on",
				"onNodeAttributesChanged"
			],
			[
				"getAttr",
				"getNodeAttribute"
			],
			[
				"_attr",
				"_attributes_layout"
			],
			[
				"current",
				"current_node_id"
			],
			[
				"addS",
				"addStretch"
			],
			[
				"setM",
				"setModel"
			],
			[
				"delet",
				"deleteNodeAttribute"
			],
			[
				"onNodeAttr",
				"onNodeAttributesAdded"
			],
			[
				"sele",
				"selectionModel"
			],
			[
				"nodeAbou",
				"nodesAboutToBeRemoved"
			],
			[
				"NX",
				"NXNetworkModel"
			],
			[
				"NXNet",
				"NXNetworkExample"
			],
			[
				"nx_n",
				"nx_network_scene_outlet_to_inlet"
			],
			[
				"onNodeAttributes",
				"onNodeAttributesAdded"
			],
			[
				"edgeAttributes",
				"edgeAttributesAdded"
			],
			[
				"nodeAttri",
				"nodeAttributesChanged"
			],
			[
				"nodeAttributes",
				"nodeAttributesChanged"
			],
			[
				"edgeAtt",
				"edgeAttributesRemoved"
			],
			[
				"edgeAttr",
				"edgeAttributesAboutToBeRemoved"
			],
			[
				"QListMo",
				"QAbstractListModel"
			],
			[
				"NXGra",
				"NXGraphSelectionModel"
			],
			[
				"nx_gr",
				"nx_graph_selection_model"
			],
			[
				"NXNe",
				"NXNetworkScene"
			],
			[
				"python_",
				"python_graph_model"
			],
			[
				"make_uni",
				"make_unique_name"
			],
			[
				"getM",
				"getmodule"
			],
			[
				"editor",
				"editor_layout"
			],
			[
				"re",
				"removeItem"
			],
			[
				"creat",
				"createNodeEditor"
			],
			[
				"edit",
				"itemEditor"
			],
			[
				"header_l",
				"header_label"
			],
			[
				"heade",
				"header_layout"
			],
			[
				"QW",
				"QWidget"
			],
			[
				"Pythongr",
				"PythonGraphModel"
			],
			[
				"prop",
				"properties_layout"
			],
			[
				"hea",
				"header_layout"
			],
			[
				"Pyth",
				"PythonGraphModel"
			],
			[
				"item",
				"item_editor"
			],
			[
				"setPa",
				"setParent"
			],
			[
				"setPl",
				"setPlainText"
			],
			[
				"he",
				"header_layout"
			],
			[
				"t",
				"text"
			],
			[
				"line",
				"lineedit"
			],
			[
				"setNo",
				"setNodePropertyModel"
			],
			[
				"text",
				"textChanged"
			],
			[
				"QForm",
				"QFormLayout"
			],
			[
				"setNodePrope",
				"setNodePropertyEditor"
			],
			[
				"pa",
				"parameters"
			],
			[
				"st",
				"Status"
			],
			[
				"getNode",
				"getNodeProperty"
			],
			[
				"QLine",
				"QLineEdit"
			],
			[
				"setNodeP",
				"setNodePropertyEditor"
			],
			[
				"cr",
				"currentNode"
			],
			[
				"di",
				"display"
			],
			[
				"selec",
				"selectionmodel"
			],
			[
				"NXGrap",
				"NXGraphSelectionModel"
			],
			[
				"NXGraph",
				"NXGraphSelectionModel"
			],
			[
				"read",
				"read_text"
			],
			[
				"topo",
				"topological_sort"
			],
			[
				"p",
				"popleft"
			],
			[
				"selected",
				"selected_nodes"
			],
			[
				"cha",
				"selectionChanged"
			],
			[
				"gr",
				"graphscene"
			],
			[
				"dfs_",
				"dfs_successors"
			],
			[
				"chil",
				"childrenBoundingRect"
			],
			[
				"predecessor",
				"dfs_predecessors"
			],
			[
				"rec",
				"recursive"
			],
			[
				"outEd",
				"outEdges"
			],
			[
				"ite",
				"iterable"
			],
			[
				"QGraphicsT",
				"QGraphicsTextItem"
			],
			[
				"getN",
				"getNodeProperty"
			],
			[
				"trigg",
				"triggered"
			],
			[
				"bottom",
				"bottomRight"
			],
			[
				"setparent",
				"setParentItem"
			],
			[
				"cace",
				"cache_badge"
			],
			[
				"getNod",
				"getNodeProperty"
			],
			[
				"assrt",
				"assert"
			],
			[
				"_inle",
				"_InletName"
			],
			[
				"nodes",
				"nodesPropertiesChanged"
			]
		]
	},
	"buffers":
	[
		{
			"file": "expreiments/reactive/reactive_qt.py",
			"settings":
			{
				"buffer_size": 398,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEwEAAAAAAAAAAAAADgEAAAAAAAAOAQAAAAAAAAIAAAAJCQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAABABAAAAAAAAEAEAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAQAAAAAAABEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " setState"
					},
					"CQAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABwBAAAAAAAAHgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "self,"
					},
					"BQAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdAQAAAAAAAB0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " stat"
					},
					"BQAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiAQAAAAAAACIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "e:dict"
					},
					"BgAAACcBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAApAQAAAAAAACoBAAAAAAAAAAAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnAQAAAAAAACcBAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "change"
					},
					"BwAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAkAQAAAAAAAAUAAABzdGF0ZSQBAAAAAAAAJQEAAAAAAAAAAAAAJQEAAAAAAAAmAQAAAAAAAAAAAAAmAQAAAAAAACcBAAAAAAAAAAAAACcBAAAAAAAAKAEAAAAAAAAAAAAAKAEAAAAAAAApAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjAQAAAAAAACgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAC4BAAAAAAAAMAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAQAAAAAAAC4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "str,"
					},
					"BAAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvAQAAAAAAAC8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " object|"
					},
					"CAAAADMBAAAAAAAANAEAAAAAAAAAAAAANAEAAAAAAAA1AQAAAAAAAAAAAAA1AQAAAAAAADYBAAAAAAAAAAAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA4AQAAAAAAADkBAAAAAAAAAAAAADkBAAAAAAAAOgEAAAAAAAAAAAAAOgEAAAAAAAA7AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAzAQAAAAAAADMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "None"
					},
					"BAAAADsBAAAAAAAAPAEAAAAAAAAAAAAAPAEAAAAAAAA9AQAAAAAAAAAAAAA9AQAAAAAAAD4BAAAAAAAAAAAAAD4BAAAAAAAAPwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7AQAAAAAAADsBAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEEBAAAAAAAAQgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBAQAAAAAAAEEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n..."
					},
					"BgAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\nself.chil"
					},
					"CwAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA4wAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOkAAAAAAAAAAAAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA6gAAAAAAAADrAAAAAAAAAAAAAADrAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA7QAAAAAAAADuAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "dren"
					},
					"BAAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAO4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAAAAAAAAAPIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " dict"
					},
					"BQAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0AAAAAAAAAPQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPkAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5AAAAAAAAAPkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD+AAAAAAAAAAAAAAD+AAAAAAAAAP8AAAAAAAAAAAAAAP8AAAAAAAAAAQEAAAAAAAAAAAAA/AAAAAAAAAD8AAAAAAAAAAIAAAAJCQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AAAAAAAAAPsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"left_delete",
					null,
					"AQAAAP4AAAAAAAAA/gAAAAAAAAABAAAACQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AAAAAAAAAP8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAEBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+AAAAAAAAAP4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " addChildre"
					},
					"CwAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAAAJAQAAAAAAAAAAAAAJAQAAAAAAAAoBAAAAAAAAAAAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAQAAAAAAAAEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAwBAAAAAAAADQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAA0BAAAAAAAADwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANAQAAAAAAAA0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "self,"
					},
					"BQAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAQAAAAAAAA4BAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " child:El"
					},
					"CQAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAAFwEAAAAAAAAYAQAAAAAAAAAAAAAYAQAAAAAAABkBAAAAAAAAAAAAABkBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAbAQAAAAAAAAAAAAAbAQAAAAAAABwBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAQAAAAAAABMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "emen"
					},
					"BAAAABwBAAAAAAAAHQEAAAAAAAAAAAAAHQEAAAAAAAAeAQAAAAAAAAAAAAAeAQAAAAAAAB8BAAAAAAAAAAAAAB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcAQAAAAAAABwBAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					6,
					"left_delete",
					null,
					"BgAAAB8BAAAAAAAAHwEAAAAAAAABAAAAbh4BAAAAAAAAHgEAAAAAAAABAAAAZR0BAAAAAAAAHQEAAAAAAAABAAAAbRwBAAAAAAAAHAEAAAAAAAABAAAAZRsBAAAAAAAAGwEAAAAAAAABAAAAbBoBAAAAAAAAGgEAAAAAAAABAAAARQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAQAAAAAAACABAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "Self"
					},
					"BAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAQAAAAAAABoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfAQAAAAAAAB8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACMBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgAQAAAAAAACABAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "l;ist"
					},
					"BwAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD2AAAAAAAAAAQAAABkaWN0HgEAAAAAAAAeAQAAAAAAAAIAAAAJCfYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAPkAAAAAAAAA+gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1AAAAAAAAAPkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					4,
					"left_delete",
					null,
					"BAAAAPkAAAAAAAAA+QAAAAAAAAABAAAAdPgAAAAAAAAA+AAAAAAAAAABAAAAc/cAAAAAAAAA9wAAAAAAAAABAAAAafYAAAAAAAAA9gAAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6AAAAAAAAAPoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "ist"
					},
					"AwAAAPYAAAAAAAAA9wAAAAAAAAAAAAAA9wAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAAPkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2AAAAAAAAAPYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"reindent",
					null,
					"AQAAACEBAAAAAAAAIwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhAQAAAAAAACEBAAAAAAAAAAAAAAAAaUA"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADcCQAAZnJvbSB0eXBpbmcgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0Q29yZSBpbXBvcnQgKgpmcm9tIFB5U2lkZTYuUXRHdWkgaW1wb3J0ICoKZnJvbSBQeVNpZGU2LlF0V2lkZ2V0cyBpbXBvcnQgKgoKZnJvbSBweWxpdmUudXRpbHMucXRmYWN0b3J5IGltcG9ydCB2Ym94bGF5b3V0CgoKCgpjbGFzcyBFbGVtZW50OgoJZGVmIF9faW5pdF9fKHNlbGYpOgoJCXNlbGYudW5kZXJseWluZyA9IFFXaWRnZXQoKQoJCXNlbGYuY2hpbGRyZW4gPSBsaXN0KCkKCglkZWYgYWRkQ2hpbGRyZW4oc2VsZiwgY2hpbGQ6U2VsZik6CgkJCgoJZGVmIGNyZWF0ZShzZWxmKS0+UVdpZGdldHxRTGF5b3V0OgoJCS4uLgoKCWRlZiBzZXRTdGF0ZShzZWxmLCBjaGFuZ2U6ZGljdFtzdHIsIG9iamVjdHxOb25lXSk6CgkJLi4uCgoJZGVmIHBhdGNoKHNlbGYsICphcmdzLCAqKmt3YXJncyktPk5vbmU6CgkJLi4uCgoJZGVmIHJlbmRlcihzZWxmKToKCQkuLi4KCglkZWYgX19lbnRlcl9fKHNlbGYpOgoJCUFwcC5pbnN0YW5jZSgpLnB1c2goc2VsZikKCglkZWYgX19leGl0X18oc2VsZiwgZXhjX3R5cGUsIGV4Y192YWwsIGV4Y190Yik6CgkJQXBwLmluc3RhbmNlKCkucG9wKCkKCgpjbGFzcyBXaWRnZXQoRWxlbWVudCk6CglkZWYgY3JlYXRlKHNlbGYpOgoJCXJldHVybiBRV2lkZ2V0KCkKCgpjbGFzcyBWQm94TGF5b3V0KEVsZW1lbnQpOgoJZGVmIF9faW5pdF9fKHNlbGYpOgoJCXNlbGYudW5kZXJseWluZyA9IFFWQm94TGF5b3V0KCkKCglkZWYgX19lbnRlcl9fKHNlbGYpOgoJCXN1cGVyKCkuX19lbnRlcl9fKCkKCglkZWYgX19leGl0X18oc2VsZiwgZXhjX3R5cGUsIGV4Y192YWwsIGV4Y190Yik6CgkJc3VwZXIoKS5fX2V4aXRfXyhleGNfdHlwZSwgZXhjX3ZhbCwgZXhjX3RiKQoKCmNsYXNzIEFwcDoKCV9pbnN0YW5jZSA9IE5vbmUKCWRlZiBfX2luaXRfXyhzZWxmLCByb290KToKCQlzZWxmLnJvb3Q6RWxlbWVudCA9IHJvb3QKCQlzZWxmLnN0YWNrID0gW10KCglAc3RhdGljbWV0aG9kCglkZWYgaW5zdGFuY2UoKS0+J0FwcHxOb25lJzoKCQlyZXR1cm4gQXBwLl9pbnN0YW5jZQoKCWRlZiBzaG93KHNlbGYpOgoJCWlmIHNlbGYucm9vdDoKCQkJcmV0dXJuIHNlbGYucm9vdC5jcmVhdGUoKS5zaG93KCkKCglkZWYgcHVzaChzZWxmLCBpdGVtOkVsZW1lbnQpOgoJCXNlbGYuc3RhY2suYXBwZW5kKGl0ZW0pCgoJZGVmIHBvcChzZWxmKToKCQlyZXR1cm4gc2VsZi5zdGFjay5wb3AoKQoKCmNsYXNzIFB1c2hCdXR0b24oRWxlbWVudCk6CglkZWYgX19pbml0X18oc2VsZiwgdGV4dDpzdHIsIG9uX3ByZXNzZWQ6Q2FsbGFibGV8Tm9uZT1Ob25lKToKCQlzZWxmLnRleHQgPSB0ZXh0CgkJc2VsZi5vbl9wcmVzc2VkID0gb25fcHJlc3NlZAoJCXNlbGYudW5kZXJseWluZzpRUHVzaEJ1dHRvbnxOb25lID0gTm9uZQoKCUBvdmVycmlkZQoJZGVmIGNyZWF0ZShzZWxmKS0+UVdpZGdldDoKCQlzZWxmLnVuZGVybHlpbmcgPSBRUHVzaEJ1dHRvbihzZWxmLnRleHQpCgkJaWYgc2VsZi5vbl9wcmVzc2VkOgoJCQlzZWxmLnVuZGVybHlpbmcucHJlc3NlZC5jb25uZWN0KHNlbGYub25fcHJlc3NlZCkKCQlyZXR1cm4gc2VsZi51bmRlcmx5aW5nCgoJQG92ZXJyaWRlCglkZWYgcGF0Y2goc2VsZiwgdGV4dCwgb25fcHJlc3NlZCk6CgkJYXNzZXJ0IHNlbGYudW5kZXJseWluZwoJCWlmIHRleHQgIT0gc2VsZi50ZXh0OgoJCQlzZWxmLnRleHQgPSB0ZXh0CgkJCXNlbGYudW5kZXJseWluZy5zZXRUZXh0KHRleHQpCgoJCWlmIG9uX3ByZXNzZWQgIT0gc2VsZi5vbl9wcmVzc2VkOgoJCQlpZiBzZWxmLm9uX3ByZXNzZWQ6CgkJCQlzZWxmLnVuZGVybHlpbmcucHJlc3NlZC5kaXNjb25uZWN0KHNlbGYub25fcHJlc3NlZCkKCQkJaWYgb25fcHJlc3NlZDoKCQkJCXNlbGYudW5kZXJseWluZy5wcmVzc2VkLmNvbm5lY3Qob25fcHJlc3NlZCkKCQkJc2VsZi5vbl9wcmVzc2VkID0gb25fcHJlc3NlZAoKCmNsYXNzIExhYmVsKEVsZW1lbnQpOgoJZGVmIF9faW5pdF9fKHNlbGYsIHRleHQ6c3RyKToKCQlzZWxmLnRleHQgPSB0ZXh0CgkJc2VsZi51bmRlcmx5aW5nOlFMYWJlbHxOb25lID0gTm9uZQoKCWRlZiBjcmVhdGUoc2VsZik6CgkJc2VsZi51bmRlcmx5aW5nID0gUUxhYmVsKHNlbGYudGV4dCkKCQlyZXR1cm4gc2VsZi51bmRlcmx5aW5nCgoJZGVmIHBhdGNoKHNlbGYsIHRleHQpOgoJCWFzc2VydCBzZWxmLnVuZGVybHlpbmcKCQlzZWxmLnRleHQgPSB0ZXh0CgkJc2VsZi51bmRlcmx5aW5nLnNldFRleHQodGV4dCkKCgpjbGFzcyBNeVdpZGdldChXaWRnZXQpOgoJZGVmIHJlbmRlcihzZWxmKToKCQl3aXRoIHNlbGY6CgkJCXdpdGggVkJveExheW91dCgpOgoJCQkJUHVzaEJ1dHRvbigicHJlc3MgbWUiLCBvbl9wcmVzc2VkPWxhbWJkYTpwcmludCgicHJlc3NlZCIpKQoJCQkJTGFiZWwoImhlbGxvIikKCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgoJcWFwcCA9IFFBcHBsaWNhdGlvbigpCgoKCWxibCA9IExhYmVsKCJoZWxsbyIpCgoJQXBwKHJvb3Q9TXlXaWRnZXQoKSkuc2hvdygpCglxYXBwLmV4ZWMoKQAAAAAAAAAAjgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwEAAAAAAAAjAQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"debug",
				"Package Control: Disable Debug Mode"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"remove p",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: List Packages"
			],
			[
				"debu",
				"Debugger: Open"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pyrigth",
				"Preferences: LSP-pyright Settings"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminus: Toggle Panel"
			],
			[
				"terminus",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Terminus: Toggle Panel"
			],
			[
				"terminu",
				"Terminus: Close All"
			],
			[
				"instl",
				"Package Control: Install Package"
			],
			[
				"REMOE",
				"Package Control: Remove Package"
			],
			[
				"reinde",
				"Indentation: Reindent Lines"
			],
			[
				"reind",
				"Indentation: Reindent Lines"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"package",
				"Package Control: Disable Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/dev/src/pylive",
		"/C/dev/src/pylive/expreiments",
		"/C/dev/src/pylive/expreiments/reactive"
	],
	"file_history":
	[
		"/C/dev/src/pylive/pylive/NXPythonGraphEditor/python_graph_model.py",
		"/C/dev/src/pylive/pylive/NXPythonGraphEditor/python_graph_scene_delegate.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/main-network_example.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_network_scene_outlet_to_inlet.py",
		"/C/dev/src/pylive/pylive/NXPythonGraphEditor/main.py",
		"/C/dev/src/pylive/expreiments/reactive/reactive_qt.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_network_scene_delegate.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/bidict/_base.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_newtwork_subgraph_view.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_shapes.py",
		"/C/dev/src/pylive/expreiments/edifice_youtube_playlist/youtube_main.py",
		"/C/dev/src/pylive/expreiments/edifice_youtube_playlist/youtube_helpers.py",
		"/C/dev/src/music_library_manager/main.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_node_inspector_view.py",
		"/C/dev/src/pylive/pylive/NXPythonGraphEditor/python_data_viewer.py",
		"/C/Program Files/WindowsApps/PythonSoftwareFoundation.Python.3.12_3.12.2288.0_x64__qbz5n2kfra8p0/Lib/contextlib.py",
		"/C/dev/src/pylive/pylive/utils/qt.py",
		"/C/dev/src/pylive/pylive/NXPythonGraphEditor/<class 'networkx.utils.decorators.argmap'> compilation 8",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/algorithms/dag.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/algorithms/traversal/breadth_first_search.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/digraph.py",
		"/C/dev/src/pylive/tests/test_python_graphmodel.py",
		"/C/dev/src/pylive/tests/test_nx_graph_model.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/filters.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/function.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/graph.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_node_inspector_delegate.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_network_model.py",
		"/C/dev/src/pylive/pylive/QtScriptEditor/components/jedi_completer.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_node_proxy_model.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_standard_network_delegate.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/main-graph_example.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/reportviews.py",
		"/C/dev/src/pylive/pylive/OLD QtGraphEditor/mindmap_example.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/main.py",
		"/C/dev/src/pylive/pylive/examples/livescript OLD.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/PythonGraphEditor/main.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/PythonGraphEditor/python_data_viewer.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/PythonGraphEditor/function_inspector_view.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/PythonGraphEditor/python_graph_model.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/PythonGraphEditor/python_graph_delegate.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/__init__.py",
		"/C/dev/src/pylive/model-view-delegate-pattern-template.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_python_graph_with_exec.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/OLD nx_graph_view.py",
		"/C/dev/src/pylive/pylive/OLD QtGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_view.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/graph_model.py",
		"/C/dev/src/pylive/pylive/utils/diff.py",
		"/C/dev/src/pylive/pylive/utils/qtfactory.py",
		"/C/dev/src/pylive/expreiments/qml/main.qml",
		"/C/dev/src/pylive/expreiments/qml/main.py",
		"/C/dev/src/pylive/expreiments/qml/qml-simple-demo.qml",
		"/C/Users/and/Downloads/Main.qml",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_selection_model.py",
		"/C/dev/src/pylive/pylive/utils/graph.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/algorithms/traversal/depth_first_search.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/function_widget.py",
		"/C/dev/src/pylive/pylive/utils/graph_layout.py",
		"/C/dev/src/pylive/expreiments/QGraphicsColorizeEffect_with_QGraphicsItem_Example.py",
		"/C/dev/src/pylive/TODOs.md",
		"/C/dev/src/pylive/tests/nx_netowrk_model.py",
		"/C/Users/and/AppData/Local/Sublime Text/Package Storage/LSP-pyright/20.17.0/language-server/node_modules/pyright/dist/typeshed-fallback/stubs/networkx/networkx/classes/multidigraph.pyi",
		"/C/dev/src/pylive/expreiments/inspect_functions_experiment.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/direct/tkpanels/Inspector.py",
		"/C/dev/src/pylive/expreiments/inspect_available_functions.py",
		"/C/dev/src/pylive/pylive/options_dialog.py",
		"/C/dev/src/pylive/pylive/examples/visual_coding.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_network_scene.py",
		"/C/dev/src/pylive/pylive/utils/geo.py",
		"/C/dev/src/pylive/script_examples_to_run_live/rounded_link_item.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_with_exec.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_graph_with_exec.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/main.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_scene-SUBCLASS-example.py",
		"/C/dev/src/pylive/pyproject.toml",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_inspector_view.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_scene-STANDALONE.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/classes/multidigraph.py",
		"/C/dev/src/pylive/pylive/QtTerminal/terminal_with_exec.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/NetworkXGraphEditor/nx_graph_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_inspector_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_model.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_scene.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/qtpy_nodeeditor.py",
		"/C/dev/src/pylive/expreiments/ipython/embedded_qtconsole.py",
		"/C/dev/src/pylive/expreiments/display_builtin_icons.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_selection_model.py",
		"/C/dev/src/pylive/tests/test_diff.py",
		"/C/dev/src/pylive/pylive/utils/unique.py",
		"/C/dev/src/pylive/pylive/utils/sugiyama_layout.py",
		"/C/dev/src/pylive/.venv/Lib/site-packages/networkx/drawing/layout.py",
		"/C/dev/src/pylive/pylive.sublime-project",
		"/C/dev/src/pylive/pylive/QtGraphEditor/nx_graph_graphics_scene_with_ports.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/qgraphics_arrow_item.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/dag_graph_graphics_scene.py",
		"/C/dev/src/pylive/expreiments/qstyle_draw_ptimitive_elements.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/infinite_graphicsview_optimized.py",
		"/C/Users/andris/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages/PySide6/QtCore.pyi",
		"/C/dev/src/pylive/pylive/QtGraphEditor/node_connection_tool.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/text_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/circle_widget.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/pin_connection_tool.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphEditor/graphview_with_delegate.py",
		"/C/dev/src/pylive/pylive/examples/python_function_graph/python_graph_model.py",
		"/C/Users/andris/Downloads/SideFX Houdini 20.5.278 x64 Win/readme.txt",
		"/C/Users/andris/Documents/Blender/Assets/blender_assets.cats.txt",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/nx_graph_view.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/standard_graph_delegate.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NetrowkXGraphditor/link_graphics_items.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphmodel_databased.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/graphview_databased.py",
		"/C/dev/src/pylive/pylive/QtGraphEditor/NXGraphView.py",
		"/C/dev/src/pylive/expreiments/built-a-dependency-graph-of-a-python-codebase.py",
		"/C/dev/src/pylive/pylive/QtLiveApp/live_script_skeleton.py",
		"/C/dev/src/pylive/script_examples_to_run_live/text_processing.py",
		"/C/dev/src/pylive/expreiments/run-script-in-terminal.py",
		"/C/Users/andris/AppData/Local/Sublime Text/Package Storage/LSP-pyright/18.15.0/language-server/node_modules/pyright/dist/typeshed-fallback/stdlib/pathlib.pyi",
		"/C/dev/src/pylive/expreiments/connect_to_ipython.py",
		"/C/dev/src/pylive/pylive/__main__.py",
		"/C/dev/src/pylive/expreiments/ipython/notebook_with_ipython.py",
		"/C/dev/src/pylive/expreiments/ipython/notbook_with_chatgpt.py",
		"/C/dev/src/pylive/tests/test_cells.py"
	],
	"find":
	{
		"height": 25.3333333333
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"EMPTY",
			"print",
			"logging",
			"print",
			"selection_model",
			"nodeAttributesAb",
			"push",
			"blockSignals",
			"block",
			"updateAttr",
			"updateAttri",
			"_selectionModel",
			"StandardNodeItem",
			"prop",
			"_Node",
			"PythonGraphDelegate",
			"Q.",
			"addFunction",
			"nodesPropertiesChanged",
			"nodesChanged",
			"nodesPropertiesChanged",
			"onNodesCreated",
			"_property_editors",
			"_node_graphics_objects",
			"delegate",
			"fn",
			"getFunction",
			"selectedNodes()[0]",
			"selectedNodes[0]",
			"onNodesProperiesChanged",
			"PythonGraphDelegate",
			"None",
			"setNodePropertyEditor",
			"createPropertyEditor",
			"):\n",
			"setNodeProp",
			"createPropert",
			"NXNetworkModel",
			"createProp",
			"isin",
			"nodesPropertiesChanged.connect",
			"class Change",
			"nodesPropertiesChanged",
			"nodePropertiesChanged",
			"class Change",
			"Change",
			"selectionmodel",
			"options",
			"createNode",
			"creatNode",
			"AbstractS",
			"makeArrow",
			"Rounded",
			"LinkId",
			"_inletEditorAt",
			"selectionmodel",
			"selectionodel",
			"QSplitter",
			"ConnectionEnterType",
			"grabM",
			"NXGraphScene",
			"move(",
			"_target_graphics_objects",
			"sourceGr",
			"updateAtta",
			"_inlet",
			"link.move",
			"move(",
			"move",
			"move(",
			"edges[",
			"move(",
			"import",
			"outletGraphicsObject(",
			"NXGraphModel",
			"modified",
			"LinkW",
			"hoverMoveEvent",
			"ConnectionEvent",
			"NodeWidget",
			"EdgeWidget",
			"change",
			"})\n",
			"handleEdgesRe",
			"nodespropertyChanged.emit",
			"Nodewidget",
			"gradient",
			"makeArrowS",
			"EdgeWidget",
			"addEdge",
			"EdgeWidget",
			"targetChanged",
			"NodeWidget",
			"makeLine",
			"setAccepted",
			"accept",
			"ConnectionDropType",
			"connectionEnterEvent",
			"AlignmentFlag",
			"print(",
			"nodeAt",
			"AttributesTable",
			"setLabelT",
			"size",
			"unchanged",
			"current",
			"print",
			"destroy",
			"_is_connection_entered",
			"QPen",
			"d1 <",
			"d1 >",
			"d2 >",
			"d2>",
			"d1",
			"            \"",
			"CC_CustomBase",
			"CE_ShapedFrame",
			"connectionDrop",
			"connectionDio",
			"_target",
			"ConnectionDropType",
			"connectionDropEvent",
			"]\n",
			"QStyle.PE_PanelMenu    48  The panel for a menu.\n",
			"ConnectionEvent",
			".map",
			"QTransform"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"nodesChanged",
			"EdgeId",
			"LinkEvent",
			"VertexWidget",
			"LinkWidget",
			"ConnectionEvent",
			"interactive_edge_moving_pin",
			"interactive_edge_fixed_pin",
			"interactive_edge_moving_pin",
			"EdgeGraphicsItem",
			"InletGraphicsItem",
			"OutletGraphicsItem",
			"PinGraphicsItem",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"EdgeRef",
			"OutletRef",
			"InletRef",
			"NodeRef",
			"OutletRef",
			"InletRef",
			"EdgeRef",
			"NodeRef",
			"EdgeDataColumn",
			"OutletDataColumn",
			"InletDataColumn",
			"NodeDataColumn",
			"EdgeView",
			"InletView",
			"OutletView",
			"self._edgeTable",
			"self._outletTable",
			"self._inletTable",
			"self._nodeTable"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "expreiments/reactive/reactive_qt.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 398,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"allow_quiet_save": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ".[\"'",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "LSP-pyright"
								}
							],
							"lsp_active": true,
							"lsp_uri": "file:///C:/dev/src/pylive/expreiments/reactive/reactive_qt.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.3333333333
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				2,
				0,
				3,
				1
			]
		],
		"cols":
		[
			0.0,
			0.440049321824,
			0.872700369914,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 240.0
	},
	"output.Debugger Console":
	{
		"height": 240.0
	},
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 412.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 215.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Python: Run File (CrossPlatform)",
	"project": "pylive.sublime-project",
	"replace":
	{
		"height": 46.6666666667
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"nx python gr",
				"pylive\\NXPythonGraphEditor\\python_graph_model.py"
			],
			[
				"nxgrap",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nxgraph",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"python ",
				"pylive\\NXPythonGraphEditor\\python_graph_model.py"
			],
			[
				"data view",
				"pylive\\NXPythonGraphEditor\\python_data_viewer.py"
			],
			[
				"python gr",
				"pylive\\NXPythonGraphEditor\\python_graph_model.py"
			],
			[
				"nx node ins",
				"pylive\\NetworkXGraphEditor\\nx_node_inspector_view.py"
			],
			[
				"nx graph",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nx graph model",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nx node inspector dele",
				"pylive\\NetworkXGraphEditor\\nx_node_inspector_delegate.py"
			],
			[
				"inspector",
				"pylive\\NetworkXGraphEditor\\nx_node_inspector_view.py"
			],
			[
				"nx netw",
				"pylive\\NetworkXGraphEditor\\nx_network_model.py"
			],
			[
				"nx grap",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nx network",
				"pylive\\NetworkXGraphEditor\\nx_network_model.py"
			],
			[
				"nx graph mod",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"graph model",
				"pylive\\examples\\python_function_graph\\graph_model.py"
			],
			[
				"nx",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nx graph mode",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nxgraph se",
				"pylive\\NetworkXGraphEditor\\nx_graph_selection_model.py"
			],
			[
				"test n",
				"tests\\test_nx_graph_model.py"
			],
			[
				"nx ",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nxgraphm",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"nxgr",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"shapes",
				"pylive\\NetworkXGraphEditor\\nx_graph_shapes.py"
			],
			[
				"nx network sce",
				"pylive\\NetworkXGraphEditor\\nx_network_scene_outlet-to-inlet.py"
			],
			[
				"geo",
				"pylive\\utils\\geo.py"
			],
			[
				"shape",
				"pylive\\NetworkXGraphEditor\\nx_graph_shapes.py"
			],
			[
				"nx net",
				"pylive\\NetworkXGraphEditor\\nx_network_scene.py"
			],
			[
				"round",
				"script_examples_to_run_live\\rounded_link_item.py"
			],
			[
				"nx graph s",
				"pylive\\NetworkXGraphEditor\\nx_graph_shapes.py"
			],
			[
				"nx graph mo",
				"pylive\\NetworkXGraphEditor\\nx_graph_model.py"
			],
			[
				"icons",
				"expreiments\\display_builtin_icons.py"
			],
			[
				"nxselection",
				"pylive\\QtGraphEditor\\nx_graph_selection_model.py"
			],
			[
				"nx graph graphics",
				"pylive\\QtGraphEditor\\nx_graph_graphics_scene.py"
			],
			[
				"nx graph grap",
				"pylive\\QtGraphEditor\\nx_graph_view.py"
			],
			[
				"nx gr",
				"pylive\\QtGraphEditor\\nx_graph_graphics_scene_with_ports.py"
			],
			[
				"arrowi",
				"pylive\\QtGraphEditor\\NetrowkXGraphEditor\\qgraphics_arrow_item.py"
			],
			[
				"link",
				"pylive\\QtGraphEditor\\NetrowkXGraphEditor\\link_graphics_items.py"
			],
			[
				"DagSc",
				"pylive\\QtGraphEditor\\dag_graph_graphics_scene.py"
			],
			[
				"dag graphics ",
				"pylive\\QtGraphEditor\\dag_graph_graphics_scene.py"
			],
			[
				"test py",
				"tests\\test_python_graphmodel.py"
			],
			[
				"main",
				"pylive\\examples\\python_function_graph\\main.py"
			],
			[
				"nxgraphmo",
				"pylive\\QtGraphEditor\\nx_graph_model.py"
			],
			[
				"standard",
				"pylive\\QtGraphEditor\\NetrowkXGraphditor\\standard_graph_delegate.py"
			],
			[
				"graphmodel",
				"pylive\\pylive\\QtGraphEditor\\graphmodel_databased.py"
			],
			[
				"graphview",
				"pylive\\pylive\\QtGraphEditor\\graphview_databased.py"
			],
			[
				"build-a",
				"pylive\\expreiments\\built-a-dependency-graph-of-a-python-codebase.py"
			],
			[
				"conne",
				"pylive\\expreiments\\connect_to_ipython.py"
			],
			[
				"number",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"lint",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"script_",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"scriptedit",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"cell_s",
				"pylive\\pylive\\QtScriptEditor\\cell_support.py"
			],
			[
				"live_framewo",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"link file",
				"pylive\\expreiments\\file_textdocument_link.py"
			],
			[
				"jedi",
				"pylive\\pylive\\QtScriptEditor\\components\\jedi_completer.py"
			],
			[
				"with_exec",
				"pylive\\pylive\\QtLiveFramework\\live_framework_with_exec.py"
			],
			[
				"framew",
				"pylive\\pylive\\QtLiveFramework\\live_framework_skeleton.py"
			],
			[
				"moderngl",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"modenr",
				"pylive\\expreiments\\3d_rendering\\pygame_moderngl_boilerplate.py"
			],
			[
				"regl",
				"pylive\\pylive\\render_engine\\regl\\regl.py"
			],
			[
				"logwind",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"resou",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"render",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"resource",
				"pylive\\pylive\\render_engine\\resource_manager.py"
			],
			[
				"modern",
				"pylive\\pylive\\render_engine\\glwidget_with_moderngl.py"
			],
			[
				"unifie",
				"pylive\\expreiments\\unified_titlebar.py"
			],
			[
				"camer",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"linter",
				"pylive\\pylive\\QtScriptEditor\\components\\linter_widget.py"
			],
			[
				"Script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"camera",
				"pylive\\pylive\\render_engine\\camera.py"
			],
			[
				"orbit",
				"pylive\\pylive\\render_engine\\orbit_control.py"
			],
			[
				"renderl",
				"pylive\\pylive\\render_engine\\render_layers.py"
			],
			[
				"live",
				"pylive\\pylive\\examples\\livescript.py"
			],
			[
				"orbitcon",
				"pylive\\expreiments\\3d_rendering\\orbit_control.py"
			],
			[
				"script",
				"pylive\\pylive\\QtScriptEditor\\script_edit.py"
			],
			[
				"number editor",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_number_editor.py"
			],
			[
				"whitespace",
				"pylive\\pylive\\QtScriptEditor\\components\\WhitespaceHighlighter.py"
			],
			[
				"pygme",
				"pylive\\pylive\\QtScriptEditor\\components\\pygments_syntax_highlighter.py"
			],
			[
				"highlighte",
				"pylive\\pylive\\QtScriptEditor\\highlighters.py"
			],
			[
				"textedito",
				"pylive\\pylive\\QtScriptEditor\\components\\textedit_completer.py"
			],
			[
				"keywo",
				"pylive\\pylive\\QtScriptEditor\\components\\KeywordsCompleter.py"
			],
			[
				"scrip",
				"pylive\\pylive\\QtScriptEditor\\ScriptEdit.py"
			],
			[
				"logw",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"capture",
				"pylive\\.venv\\Lib\\site-packages\\IPython\\utils\\capture.py"
			],
			[
				"preview",
				"pylive\\pylive\\preview_widget.py"
			],
			[
				"pan",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"panand",
				"pylive\\pylive\\QtGraphEditor\\PanAndZoomGraphicsView.py"
			],
			[
				"visu",
				"pylive\\pylive\\examples\\visual_coding.py"
			],
			[
				"log",
				"pylive\\pylive\\logwindow.py"
			],
			[
				"livescript",
				"pylive\\pylive\\LiveScript.py"
			],
			[
				"mind",
				"pylive\\pylive\\QtGraphEditor\\mindmap_example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 59.3333333333,
		"last_filter": "setSelec",
		"selected_items":
		[
			[
				"setSelec",
				"setSelectionModel"
			],
			[
				"setSource",
				"setSourceOutlet"
			],
			[
				"circle",
				"CircleWidget"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 397.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
